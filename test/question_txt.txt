<p>&lt;p&gt;&lt;strong&gt;下面哪些函数是public void aMethod(){...}的重载函数?&lt;/strong&gt;&lt;/p&gt;</p>
<p><strong>尝试运行下面的代码会发生什么？</strong></p><p>&nbsp;</p><p>public class Test {</p><p>public static void main(String[] args) {</p><p>boolean m = true;</p><p>if (m = false) {</p><p>System.out.println("true");</p><p>} else {</p><p>System.out.println("false");</p><p>}}}</p>
<p><strong>分析代码，运行结果为：</strong></p><p>&nbsp;</p><p>public class BaseClass{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public BaseClass(){</p><p>System.out.println(“父类”);</p><p>}</p><p>}</p><p>class SubClass extends BaseClass{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public SubClass (){</p><p>System.out.println(“子类”);</p><p>}</p><p>&nbsp;</p><p>public static void main(String[] args){</p><p>new SubClass();</p><p>}</p><p>}</p>
<p><strong>以下关于方法调用的代码的执行结果是</strong></p><p>&nbsp;</p><p>&nbsp;public class Test {</p><p>&nbsp;&nbsp;&nbsp;public static void main(String args[]) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i = 99;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mb_operate(i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(i + 100);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;static int mb_operate(int i) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;i + 100;</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p>
<p><strong>Person类和Test类的代码如下所示，则代码中的错误语句是</strong></p><p>&nbsp;</p><p>&nbsp;public class Person {</p><p>&nbsp;&nbsp;&nbsp;public String name;</p><p>&nbsp;&nbsp;&nbsp;public Person(String name) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.name = name;</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>public class Test {</p><p>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final Person person = new Person(“欧欧”);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person.name = “美美”;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person = new Person(“亚亚”);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p>
<p><strong>以下关于异常的代码的执行结果是（ ）。</strong></p><p>&nbsp;</p><p>public class Test {</p><p>&nbsp;&nbsp;&nbsp;public static void main(String args[]) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(“try”);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(Exception e){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(“catch”);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}finally {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(“finally”);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p>
<p>面向对象的特征</p>
<p>asc</p>
<p>123</p>
<p>234</p>
<p>3</p>
<p>4</p>
<p>5</p>
<p>6</p>
<p>7</p>
<p>8</p>
<p>9</p>
<p>10</p>
<p>main方法是Java程序执行的入口点，关于main方法的方法描述，以下哪项是合法的</p>
<p>下列选项中不属于Java语言平台的是（）</p>
<p>在进行 Java 代码编译和运行的过程中，哪种格式的文件可以被编译成字节码文件（）</p>
<p>表单中的数据要提交到哪里处理,由表单的属性指定( )</p>
<p>页面中需要增加链接a标签，正确的HTML代码是( )</p>
<p>以下选项中哪个全部都是表格标签( )</p>
<p>下面不是CSS选择器的( )</p>
<p>边框的宽度通过哪个指定？( )</p>
<p>以下创建javascript方法声明的正确格式为( )</p>
<p>下面不是document对象的方法是( )</p>
<p>对于id为"name"的文本框，判断其不为空的正确javaScript代码是( )</p>
<p>以下用来获取DOM元素中最后一个元素的是：( )</p>
<p>jQuery中下面哪个实现用来追加到指定元素的末尾的方法？</p>
<p>jquery中从DOM中删除所有匹配的元素，下面哪个可以实现？</p>
<p>jquery中如何选取class=’myClass’属性的所有元素？</p>
<p>当DOM加载完成后要执行的函数，下面哪个是正确的？</p>
<p>下面哪种不是jQuery的选择器？</p>
<p>JQuery中，属于鼠标事件方法的选项是()</p>
<p>下面关于HTML描述正确的是( )</p>
<p>Form表单的method属性值有哪些情况可设置( )</p>
<p>以下javascript创建函数声明格式不正确的( )</p>
<p>下面哪些是jQuery的选择器？</p>
<p>以下关于jQuery的描述正确的是（ ）</p>
<p>下列命令哪个是用来展示目录内容的（）</p>
<p>下列Java语言中可用的注释符，其中错误的是（）</p>
<p>Java 程序经过编译后生成的文件的后缀名是（）</p>
<p>下列对于代码注释正确的是（）</p>
<p>关于jdk，jre，jvm三者关系正确的是？</p>
<p>关于Java标识符的特点说法正确的是（）</p>
<p>在图片第三行的位置插入哪些代码会导致编译不通过（）</p><p>1 public class Cust {</p><p>2 public static void main(String[] args) {</p><p>3</p><p>4 System.out.println("Hello world");</p><p>5 }</p><p>6	}</p>
<p>&nbsp;下列哪个是 short 类型的值的范围？（）</p>
<p>下列选项不属于基本数据类型的是（）</p>
<p>下列选项中不能进行自动类型提升的是&nbsp;()</p>
<p>下列选项中不能进行自动类型提升的是&nbsp;()</p>
<p>int a = 11;</p><p>System.out.println( a/2 );</p><p>以上代码已正确定义，输出结果为()</p>
<p>&nbsp;double型基本数据在内存中占的字节数是()</p>
<p>下面代码输出结果正确的是（）</p><p>public static void main(String[] args) {</p><p>int y = 1;</p><p>y=y++;</p><p>System.out.println(y);</p><p>}</p>
<p>代码中括号内填写什么类型可以使代码编译通过</p><p><br></p><p>public static void main(String[] args) {</p><p>int a=1;</p><p>byte b=2;</p><p>short C= 3;</p><p>double d = 4;</p><p>() e = a*3-4*b*c/d+a+c*4;</p><p><br></p><p>}</p>
<p>下列程序执行的结果是</p><p>public static void main(String[] args) {</p><p>int x = 5;</p><p>System.out.println(x*=5);</p><p>}&nbsp;</p>
<p>public static void main(String[] args) {</p><p>System.out.println( ""+a +2 );</p><p>}</p><p>代码执行的结果是（）</p>
<p>关于下列代码说法正确的是：（）。</p><p>public static void main(String[] args) {</p><p>int words = 40;</p><p>System.out.println(words);</p><p>System.out.println(computers);</p><p>words = 67.9;</p><p>}</p>
<p>判断下列代码的输出结果：</p><p>int x = 1,y = 1;</p><p>if(x++==2 &amp;&amp; ++y==2)</p><p>{</p><p>x =7;</p><p>}</p><p>System.out.println("x="+x+",y="+y);&nbsp;</p>
<p>下列语句序列执行后，x 的值是( )。【单选】</p><p>public static void main(String[] args){</p><p>int a=2,b=4,x=5;</p><p>if (a&lt;--b)</p><p>x*=a;</p><p>System.out.println(x) ;</p><p>}</p>
<p>下列语句序列执行后，x 的值是( )</p><p>public static void main(String[] args){</p><p>int a=2,b=4,x=5;</p><p>if (a&lt;--b)</p><p>x*=a;</p><p>System.out.println(x) ;</p><p>}</p>
<p>（操作符）有如下代码：</p><p>int a = 5;</p><p>int b =5+a++;</p><p>问执行完之后，b 的结果是多少？</p>
<p>下列代码段执行后的输出结果是（）</p><p>int x=3; int y=10;</p><p>System.out.println(y%x);&nbsp;</p>
<p>当下列程序执行时，其输出结果是：（）</p><p>int x = 5; int y = 2;</p><p>System.out.println(x+ y + "k");&nbsp;</p>
<p>若x是float类型变量，x=10/4;则x 的值是（）</p>
<p>int a=1;</p><p>int b=2;</p><p>int c= a&gt;b?1:0；</p><p>c的值是()</p>
<p>若x=3,y=2,z=1,求下列表达式的z的值为（） z += (x&amp;lt;y?x++:y++);</p>
<p>设int m=5; int n=m--; n=--m，则n的值为()</p>
<p>下列选项中程序运行结果错误的是()</p><p>public static void main(String[] args) {</p><p>boolean a=true ;</p><p>boolean b=false;</p><p>if(!a &amp;&amp; b){</p><p>System. out. print("!a&amp;&amp;b") ;</p><p>}else if(!a|| b){</p><p>System. out.print("!a||b");</p><p>}else{</p><p>System. out. print("ab");</p><p>}</p><p>}</p>
<p>下列程序运行的结果是（）</p><p>public static void main(String[] args) {</p><p>int[] a = new int[10];</p><p>System.out.println(a[10]);</p><p>}</p>
<p>定义数组int[] a={14443,433225}; int[] b=a;则b.length的值为&nbsp;（）</p>
<p>数组int[] i = new int[10];其中数组i最大的索引值为（）</p>
<p>定义了数组int [] a=new int[10]；下列赋值错误的是&nbsp;（）</p>
<p>数组元素在java中存储在（）</p>
<p>数组元素在java中存储在（）</p>
<p>程序运行的结果是()</p><p>public static void main(String[] args) {</p><p>int a = 3;</p><p>int[] arr = new int[a];</p><p>a=6;</p><p>System.out.println(arr.length);</p><p><br></p><p>}&nbsp;</p>
<p>数组a的第三个元素表现为()</p>
<p>下列选项是程序的运行结果的是（）</p><p>public static void main(String[ ] args) {</p><p>char[] a = {A,B, C,D,E,F};</p><p>int i=0;</p><p>while(a[i++]!=u0000){</p><p>System. out.print1n(a[i++]);</p><p>if(i==4){</p><p>break;</p><p>}</p><p>}</p><p>}</p><p>//0代表转义字符表示空字符</p>
<p>&nbsp;关于 Java 的数组描述正确的是（）</p>
<p>数组定义正确的是()</p>
<p>关于数组的默认值，下列说法错误的是&nbsp;()</p>
<p>定义了二维数组int a[6][7]，数组元素a[3][4]前的数组元素个数为()</p>
<p>定义数组int a[5][6]后,数组a的第10个元素是()</p>
<p>在定义int a[5][4];后，下列选项对a引用正确的是()</p>
<p>设数组a创建的声明为：int a[4][7]，则a.length的值是（）</p>
<p>代码的输出结果为()</p><p>char c[][] = {{a},{b,c},{e,f,g},{i,l,k}};</p><p>System.out.println(c[2].length+" ");</p><p>System.out.println(c.length);&nbsp;</p>
<p>下面二维数组初始化语句中，正确的是&nbsp;()</p>
<p>下列选项中不属于Java面向对象的特性的是()</p>
<p>有下列代码，选项中输出内容正确的是()</p><p>public static void main(String[] args) {</p><p>int elements[]={1,2,3,4,5,6};</p><p>int hold[] = {10,9,8,7, 6,5,4,3,2,1};</p><p>for (int i = 0; i &lt; hold.length; i++) {</p><p>if(i&lt;6){</p><p>hold[i]=elements[i];</p><p>}</p><p>System. out. print(hold[i]);</p><p>}</p><p>}</p>
<p>下列数组定义正确的是()</p>
<p>下列选项说法错误的是()</p>
<p>对于形参和实参下列说法正确的是()</p>
<p>&nbsp;关于类和对象的叙述正确的是：( )&nbsp;</p>
<p>给定java代码，如下：编译运行，结果是（）</p><p>public static void main (String [] args){</p><p>String s;</p><p>System.out.println(“s=”+s);</p><p>}</p>
<p>&nbsp;程序Test.java编译运行后输出的结果是( )。</p><p>public class Test {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;String s1="java";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;public static void main(String args[]) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int z=2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Test t=new Test();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(t.s1+z);</p><p>&nbsp;&nbsp;&nbsp;}</p>
<p>关于方法的形参说法正确的是()</p>
<p>对于方法下列选项说法正确的是()</p>
<p>下列方法定义正确的是&nbsp;()</p>
<p>对于方法返回值类型下列说法正确的是()</p>
<p>声明一个完整非抽象的方法需要()</p>
<p>如果一个变量想要只允许在本类内访问，应选择下列哪一种修饰符()</p>
<p>分析选项中关于Java中this和super关键字的说法正确的是（）</p>
<p>下列代码输出的结果是</p><p>class Db{</p><p>Db() {</p><p>int a=1;</p><p>System. out.println(a);</p><p>}</p><p>}</p><p><br></p><p>public class DbTest2 extends Db {</p><p>public static void main(String[] args) {</p><p>int a = 200;</p><p>DbTest2 d= new DbTest2() ;</p><p>System. out. println(a);</p><p>}</p><p><br></p><p>}</p>
<p>程序将出现何问题()</p><p>class Db {</p><p>string objType;</p><p>Db() {</p><p>objType = "I am a Base type";</p><p>}</p><p>}</p><p>public class DbTest2 extends Db {</p><p>DbTest2() {</p><p>objType = "I am a Derived type" ;</p><p>}</p><p>public static void main(String[] args) {</p><p>DbTest2 d = new DbTest2();</p><p>}</p><p>}</p>
<p>在子类DbTest2的方法m()中不可以操作的变量是</p><p><br></p><p>class Db{</p><p>private int i = 20;</p><p>protected int j = 30;</p><p>public int k = 40;</p><p>int h = 50;</p><p>}</p><p><br></p><p>public class DbTest2 extends Db {</p><p>void m(){</p><p>}</p><p>}</p>
<p>以下描述成员变量和局部变量的区别正确的是()</p>
<p>在Java中，如果类C是类B的子类，类B是类A的子类，那么下面描述正确的是()</p>
<p>编译下面程序，结果是</p><p>public class A{</p><p>&nbsp;&nbsp;&nbsp;public static void main(String[] args){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;B b=new B();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;b.test();</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;void test(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print("A");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>}</p><p><br></p><p>class B extends A{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;void test(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super.test();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print("B");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>}</p>
<p>关于封装下面介绍错误的是（ ）</p>
<p>给定Java程序Child.java的代码如下所示，则编译运行该类的结果是（ ）。</p><p>class Parent {</p><p>&nbsp;&nbsp;Parent() {</p><p>&nbsp;&nbsp;System.out.println("parent");</p><p>}</p><p>}</p><p>public class Child extends Parent {</p><p>&nbsp;&nbsp;Child(String s) {</p><p>&nbsp;&nbsp;System.out.println(s);</p><p>}</p><p>public static void main(String[] args) {</p><p>&nbsp;&nbsp;Child child = new Child("child");&nbsp;</p><p>}</p><p>}</p>
<p>下列代码的执行结果是</p><p><br></p><p>class <span style="color: rgb(153, 168, 186);">Db {</span></p><p><span style="color: rgb(153, 168, 186);">&nbsp;&nbsp;</span>public void <span style="color: rgb(254, 187, 91);">show</span><span style="color: rgb(153, 168, 186);">( ){</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;System . <em style="color: rgb(133, 96, 154);">out </em>. println(<span style="color: rgb(88, 118, 71);">"父类show方法"</span>)<span style="color: rgb(191, 100, 38);">;</span></p><p>&nbsp;&nbsp;<span style="color: rgb(153, 168, 186);">}</span></p><p>}</p><p><span style="color: rgb(153, 168, 186);">&nbsp;&nbsp;</span>class <span style="color: rgb(153, 168, 186);">Db1 </span>extends <span style="color: rgb(153, 168, 186);">Db {</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(191, 100, 38);">public void </span><span style="color: rgb(254, 187, 91);">show</span>( ){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System . <em style="color: rgb(133, 96, 154);">out</em>. println(<span style="color: rgb(88, 118, 71);">"子类show方法"</span>)<span style="color: rgb(191, 100, 38);">;</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(153, 168, 186);">}</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(191, 100, 38);">public void </span><span style="color: rgb(254, 187, 91);">method</span>( ){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<em style="color: rgb(133, 96, 154);">out</em>.println( <span style="color: rgb(88, 118, 71);">"子类method方法"</span>) <span style="color: rgb(191, 100, 38);">;</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(153, 168, 186);">}</span></p><p>}</p><p><span style="color: rgb(153, 168, 186);">&nbsp;&nbsp;&nbsp;&nbsp;</span>public class <span style="color: rgb(153, 168, 186);">DbTest2 </span>extends <span style="color: rgb(153, 168, 186);">Db {</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(191, 100, 38);">public static void </span><span style="color: rgb(254, 187, 91);">main</span>(String[] args) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Db d = <span style="color: rgb(191, 100, 38);">new </span>Db1()<span style="color: rgb(191, 100, 38);">;</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(153, 168, 186);">d. show( )</span>;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(153, 168, 186);">}</span></p><p>}</p>
<p>下列代码运行结果</p><p><br></p><p>class Db {</p><p>int i=20;</p><p>int j=30;</p><p>void f() {</p><p>System. out . print("" + i);</p><p>}</p><p>}</p><p>public class DbTest2 extends Db {</p><p>int i=30;</p><p>int k=40;</p><p>void f() {</p><p>System. out.print("" + i);</p><p>}</p><p>void g() {</p><p>System. out.print("" + k);</p><p>}</p><p>public static void main(String[] args) {</p><p>Db d = new DbTest2();</p><p>System. out . print1n(d.i);</p><p>d.f();</p><p>DbTest2 d2 = (DbTest2) d;</p><p>System. out. println(d2.i);</p><p>d2.f();</p><p>}</p><p>}</p>
<p>程序的执行结果是</p><p><br></p><p>class Db {</p><p>public void printValue() {</p><p>System. out. println("1");</p><p>}</p><p>public void printValue(int i) {</p><p>System. out . println("2");</p><p>}</p><p>}</p><p>public class Woman extends Db {</p><p>public void printValue() {</p><p>System. out. println("3");</p><p>}</p><p>public void printValue(int i) {</p><p>System. out . println("4");</p><p>}</p><p>public static void main(String[] args) {</p><p>Db d = new Woman( );</p><p>d. printValue(10);</p><p>}</p><p>}</p>
<p>类Teacher和Student是类Person的子类：</p><p><br></p><p>Person p;</p><p>Teacher t;</p><p>Student s;</p><p>//p,t and s are all non-null。</p><p><br></p><p>if(t instanceof Person) {s=(Student)t;}</p><p>下列说法错误的是()</p>
<p>下面关于多态性的说法，正确的是()</p>
<p>下列选项中关于Java中super关键字的说法错误的是（ ）</p>
<p>对于instanceof说法正确的是&nbsp;()</p>
<p>编译运行如下Java代码，输出结果是（ ）。</p><p>class Base {</p><p>public void method(){</p><p>System.out.print ("Base method");</p><p>}</p><p>}</p><p>class Child extends Base{</p><p>public void methodB(){</p><p>System.out.print ("Child methodB");</p><p>}</p><p>}</p><p>class Sample {</p><p>public static void main(String[] args) {</p><p>Base base = new Child();</p><p>base.methodB();</p><p>}</p><p>}</p>
<p>父类构造函数何时被调用？ （ ）</p>
<pre class="ql-syntax" spellcheck="false">下面结果正确的是（ ）。&lt;br/&gt; class Db{ String str;&lt;br/&gt; Db(){//第4行&lt;br/&gt; str = "example"; &lt;br/&gt; }&lt;br/&gt; Db(String s){//第8行&lt;br/&gt; str = "s"; &lt;br/&gt; &lt;br/&gt;} &lt;br/&gt;} &lt;br/&gt; class DbTest1 extends Db{}&lt;br/&gt; public class DbTest2{&lt;br/&gt; public static void main(String[] args){&lt;br/&gt; Db d= new Db("Java");//第19行&lt;br/&gt; DbTest1 d1 = new DbTest1("guigu");//第20行&lt;br/&gt; }
</pre><p>}</p>
<p>下列方法定义中，方法头不正确的是（）&nbsp;</p>
<p>下列关于static的描述正确的是（）</p>
<p>下列关于static的描述正确的是（）</p>
<p>&nbsp;给定java程序，如下：</p><p>public class Test{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>private static int counter=10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;public static void main(String [] args){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;System.out.println(++counter);&nbsp;&nbsp;</p><p>&nbsp;}</p><p>}</p><p>编译运行Test.java，结果是</p>
<p>下列代码运行结果正确的是（）</p><p>public class Base {</p><p>static int i;</p><p>public static void main(String[] args) {</p><p>System.out.println(i);</p><p>}</p>
<p>下列代码执行结果正确的是（）</p><p>public static void main(String[] args) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;String s1 = new String("hello");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;String s2 = new String("hello");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s1 == s2);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s1.equals(s2));</p><p>}</p>
<p>用于定义类成员的访问控制权的一组关键字是( )</p>
<p>判断：静态成员既可以通过对象名来访问,也可以通过类名直接访问它。</p>
<p>下面关于多态性的说法，正确的是（）</p>
<p>下列选项中关于Java中封装的说法错误的是（ ）</p>
<p>在Java语言中，下列关于类的继承的描述，正确的是（ ）</p>
<p>以下代码输出正确的是（）</p><p><br></p><p>public class Base extends Pri{</p><p>public static void main(String[] args) {</p><p>Pri p=new Pri();</p><p>p . method();&nbsp;</p><p>}</p><p>class Pri{</p><p>public final void method( ) {</p><p>System . out . println(”method");</p><p>}</p><p>}</p>
<p>下面把方法声明为抽象方法正确的是?&nbsp;</p>
<p>在Java中，如果父类中的某些方法不包含任何逻辑，并且需要有子类重写，应该使用（ ）关键字来声明父类的这些方法</p>
<p>下面关于Java接口的说法错误的是（ ）</p>
<p>&nbsp;如下Java代码运行的结果是（ ）</p><p>public class Test {</p><p>final int age;</p><p>public Test(){</p><p>age=10;</p><p>}</p><p><br></p><p>public static void main(String[ ] args) {</p><p>System.out.println(new Test().age);</p><p>}</p>
<p>给定两个java程序，如下：</p><p>public interface Face{</p><p>int counter = 40;</p><p>}</p><p><br></p><p>public class Test implements Face{</p><p>private static int counter;</p><p>public static void main(String[] args) {</p><p>System.out.println(++counter) ;</p><p>}</p><p><br></p><p>}</p><p>Test.java的编译运行结果是( )。</p>
<p>下列代码说法正确的是（）</p><p>public class MyAr {</p><p><br></p><p>public static void main(String[] args) {</p><p>MyAr ma = new MyAr();</p><p>ma.method();</p><p>}</p><p><br></p><p>public void method() {</p><p>static int i;</p><p>System.out.println(i);</p><p>}</p><p>}</p>
<p>下面关于外部类和内部类成员的相互访问的规则中，正确的选项是( )</p>
<p>下列选项中，关于Java的抽象类和抽象方法说法正确的是（ ）</p>
<p>Java中有关final关键字，下列说法正确的是（）</p>
<p>使用enum定义枚举类，下列说法正确的是（）</p>
<p>关于实现接口的枚举类，下列说法错误的是（）</p>
<p>JDK自带注解不包括（）</p>
<p>下列不属于Java中元注解的是（）</p>
<p>下列对注解定义错误的是&nbsp;()</p>
<p>下列哪个是注解的正确声明()</p>
<p>下列关于@Target的值表示运用位置解释错误的是()</p>
<p>元注解是可以注解到注解上的注解，或者说元注解是一种基本注解，但是它能够应用到其它的注解上面。</p>
<p>Java中，枚举类以下说法正确的是（）</p>
<p>下列说法正确的是（）</p>
<p>下面关于Java中异常处理try块的说法正确的是（）</p>
<p>下面表述错误的是&nbsp;（）</p>
<p>下面异常的处理代码格式正确的是</p><p>1、</p><p>private static void method() {</p><p>try {</p><p>System.out.println(1);</p><p>//System. out. println(2 1 0);</p><p>System.out.println(2);</p><p>} catch{</p><p>System. out . println( "除数不能为0");</p><p>}</p><p>System. out. println(3);</p><p>}</p><p><br></p><p>2、</p><p>private static void method() {</p><p>try (){</p><p>System. out . println(1);</p><p>//System. out. println(2 1 0);</p><p>System. out . println(2);</p><p>} catch(ArithmeticException ae) {</p><p>System. out . println( "除数不能为0");</p><p>}</p><p>System. out . println(3);</p><p>}</p><p><br></p><p>3、</p><p>private static void method() {</p><p>try {</p><p>System. out . println(1);</p><p>//System. out . println(2 1 0);</p><p>System. out . println(2);</p><p>} catch(ArithmeticException e) {</p><p>System.out.println( "除数不能为0");</p><p>System.out.println(3);</p><p>}</p><p>}</p><p><br></p><p>4、</p><p>private static void method() {</p><p>try {</p><p>System.out.print1n(1);</p><p>//System.out.println(2 / 0);</p><p>System.out.print1n(2);</p><p>} catch() {</p><p>System. out . println( "除数不能为0");</p><p>}</p><p>System. out . println(3);</p><p>}</p>
<p>下面描述错误的是&nbsp;（）</p>
<p>下面关于异常的描述错误的是（）</p>
<p>下列程序运行结果是？</p><p>try <span style="color: rgb(153, 168, 186);">{</span></p><p>&nbsp;&nbsp;<span style="color: rgb(191, 100, 38);">int</span>[] arr = <span style="color: rgb(191, 100, 38);">new int</span>[<span style="color: rgb(86, 132, 173);">10</span>]<span style="color: rgb(191, 100, 38);">;</span></p><p><span style="color: rgb(191, 100, 38);">&nbsp;&nbsp;</span>System.<em style="color: rgb(133, 96, 154);">out</em>.println(arr[<span style="color: rgb(86, 132, 173);">0</span>])<span style="color: rgb(191, 100, 38);">;</span></p><p>&nbsp;&nbsp;<span style="color: rgb(153, 168, 186);">arr = </span>null ;</p><p><span style="color: rgb(191, 100, 38);">&nbsp;&nbsp;</span>System.<em style="color: rgb(133, 96, 154);">out</em>.println(arr[<span style="color: rgb(86, 132, 173);">10</span>])<span style="color: rgb(191, 100, 38);">;</span></p><p>} <span style="color: rgb(191, 100, 38);">catch </span>(ArrayIndexOutOfBoundsException e){</p><p>&nbsp;&nbsp;System.<em style="color: rgb(133, 96, 154);">out</em>.println(<span style="color: rgb(88, 118, 71);">"数组角标越界"</span>)<span style="color: rgb(191, 100, 38);">;</span></p><p>} <span style="color: rgb(191, 100, 38);">catch </span>(NullPointerException e) {</p><p>&nbsp;&nbsp;System.<em style="color: rgb(133, 96, 154);">out</em>.println(<span style="color: rgb(88, 118, 71);">"空指针异常"</span>)<span style="color: rgb(191, 100, 38);">;</span></p><p>}</p>
<p>下列关键字能和try一起使用的有（）</p>
<p>关于异常，下列描述正确的是？</p>
<p>关于异常处理机制，下列说法正确的是？</p>
<p>关于finally说法正确的是？</p>
<p>&nbsp;当方法遇到异常(编译时异常)又不知如何处理时，下列哪种说法是正确的（）</p>
<p>123</p>
<p>Http的中文含义为( )</p>
<p>下面关于tomcat服务器描述正确的是( )</p>
<p>tomcat安装成功后默认的端口是( )</p>
<p>Web应用程序中web.xml是放置以下哪个目录中( )</p>
<p>下面有关Servlet的描述错误的是( )</p>
<p>下面不是Servlet可处理的方法是( )</p>
<p>下面是Servlet可处理的方法是( )</p>
<p>进行重定向时，调用response对象的( )方法</p>
<p>用户使用POST方式提交的数据中存在汉字（使用GBK字符集），在servlet中需要使用下述( )语句处理.</p>
<p>jsp最终被运行的文件类型是( )</p>
<p>下面不属于JSP指令的是：( )</p>
<p>jsp动作标签用于转向另一个页面( )</p>
<p>四个域对象的作用范围从小到大依次为( )</p>
<p>以下哪个EL隐含对象可以获取请求参数中的值：( )</p>
<p>要使用JSTL的核心标签库需要在JSP源文件的首部加入如下声明语句( )</p>
<p>以下标签用于实现循环功能的( )，类似与Java语句中的for循环</p>
<p>在JSP中，page指令的属性有( )</p>
<p>在运行的web应用程序的WEB-INF/目录结构中，会有( )文件</p>
<p>EL中的隐含对象有 ( )</p>
<p>以下( )标签属于JSTL核心标签库</p>
<p>JSP中，HTML注释的特点是( )</p>
<p>以下对SpringBoot描述正确的是</p>
<p>SpringBoot的核心注解有哪些？</p>
<p>开启SpringBoot 特性有哪几种方式？</p>
<p>SpringBoot Starter的工作原理</p>
<p>SpringBoot我们常用的配置是哪些</p>
<p>下列哪些是SpringBoot常用注解</p>
<p>假设SpringBoot环境下yml配置文件中有一个属性是aaa.bb.ccc: uuu，问如何通过@Value注解取出这个属性的值？</p>
<p>使用RabbitMQ有什么好处？</p>
<p>使用RabbitMQ有什么好处？</p>
<p>RabbitMQ的消息模式有</p>
<p>RabbitMQ 的特点</p>
<p>常见的 MQ产品 描述错误的是</p>
<p>以下对RabbitMq 说法错误的是</p>
<p>关于JMS，以下说法错误的是</p>
<p>springcloud 的常用注解</p>
<p>微服务的优点</p>
<p>微服务的优点</p>
<p>为什么要用springcloud</p>
<p>springcloud 包含那些组件</p>
<p>Hystrix 有哪些好处</p>
<p>rabbitmq 怎么避免消息丢失？</p>
<p>关于fegin，以下说法错误的是</p>
<p>&nbsp;以下内容关于stmt对象操作数据，正确的描述是（）</p><p><br></p><p>Class. forName("com. mysq1. jdbc .Driver");</p><p>Connection conn = DriverManager . getConnection("jdbc:mysq1:///day24", "root", "root");</p><p>System. out . print1n(conn);</p><p>//从连接中拿到一个Statement对象</p><p>Statement stmt = conn. createStatement( ) ;</p>
<p>以下不属于事务特性的是</p>
<p>以下关于连接查询的描述正确的是</p>
<p>以下描述错误的是</p>
<p>以下关于事务描述错误的是</p>
<p>以下关于事务的描述错误的是</p>
<p>关于DriverManager类下列说法正确的是</p>
<p>以下关于jdbc查询emp数据表正确的是</p><p>Class.forName(" com. mysql. jdbc . Driver");</p><p>Connection conn = DriverManager .getConnection("jdbc :mysq1:///chuti", "user", "user");</p><p>Statement stmt = conn.createStatement() ;</p><p>String sql = "SELECT * FROM emp";</p><p>ResultSet rs = stmt . executeQuery(sql);</p><p>补全代码</p>
<p>下列叙述中，正确的是 ( )</p>
<p>下面关于IO流的说法正确的是(&nbsp;&nbsp;&nbsp;)</p>
<p>FileReader类描述正确的是(&nbsp;&nbsp;&nbsp;)</p>
<p>具有readLine()方法的类是(&nbsp;&nbsp;&nbsp;)</p>
<p>具有readLine()方法的类是(&nbsp;&nbsp;&nbsp;)</p>
<p>关于newLine()方法描述错误的是(&nbsp;&nbsp;&nbsp;)</p>
<p>关于newLine()方法描述错误的是(&nbsp;&nbsp;&nbsp;)</p>
<p>1.&nbsp;实现下列哪个接口，可以启用序列化功能(&nbsp;&nbsp;&nbsp;)</p>
<p>&nbsp;字节输出流的抽象基类是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>&nbsp;字节输出流的抽象基类是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>下列关于Java中文件输入输出的说法正确的是&nbsp;(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>关于打印流PrintWriter说法正确的是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>下面关于Java中异常处理try块的说法正确的是(&nbsp;&nbsp;&nbsp;)</p>
<p>File类中的listFiles()方法说法<span style="color: blue;">正确</span>的是(&nbsp;&nbsp;&nbsp;)</p>
<p>下列流中哪一个使用了缓冲区技术( )</p>
<p>下面的程序段的功能是 ()</p><p>File file1=new File("e:xxxyyy");</p><p>file1.mkdir();&nbsp;</p>
<p>如果需要从文件中读取数据，则可以在程序中创建哪一个类的对象（）</p>
<p>File类中的isDirectory()方法的作用是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>字符流与字节流的区别在于（ ）</p>
<p>单列集合的顶层接口是(&nbsp;&nbsp;&nbsp;)</p>
<p>ArrayList类的底层数据结构是(&nbsp;&nbsp;&nbsp;)</p>
<p>LinkedList类的特点是(&nbsp;&nbsp;&nbsp;)</p>
<p>关于迭代器说法<span style="color: blue;">错误</span>的是(&nbsp;&nbsp;&nbsp;)</p>
<p>实现下列哪个接口，可以启用比较功能(&nbsp;&nbsp;&nbsp;)</p>
<p>将Map集合中的键存储到Set集合的方法是(&nbsp;&nbsp;&nbsp;)</p>
<p><strong>&nbsp;</strong>Java中的集合类包括ArrayList、LinkedList、HashMap等类，下列关于集合类描述正确的是（&nbsp;&nbsp;）</p>
<p>ArrayList和Vector的区别说法<span style="color: blue;">正确</span>的是(&nbsp;&nbsp;&nbsp;)</p>
<p><strong>&nbsp;</strong>使用TreeSet的无参构造创建集合对象存储元素时，该元素必须 (&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>下面关于HashMap和Hashtable的区别，说法正确的是(&nbsp;&nbsp;)</p>
<p><strong>&nbsp;</strong>对于增强for循环说法<span style="color: blue;">错误</span>的是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>关于Map.Entry接口说法错误的是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p><strong>&nbsp;&nbsp;</strong>Set集合的特点是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>关于泛型的说法正确的是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>下面哪些类用于实现TCP/IP客户端和服务器</p>
<p>ServerSocket中的哪个方法用于获取客户端发送的Socket对象</p>
<p>下列创建Socket正确的语句是</p>
<p>下列哪些URL是合法的</p>
<p>下列那些服务是使用TCP协议的</p>
<p>Java提供的___类来进行有关Internet地址的操作</p>
<p>使用UDP套接字通信时，哪个方法用于接收数据</p>
<p>使用UDP套接字通信时，常用哪个类把要发送的信息打包</p>
<p>当使用客户端套接字Socket创建对象时，需要指定</p>
<p>下列哪个流可以将字节输入流转换成字符输入流</p>
<p>ArrayList list=new ArrayList(20);中的list扩充几次（）</p>
<p>public static void main(String[] args) {</p><p>ArrayList list = new ArrayList&lt;&gt;();</p><p>list.add("java");</p><p>list.add("aaa");</p><p>list.add("java");</p><p>list.add("java");</p><p>list.add("bbb");</p><p><br></p><p>//请选择此处输入的代码，保证删除list集合中的所有java</p><p><br></p><p>for (Object obj : list) {</p><p>System.out.println(obj);</p><p>}</p><p>}</p>
<p>下列代码运行的结果是（）</p><p>public static void main(String[] args) {</p><p>ArrayList list = new ArrayList&lt;&gt;();</p><p>list.add("Hello");</p><p>list.add("World");</p><p>list.add("Hello");</p><p>list.add("Learn");</p><p>list.remove("Hello");</p><p>list.remove(0);</p><p><br></p><p>for (Object obj : list) {</p><p>System.out.println(obj);</p><p>}</p><p>}</p>
<p>下列代码执行结果正确的是（）</p><p>public class Base {</p><p><br></p><p>public Base() {}</p><p>static void show(ArrayList arr) {</p><p>arr.add(2);</p><p>arr = new ArrayList();</p><p>arr.add(3);</p><p>arr.add(4);</p><p>}</p><p><br></p><p>public static void main(String[] args) {</p><p>Base b = new Base();</p><p>ArrayList arr = new ArrayList();</p><p>arr.add(2);</p><p>show(arr);</p><p>System.out.println(arr.get(1));</p><p>}</p><p>}</p>
<p>List集合的遍历方式有如下哪几种</p>
<p>如果在关闭socket时发生一个IO错误，会抛出__。</p>
<p>当找不到客户的服务器地址时会抛出___。</p>
<p>&nbsp;__类的对象中包含有Internet地址。</p>
<p>如何获取一个类的字节码文件对象</p>
<p>关于反射机制下列说法错误的是</p>
<p>假定Tester 类有如下test方法：</p><p>public int test(int p1, Integer p)</p><p>以下哪段代码能正确编译并动态调用一个Tester 对象的test方法？</p>
<p>以下哪些方法在Class类中定义？</p>
<p>String类中的getBytes()方法的作用是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>字符串”ababcdabcdefg”使用indexOf(‘a’)和lastIndexOf(‘a’)，的运行结果是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>以下代码运行的结果是</p><p>public class Person {</p><p>public String eat(Integer num, String food) {</p><p>System.out.print("吃" + num + "个" + food + " ");</p><p>return food;</p><p>}</p><p>public static void main(String[] args) {</p><p>Class clazz = Person.class;</p><p>Person p = (Person) clazz.newInstance();</p><p>Method method = clazz.getMethod("eat", Integer.class, String.class);</p><p>Class type = method.getReturnType();</p><p>method.invoke(p, 1, "苹果");</p><p>System.out.print(type.getSimpleName() + " ");</p><p>System.out.print(method.getParameterTypes()[1] instanceof Class);</p><p>}</p><p>}</p>
<p>下面程序的运行结果是什么(&nbsp;&nbsp;&nbsp;)</p><p>&nbsp;public static void main(String[] args){</p><p>&nbsp;&nbsp;&nbsp;String s1 = “abc”;</p><p>&nbsp;&nbsp;&nbsp;String s2 = “xyz”;</p><p>show(s1,s2);</p><p>System.out.println(s1+”-----”+s2);</p><p>}</p><p>static void show(String s1,String s2){</p><p>&nbsp;&nbsp;s1 = s2+s1+”Q”;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;s2 = “W”+s1;&nbsp;&nbsp;<span style="color: blue;">&nbsp;</span></p><p>&nbsp;}</p>
<p>&nbsp;反射能做什么</p>
<p>下面程序的运行结果是什么(&nbsp;&nbsp;&nbsp;)</p><p>&nbsp;public static void main(String[] args){</p><p>&nbsp;&nbsp;&nbsp;String s1 = “abc”;</p><p>&nbsp;&nbsp;&nbsp;String s2 = “xyz”;</p><p>show(s1,s2);</p><p>System.out.println(s1+”-----”+s2);</p><p>}</p><p>static void show(String s1,String s2){</p><p>&nbsp;&nbsp;s1 = s2+s1+”Q”;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;s2 = “W”+s1;&nbsp;&nbsp;<span style="color: blue;">&nbsp;</span></p><p>&nbsp;}</p>
<p>下列关于通过反射方式获取方法并执行的过程说法正确的是</p>
<p>&nbsp;使用反射机制获取一个类的属性，下列关于getField()方法说法正确的是</p>
<p>对字符串的说法正确的是(&nbsp;&nbsp;&nbsp;)</p>
<p>下列关于反射和泛型的联系说法正确的是 （ ）</p>
<p>关于null和<span style="color: blue;">“”</span>说法正确的是(&nbsp;&nbsp;&nbsp;)</p>
<p>关于String类的indexOf说法不正确的是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>String类charAt()方法作用是 (&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>String类charAt()方法作用是 (&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>通过反射获取字节码对象的方式有哪些</p>
<p>将字符串转成字符数组的方法是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>StringBuffer字符串缓冲区的初始容量是多少个字</p>
<p>关于反射机制，下列说法错误的是</p>
<p>向字符串缓冲区中追加字符串，使用的方法是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>假定有Tester类，以下哪种方法能正确的构造出一个Tester对象（ ）</p><p>Class&lt;Tester&gt; classType = Tester.class;</p><p>Constructor&lt;Tester&gt; constructor = classType.getConstructor();</p>
<p>关于StringBuffer和StringBuilder说法正确的是(&nbsp;&nbsp;&nbsp;)</p>
<p>使用反射机制获取一个类的属性，下列说法正确的是 （ ）</p>
<p>能切割字符串的方法是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>&nbsp;截取字符串的方法是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>下面关于代码String str = new String(“abc”);描述正确的是(&nbsp;&nbsp;&nbsp;)</p>
<p>关于Integer类中的静态方法parseInt()方法说法正确的是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>下面所有描述String类中equals()方法正确的是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>下列选项中对Lambda语法的省略规则说法错误的是</p>
<p>在Random类中，可以生成100以内非负整数的随机数的方法是(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>以下有关Lambda表达式说法错误的是?</p>
<p>Date类中，哪个方法可以返回当前日期对象的毫秒值(&nbsp;&nbsp;&nbsp;&nbsp;)</p>
<p>有一个Student类，代码如下</p><p>public class Student{</p><p>private int age;</p><p>public void setAge(int age){</p><p>this.age=age;</p><p>}</p><p>public int getAge(){</p><p>return age;</p><p>}</p><p>}</p><p>有一个测试类，代码如下：</p><p>public class Test{</p><p>public static void main(String[] args) {</p><p>ArrayList&lt;Student&gt; list = new ArrayList();</p><p>list.add(new Student(22));</p><p>list.add(new Student(32));</p><p>list.add(new Student(28));</p><p>list.add(new Student(25));</p><p>}</p><p>}</p><p>对ArrayList&lt;Student&gt;集合中的Student对象按照年龄进行排序，下面代码正确的是?&nbsp;</p>
<p>使用Lambda表达式创建线程，下面选项错误的是?</p>
<p>有一个接口如下</p><p>public interface Phone {</p><p>void call(String message);</p><p>}</p><p>调用call(String message)方法，以下代码错误的是?</p>
<p>观察以下代码</p><p>public interface Animal {</p><p>public abstract void eat(String some);</p><p>}</p><p>public class Feeder {</p><p>public static void feed(Animal a,String some){</p><p>a.eat(some);</p><p>}</p><p>}</p><p>下面那个选项能输出"猫吃鱼"?&nbsp;</p>
<p>下列关于函数式接口的描述, 错误的是</p>
<p>我们定义了一个函数式接口Inter, 并定义了一个方法使用该接口。</p><p>@FunctionalInterface</p><p>public interface Inter{</p><p>void show();</p><p>}</p><p>public void method(Inter inter){</p><p>inter.show();</p><p>}</p><p>下列哪个选项可以成功调用method方法&nbsp;</p>
<p>我们知道, Supplier为JDK为我们提供的函数式接口。</p><p>@FunctionalInterface</p><p>public interface Supplier&lt;T&gt; {</p><p>T get();</p><p>}</p><p>在测试类中定义`getSupplier`方法, 用来返回该接口的实例。</p><p>public Supplier&lt;String&gt; getSupplier(){</p><p>方法体;</p><p>}</p><p><br></p><p>那么下列关于该方法的实现, 错误的为</p>
<p>已有代码</p><p>for(Integer number : numbers){</p><p>System.out.println(number);</p><p>}</p><p>使用jdk1.8 新特性之 forEach写法可以为</p>
<p>线程通过（）方法可以休眠一段时间，然后恢复运行。</p>
<p>Runnable接口定义了如下哪些方法？&nbsp;</p>
<p>"如下代码创建一个新线程并启动线程：</p><p>Runnable target=new MyRunnable();</p><p>Thread myThread=new Thread(target);</p><p>问：如下哪些类可以创建target对象，并能编译正确？"</p>
<p>下列有关线程的说法正确的是（）</p>
<p>下列说法正确的是？</p>
<p>以下选项中可以填写到横线处，让代码正确编译和运行的是（&nbsp;&nbsp;）。</p><p>public class Test implements Runnable {</p><p><br></p><p>public static void main(String[] args) {</p><p><br></p><p>___________________________________</p><p><br></p><p>t.start();</p><p>System.out.println("main");</p><p>}</p><p><br></p><p>public void run() {</p><p>System.out.println("thread1!");</p><p>}</p><p>}</p>
<p>编写线程类，要继承的父类是（ ）</p>
<p>编写线程类，可以通过实现哪个接口来实现？</p>
<p>对于下列程序，哪个叙述是正确的？</p><p>public class E{</p><p>public static void main(String args[]){</p><p>Target target=new Target();</p><p>Thread thread=new Thread(target);</p><p>thread.start();</p><p>}</p><p>}</p><p>class Target implements Runnable{</p><p>public void run(){</p><p>System.out.println("ok");</p><p>}</p><p>}"</p>
<p>下面关于yield方法描述正确的是（）</p>
<p>IO输出流最后要进行必要的操作？</p>
<p>IO输出流最后要进行必要的操作？</p>
<p>IO输出流最后要进行必要的操作？</p>
<p class="ql-align-justify">HTML的注释标签是哪个</p>
<p class="ql-align-justify">网页最外层元素是哪个</p>
<p class="ql-align-justify">&lt;font&gt;标签的size属性大于等于多少效果相同( )</p>
<p class="ql-align-justify">整个网页的标题标签是哪个</p>
<p class="ql-align-justify">网页主体中最大的标题标签是哪个</p>
<p class="ql-align-justify">整个网页的主体是哪个</p>
<p class="ql-align-justify">网页中的标签的别称是哪个</p>
<p class="ql-align-justify">doctype有什么作用</p>
<p class="ql-align-justify">文档声明的正确写法是哪个</p>
<p class="ql-align-justify">什么标记标注网页中一个段落的开始</p>
<p class="ql-align-justify">下面是html5新增的元素的是</p>
<p class="ql-align-justify">在HTML中，使用&lt;IMG&gt;标签插入图像，下列选项关于&lt;IMG&gt;的src属性说法正确的是</p>
<p class="ql-align-justify">可以在网页中显示图片a.jpg&nbsp;的选项是</p>
<p class="ql-align-justify">下列转义字符表示空格的是</p>
<p class="ql-align-justify">下列转义字符表示小于号的是</p>
<p class="ql-align-justify">下列转义字符表示大于号的是</p>
<p class="ql-align-justify">下列转义字符表示版权的是</p>
<p class="ql-align-justify">下列标签表示无序列表的是</p>
<p class="ql-align-justify">下列标签表示有序列表的是</p>
<p>下列标签表示定义列表的是</p>
<p>在以下的HTML&nbsp;中，哪个是正确引用外部样式表的方法？﻿</p>
<p>在HTML&nbsp;文档中，引用外部样式表的正确位置是( )</p>
<p>哪个HTML&nbsp;标签用于定义内部样式表？</p>
<p>下列哪个选项的CSS&nbsp;语法是正确的？( )</p>
<p>如何在CSS&nbsp;文件中插入注释？( )</p>
<p>以下关于class和id的说法不正确的是( )</p>
<p>使用link元素调用CSS的语法中，以下哪个属性是用来指定CSS文件的路径的</p>
<p>CSS中的选﻿择器不包括( )</p>
<p>在超链接中，让没访问过的链接变成橙色，下列代码实现正确的是( )</p>
<p>在超链接中，当鼠标移入超链接时，让超链接文字颜色为绿色，下列代码实现正确的是( )</p>
<p class="ql-align-justify">下面选项中，(&nbsp;&nbsp;&nbsp;)可以设置网页中某个标签的右外边距为10像素</p>
<p class="ql-align-justify">下面关于外部样式表的说法错误的是( )</p>
<p class="ql-align-justify">在CSS权重中,下面哪项说法正确?</p>
<p>下面的描述正确的是(&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#menu{</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;font-size:14px;</p><p class="ql-align-justify">&nbsp;}</p>
<p class="ql-align-justify">在HTML页面上声明如下所示的样式，其中(&nbsp;&nbsp;&nbsp;&nbsp;)样式为类样式</p><p>&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;</p><p>P{font-family:&amp;quot;宋体&amp;quot;;color:blue;}</p><p>.IMPORTANT{font-family:&amp;quot;隶书&amp;quot;;color:red;}</p><p class="ql-align-justify">&amp;lt;/style&amp;gt;</p>
<p class="ql-align-justify">在HTML中，关于CSS样式的说法错误的是</p>
<p class="ql-align-justify">阅读下面HTML代码，段落标签&lt;p&gt;内文本最终显示的颜色是</p><p>&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;</p><p>body { color:#333; }</p><p>#text{ color:#666; }</p><p>.content { color:#00f; }</p><p>.gray { color:#f00; }</p><p class="ql-align-justify">&amp;lt;/style&amp;gt;</p><p class="ql-align-justify">......</p><p class="ql-align-justify">&amp;lt;p id=&amp;quot;text&amp;quot; class=&amp;quot;content gray&amp;quot;&amp;gt;我我本将心向明月，奈何明月照沟渠。&amp;lt;/p&amp;gt;</p><p class="ql-align-justify">......</p>
<p class="ql-align-justify">阅读下面CSS代码，下面选项中与该代码段效果等同的是</p><p class="ql-align-justify">.box { margin:10px 5px; margin-right:10px; margin-top:5px; }</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">在html&nbsp;中,下列css属性中不属于盒子属性的是( )</p>
<p class="ql-align-justify">在CSS选择器中，以下选项(&nbsp;&nbsp;&nbsp;)属于后代选择器</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下面CSS样式中哪项不能给标签设置背景色?</p>
<p class="ql-align-justify">在CSS权重中,下面哪项说法正确?</p><p><br></p><p><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">元素在页面上所占实际宽度是以下哪个</p>
<p class="ql-align-justify">下面哪个对于margin的介绍是错误的</p><p><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下面哪个对于CSS继承的介绍是错误的( )</p>
<p class="ql-align-justify">下面哪个算法是正确的( )</p>
<p class="ql-align-justify">下面哪个描述是正确的( )</p>
<p>下面对伪元素的描述哪些是正确的</p>
<p class="ql-align-justify">下面哪项是正确的是( )</p>
<p class="ql-align-justify">下面哪个对于默认样式的介绍是正确的是( )</p>
<p class="ql-align-justify">现在有一个内容溢出的父元素,想要实现滚动条需要设置以下什么属性?( )</p>
<p class="ql-align-justify">如何将一个元素的类型变成块级元素( )</p>
<p class="ql-align-justify">下面哪个说法是正确的</p>
<p class="ql-align-justify">请判断以下说法是否正确：如需定义元素内容与边框间的空间，可使用padding 属性，并可使用负值</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于float描述错误的是</p>
<p class="ql-align-justify">在CSS中，下面关于样式“#container, .main{font-size:12px;}”与“#container .main{font-size:14px;}”的说法正确的是( )</p>
<h2 class="ql-align-justify">在html中,实现如下图所示效果,则横线处应填写的代码是</h2><p class="ql-align-justify">&lt;style&gt;</p><p class="ql-align-justify">li{</p><p class="ql-align-justify">width:150px;</p><p class="ql-align-justify">font:28px&nbsp;隶书;</p><p class="ql-align-justify">list-style:_____;</p><p class="ql-align-justify">float:_____;</p><p class="ql-align-justify">}</p><p class="ql-align-justify">&lt;/style&gt;</p><p class="ql-align-justify">&lt;div&gt;</p><p class="ql-align-justify">&lt;ul&gt;</p><p class="ql-align-justify">&lt;li&gt;登录&lt;/li&gt;</p><p class="ql-align-justify">&lt;li&gt;注册&lt;/li&gt;</p><p class="ql-align-justify">&lt;li&gt;帮助&lt;/li&gt;</p><p class="ql-align-justify">&lt;/ul&gt;</p><p class="ql-align-justify">&lt;/div&gt;</p><p class="ql-align-justify">图:登录&nbsp;注册&nbsp;帮助&nbsp;</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">若某个标签里的内容超过标签的尺寸，则超出的内容自动隐藏的CSS样式是</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于边框,以下写法正确的是( )</p>
<p>关于css的说法正确的是</p><p><br></p><p><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下述有关css属性position的属性值的描述，说法错误的是</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p>阅读下面HTML代码，如果期望tabs位于box容器的右下角，则需要添加的CSS样式是</p><p class="ql-align-justify">&lt;div id=”box”&gt;&lt;div id=”tabs”&gt;&lt;/div&gt;&lt;/div&gt;</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下列哪个CSS属性可以更改字体大小( )</p>
<p class="ql-align-justify">以下哪些元素能够成为绝对定位元素的包含块( )</p>
<p class="ql-align-justify">下列清除浮动的方式正确的是( )</p>
<p class="ql-align-justify">关于position定位，下列说法正确的是( )</p>
<p>能使文本缩进的CSS样式属性是哪个( )</p>
<p>以下对单位em的介绍正确的是( )</p>
<p>对line-height介绍正确的是哪些( )</p>
<p>对文本缩进说法正确的是哪些( )</p>
<p>CSS属性font的效果不包括下面哪个属性( )</p>
<p>以下对CSS属性font-weight介绍正确的是( )</p>
<p>在HTML中，通过(&nbsp;&nbsp;)可以实现鼠标悬停在超链接上时，为无下划线的效果</p>
<p>以下哪个方法可以将img标签在父元素中居中( )</p>
<p>下面关于CSS说法正确的是哪些( )</p>
<p class="ql-align-justify">在HTML中，以下关于CSS样式中文本及字体属性的说法，错误的是( )</p>
<p>下列哪个是表格中的单元格标签</p>
<p>跨多行单元格是在单元格里用哪个属性进行设置</p>
<p>请选中一组性别分别为男和女的单选按钮标签，默认女被选中</p>
<p>下列哪个是表格中的标题标签</p>
<p>如果将单选按钮变为默认选中，需要添以下哪个属性</p>
<p>表单用于将用户的信息提交给服务器,通过以下哪个属性将表单提给服务器</p>
<p>跨多列单元格是在单元格里用哪个属性进行设置</p>
<p>禁用表单项，表单项不可修改同时不会被提交需要设置以下哪个属性</p>
<p>设置表单项自动获取焦点需要设置以下哪个属性</p>
<p>表单项是必填需要设置以下哪个属性（）</p>
<p class="ql-align-justify">transform可以实现以下哪些效果</p>
<p>以下说法正确的是哪些</p>
<p class="ql-align-justify">以下哪项可以实现元素旋转</p>
<p>以下说法正确的是哪些</p>
<p class="ql-align-justify">以下语法正确的是哪个</p>
<p class="ql-align-justify">以下对perspective属性介绍不正确的是</p>
<p class="ql-align-justify">通过以下哪个属性可以修改弹性盒模型的主轴方向</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><h2 class="ql-align-justify"><br></h2>
<p class="ql-align-justify">以下对flex-flow属性介绍正确的是</p>
<p class="ql-align-justify">以下对flex-wrap属性的介绍正确的是</p>
<p class="ql-align-justify">以下写法正确的是</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><h2 class="ql-align-justify"><br></h2>
<p class="ql-align-justify">通过以下哪个属性可以修改弹性盒模型的主轴方向</p>
<p>以下哪些方法可以解决margin塌陷(传递)问题</p>
<p>以下写法正确的是( )</p>
<p>以下对过渡属性的描述正确的是</p>
<p class="ql-align-justify">以下对transition-property属性介绍正确是</p>
<p>以下说法正确的是哪些</p>
<p class="ql-align-justify">以下对关键帧的介绍不正确的是( )</p>
<p class="ql-align-justify">以下对动画属性介绍不正确的是( )</p>
<p>以下说法正确的是( )</p>
<p>以下写法正确的是( )</p>
<p>以下单位中,哪个单位的大小取决于html标签的字体大小( )</p>
<p class="ql-align-justify">使用border-radius属性实现右上和右下圆角，左上和左下都直角，以下说法正确的是( )</p>
<p class="ql-align-justify"><span style="color: rgb(87, 87, 87);">less中 变量的命令使用什么符号开头</span></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">以下写法正确的是( )</p>
<p class="ql-align-justify"><span style="color: rgb(87, 87, 87);">书写一个less的变量正确的是</span></p><p><br></p><p><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify"><span style="color: rgb(87, 87, 87);">less的运算结果100rem/50px是多少</span></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify"><span style="color: rgb(87, 87, 87);">假设html的字体大小为20px,body字体大小2rem,那么body的实际字体大小为( )</span></p>
<p><span style="color: rgb(87, 87, 87);">关于rem描述正确的是( )</span></p>
<p><span style="color: rgb(87, 87, 87);">关于移动web页面需要缩放图片解释正确的是</span></p>
<p><span style="color: rgb(87, 87, 87);">在现有的less文件中倒入新的less文件，需要怎么引入</span></p><p><br></p><p><br></p><p class="ql-align-justify"><br></p>
<p>以下属于Spark的运行模式的是？[多选题]</p>
<p>以下不支持用来编写spark程序的语言是？</p>
<p>在vi编辑器中的命令模式下，键入（）可在光标当前所在行下添加一新行。</p>
<p>以下属于spark内置模块的是？[多选题]</p>
<p>下列关于Spark的local模式描述错误的是？</p>
<h3>下面哪个命令是用来定义shell的环境变量（）</h3>
<h3>改变文件所有者的命令为（）</h3>
<p>以下哪一项不是Spark框架可以满足的大数据分析场景？</p>
<h3>建立一个新文件可以使用的命令为（）</h3>
<p>Spark框架standalone运行模式描述错误的是？</p>
<h3>pwd命令可以（）</h3>
<p>Spark框架standalone运行模式描述错误的是？</p>
<p class="ql-align-justify">通过哪个属性可以设置字体的颜色( )</p>
<p>下列哪些是 Hadoop 运行的模式？[多选题]</p>
<p>hadoop3默认的Namenode web管理端口是？[单选题]</p>
<p>下列哪项通常是hadoop集群运行时的最主要瓶颈？() [单选题]</p>
<p>下列关于hadoop的SecondaryNameNode 作用描述正确的是？ [单选题]</p>
<p>HDfS 中的 block 默认保存几份？[单选题]</p>
<p>MapReduce中要实现二次排序或者自定义排序，必须实现哪个接口？&nbsp;[单选题]</p>
<p>下列关于yarn运行模式下说法错误的是</p>
<p>MapReduce的MapTask工作机制中最后要执行的步骤是？[单选题]</p>
<p>下列关于rdd描述正确的是？[多选题]</p>
<p>下列关于宽依赖和窄依赖描述正确的是？[多选题]</p>
<p>下列关于spark的cache算子默认缓存机制描述错误的是？</p>
<p>下列属于rdd的创建方式的是？[多选题]</p>
<p>下列关于spark任务切分描述错误的是？</p>
<p>下列关于DAG描述正确的是？[多选题]</p>
<p>下列关于rdd分区规则描述错误的是</p>
<p>下列关于累加器描述不正确的是？</p>
<p>hadoop中排序，发生在哪个阶段? [单选题]</p>
<p>下面哪种压缩不能被切分？[多选]</p>
<p class="ql-align-justify">下列属性选择器的写法不正确的是( )</p>
<p>下面hadoop关于combiner描述正确的是？[多选]</p>
<p>下列关于hadoop中partition描述正确的是？</p>
<h3>Hdfs dfs中的-get和-put命令操作对象是 [单选题] <span style="color: red;">*</span></h3>
<h3>关于HDFS的文件写入，正确的是 [单选题] <span style="color: red;">*</span></h3>
<p class="ql-align-justify">阅读下面CSS代码，下面选项中与该代码段效果等同的是</p><p class="ql-align-justify">.box{margin:10px5px;margin-right:10px;margin-top:5px; }</p>
<p class="ql-align-justify">下面哪个对于margin的介绍是错误的</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下面哪个对于margin的介绍是错误的</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下面哪个描述是正确的( )</p>
<p class="ql-align-justify">如何将一个元素的类型变成块级元素</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p>下列关于Liunx目录结构的描述错误的是？[单选题]</p>
<p>zookeeper数据结构中，默认情况下一个znode能够存多大的数据？</p>
<p>下列关于文件属性中描述正确的是？[多选]</p>
<p class="ql-align-justify">网页中代表”表现”的是哪个</p>
<p>在main线程中创建zookeeper客户端，这时会创建几个线程？</p>
<p>下列关于SparkSQL描述正确的是？ [多选题]</p>
<p class="ql-align-justify">网页中代表”结构”的是哪个</p>
<p class="ql-align-justify">以下不是图片格式的是哪个( )</p>
<p>下列关于RDD、DataFrame和DataSet描述正确的是？[多选题]</p>
<p class="ql-align-justify">一个设计良好的网页需要满足什么条件</p>
<p>DataFrame 和RDD 最大的区别</p>
<p>在main线程中创建zookeeper客户端，这时会创建几个线程？</p>
<p>下面哪些是spark比mapreduce计算快的原因？[多选题]</p>
<p class="ql-align-justify">以下对html标签描述错误的是哪个</p>
<p>下列不可成为SparkSQL数据源的是</p>
<p>Paxos 算法解决了什么问题？</p>
<p class="ql-align-justify">网页中打印一条水平线使用哪个标签</p>
<p class="ql-align-justify">网页中进行换行使用哪个标签</p>
<h3>下列操作中会造成索引失效描述正确的是？( ) [多选]</h3>
<p>Paxos 算法解决了什么问题？</p>
<p>asd</p>
<p class="ql-align-justify">网页中进行换行使用哪个标签</p>
<p>zookeeper数据结构中，默认情况下一个znode能够存多大的数据？</p>
<p class="ql-align-justify">以下哪个是超链接标签的正确写法</p>
<p class="ql-align-justify">如何通过超链接标签打开新的窗口</p>
<p>以下对背景图片的介绍正确的是哪些( )</p>
<p class="ql-align-justify">以下对背景图片重复的介绍错误的是</p>
<p class="ql-align-justify">以下对于background属性的介绍正确的是</p>
<p>zookeeper多数情况下为什么是奇数台服务器？ [单选题]</p>
<p class="ql-align-justify">以下对于background-attachment属性的介绍正确的是( )</p>
<p class="ql-align-justify">以下对于background-size属性的介绍正确的是</p>
<p>zookeeper监听原理中main线程里会启动几个线程？ [单选题]</p>
<p class="ql-align-justify">使用border-radius属性实现右上和右下圆角，左上和左下都直角，以下说法正确的是( )</p>
<p>Paxos 算法解决了什么问题？</p>
<p>下面关于zookeeper节点类型以及目录描述正确的？（多选）</p>
<p class="ql-align-justify">以下对于background-clip属性的介绍正确的是</p>
<p class="ql-align-justify">一个元素设置阴影属性代码如下，box-shadow:1px 2px 3px 4px #ccc inset；对应下列解释错误的是( )</p>
<p>HA中状态管理模块，描述正确的是（多选）</p>
<p class="ql-align-justify">下面说法正确的是哪些( )</p>
<p>HA中状态管理模块，描述正确的是？</p>
<p>ZKFC的作用？（多选）</p>
<p class="ql-align-justify">css盒模型包括以下哪些（）</p>
<p>ZKFC的作用？</p>
<p>HA功能通过配置Active/Standby两个NameNodes实现在集群中对NameNode的热备 [判断题] <span style="color: red;">*</span></p>
<p>下列可以直接作为spatkStreaming数据源的是？【多选题】</p>
<p>在main线程中创建zookeeper客户端，这时会创建几个线程？</p>
<p>JournalNode可以保证两个NameNode的数据同步，并在journalNode间进行相互通信 [判断题] <span style="color: red;">*</span></p>
<p>Edits日志只有Active状态的NameNode节点可以做写操作 [判断题] <span style="color: red;">*</span></p>
<p>下列关于DStream转换描述正确的是？[多选题]</p>
<p>zookeeper多数情况下为什么是奇数台服务器？</p>
<p>以下不是hive的数据类型？ [单选题]</p>

<p>下列关于spark从kafka 获取数据描述错误的是？</p>
<p>EXTERNAL关键字的作用？[多选]</p>
<p>EXTERNAL关键字的作用？[多选]</p>
<p>以下是hive的driver中组件的？</p>
<p>对as和like的描述正确的是？[多选]</p>
<p>hive与数据库区别的描述正确的？</p>
<p>hql的执行顺序①select--②from--③where--④group by--⑤having--⑥order by 正确的是？ [单选题] <span style="color: red;">*</span></p>
<p>配置Metastore到MySql的说法正确的是？</p>
<p>三个表进行join连接时，会产生几个MRjob? [单选题] <span style="color: red;">*</span></p>
<p>以下不是hive的数据类型？</p>
<p>以下不属于hive集合的是？</p>
<p>EXTERNAL关键字的作用？</p>
<p>管理表和外部表的使用场景描述正确的是？</p>
<p>对分区表描述正确的是？</p>
<p>load data [local] inpath /opt/module/datas/student.txt [overwrite] into table student [partition (partcol1=val1,…)];以下描述的对的是？</p>
<p>向hive表中导入数据有几种方式？</p>
<p>如何导出hive表中的数据？</p>
<p>hive中分桶描述正确的是？[多选]</p>
<p>sql的执行顺序①select--②from--③where--④group by--⑤having--⑥order by 正确的是？</p>
<p>下面关于行列互转的描述正确的是？[多选]</p>
<p>三个表进行join连接时，会产生几个MRjob?</p>
<p>hive中over()怎么理解？ [单选题]</p>
<p>"select * from tableA, tableB" 是哪种join（tableA, tableB无字段相同的公共列）？</p>
<p>聚合函数sum()over(.....order by cu),中order by描述正确的是？ [单选题]</p>
<p>对hive中Fetch描述正确的是？</p>
<p>下面函数，排序相同时会重复，总数会减少是？ [单选题] <span style="color: red;">*</span></p>
<p>由于Hive只支持等值连接，为了提高性能，建议把最大的表格放在连接的哪个位置？</p>
<p>下面对hive中的函数，描述正确的是？[多选]</p>
<p>下列关于spark数据倾斜问题调优方案不合理的是</p>
<p>下列关于DStream转换描述正确的是 [多选题]</p>
<p>下面对agent描述正确是？</p>
<p>下面对agent描述正确是？[多选题]</p>
<p>下面source可以实现监控文件夹变化的是？[单选题]</p>
<p>下列的sink类型中可以连接source的是？[单选题]</p>
<p>下面sink可以连接source的是？</p>
<p>下列对几种channel类型描述正确的是？[多选题]</p>
<p>下列属于自定义flume拦截器所要实现的方法的是？[多选题]</p>
<p>下列关于flume调优说法错误的是？[单选题]</p>
<p>数据仓库为什么要分层？描述正确的是？</p>
<p>下列关于kafka 消息顺序性的描述正确的是？[单选题]</p>
<p>下列关于Kafka 分区器、序列化器、拦截器的处理顺序正确的是？[单选题]</p>
<p>下列关于Kafka生产者客户端的整体结构及使用的线程个数描述正确的是？[单选题]</p>
<p>下面对范式和函数传递描述正确的是？</p>
<p>对于同一个消费组中的消费者，消费者个数超过topic的分区的情况下，下列描述正确的是？[单选题]</p>
<p>下面对OLAP和OLTP理解正确的是？</p>
<p>下列关于消费者提交消费位移时提交的索引位置描述正确的是？[单选题]</p>
<p>下列关于手动提交offset的情形哪个会造成kafka重复消费？[单选题]</p>
<p>下列关于增加topic的分区数的描述正确的是？[单选题]</p>
<p>下列关于减少topic的分区数的描述正确的是？[单选题]</p>
<p>下列关于Kafka内部的topic的作用描述正确的是？[单选题]</p>
<p>下列选项中哪个是Kafka消费者分区分配的策略？[单选题]</p>
<p>Kafka分区分配的策略？</p>
<p>下列属于Kafka的高效读写数据原因的是？[多选题]</p>
<p>下列关于Exactly&nbsp;Once语义中描述错误的是？[单选题]</p>
<p>Kafka Controller的在集群中的作用描述正确的是？[多选题]</p>
<p>下面关于Hbase的Name Space描述正确的是？</p>
<p>下面关于Hbase的Table描述正确的是？</p>
<p>下面关于Hbase的Row描述正确的是？</p>
<p>下面关于Hbase的Column描述正确的是？</p>
<p>下面关于Hbase的Time Stamp描述错误的是？</p>
<p>下面关于Hbase的Cell描述错误的是？</p>
<p>下面关于Hbase的Region Server描述错误的是？</p>
<p>下面关于Hbase的Master描述错误的是？</p>
<p>下面关于Hbase的StoreFile描述正确的是？</p>
<p>下面关于Hbase的WAL描述错误的是？</p>
<p>下面关于Hbase的BlockCache描述错误的是？</p>
<p>关于Hbase的高可用优化，下面描述正确的是？</p>
<p>下列关于Hbase的RowKey设计中描述错误的是？</p>
<p>关于Hbase的内存优化，下面描述正确的是？</p>
<p>关于Hbase的基础优化，下面描述正确的是？</p>
<p>关于Hbase的基础优化，下面描述正确的是？</p>
<p>不属于Scala7种数值类型的是（）</p>
<p>如果需要使用scala库中的sqrt函数,如sqrt(2)，下列引用包的方式错误的是（）</p>
<p>Scala关于变量定义、赋值，错误的是（）</p>
<p>在Scala中如何获取字符串“Hello”的首字符和尾字符（）</p>
<p>关于数组的常用算法，下列说法错误的是（）</p>
<p>关于数组的常用算法，下列说法错误的是（）</p>
<p>关于元组 Tuple 说法错误的是（）</p>
<p>对于拉链操作val t1 = Array(1, 3); val t2 = Array(2,4) ; t1.zip(t2)返回结果正确的是（）</p>
<p>编写一个过程countdown(n:Int)，打印从n到0(包含0和n)的数字（）</p>
<p>表达式for(i &lt;- 1 to 3 ; j &lt;- 1 to 3; if i != j ) print((10 * i + j) + " ") 输出结果正确的是（）</p>
<p>关于数组val a = Array(1,2,3)下列说法错误的是（）</p>
<p>对于Map("book" -&gt; 5, "pen" -&gt; 2).map(m =&gt; m._1 -&gt; m._2 * 2)结果说法正确的是（）</p>
<p>对于代码 val map: Map[String, Int] = Map("book" -&gt; 5, "pen" -&gt; 2).map(m =&gt; m._1 -&gt; m._2 * 2) ; print(map) 的执行结果说法正确的是（）</p>
<p>对于表达式</p><p>val tokens = "one two three four two two three four".split(" ")</p><p>val map = new HashMap[String,Int]</p><p>for(key &lt;- tokens){</p><p>map(key) = map.getOrElse(key,0) + 1</p><p>}</p><p>说法正确的是（）</p>
<p><span style="color: rgb(77, 77, 77);">如果需要使用scala库中的sqrt函数,如sqrt(2)，下列引用包的方式错误的是?</span></p>
<p>关于伴生对象的apply方法，正确的是（）</p>
<p>scala中，关于import引入语句的说法不正确的是（）</p>
<p>对于下述代码说法正确的是（）</p><p>class Cat extends Animal{}</p><p><br></p>
<p>scala语言中，下面描述正确的是（）</p>
<p>高阶函数是指（）</p>
<p>集合可以分为三大类，以下描述中不是这三大类的是（）</p>
<p>下述方法中，哪一个不能将"val tmp = List(1, 2, 3)"中的所有元素求和，并将最终结果6返回（）</p>
<p>关于范式的使用和建模描述正确的是？</p>
<p>关于维度表和事实表描述正确的是？</p>
<p>事实表描述正确的是？</p>
<p>关于建模描写正确的是？</p>
<p>cookie默认情况下如何被清除( )</p>
<p>下面关于session的用法哪项是错误的？( )</p>
<p>Session默认有效时间多长( )</p>
<p>设置session有效时间的方法是( )</p>
<p>Session默认有效时间多长( )</p>
<p>下列选项中不可以使会话失效（）</p>
<p>Session对象的( )方法用于判断是否为开启新会话</p>
<p>下面有关Filter的描述错误的是( )</p>
<p>应用工程中Filter过滤器的执行顺序是（）</p>
<p>Filter接口定义的方法，用来过滤处理的是( )</p>
<p>ServletContext对象被创建时设置初始化值，使用如下(B)方法</p>
<p>ServletContext对象被创建时设置初始化值，使用如下( )方法</p>
<p>jQuery 的方法$.get()做什么？( )</p>
<p>以下哪个函数不是jQuery内置函数。</p>
<p>以下jquery功能不能实现与服务器进行数据交互的选项( )</p>
<p>在文件上传时，用( )对象接收文件</p>
<p>在文件上传时，用( )对象接收文件</p>
<p>页面实现文件上传功能，以下描述错误的( )</p>
<p>应用工程中使用Filter过滤器处理哪些功能：( )</p>
<p>JAVAWeb中的原生组件( )</p>
<p>Filter接口中doFilter()方法中的参数类型是哪个</p>
<p>以下哪个函数是jQuery内置的与AJAX相关的函数</p>
<p>文件上传使用哪些第三方jar ( )</p>
<p>占用 4 个字节的数据类型是?</p>
<p>修改记录的语句是?</p>
<p>MySQL 数据库管理系统, 连接数据库的命令中, 错误的是?</p>
<p>查看数据库管理系统中, 都管理着哪些数据库的命令是?&nbsp;</p>
<p>关系型数据库的核心是</p>
<p>请判断以下哪条语句创建数据库是正确的语法&nbsp;</p>
<p>请判断以下哪个说法是正确的</p>
<p>请判断以下哪条语句是给person表添加age字段</p>
<p>下列关于创建、管理数据库的操作语句不正确的是</p>
<p>属于数据定义语言(DDL)的有</p>
<p>表和表之间的关系有</p>
<p>查找条件为：姓名不是NULL的记录</p>
<p>SQL中，”AGE IN (20,22)”的语义是</p>
<p>下面正确表示Employees表中有多少非NULL的Region列的SQL语句是</p>
<p>若要求查找S表中，姓名的第一个字为王的学生学号和姓名。下面列出的SQL语句中，哪个是正确的</p>
<p>若要求“查询选修了3门以上（不包含3门）课程的学生的学生号”，正确的SQL语句是</p>
<p>以下关于表主键描述错误的是</p>
<p>如果一个字段的数据必须来源另一个表的主键,那么要在这个字段上建立</p>
<p>有如下表和数据：</p><p>表名：student</p><p>数据：id name age sex</p><p>1 张三 20 男</p><p>2 李四 22 女</p><p>请问，以下哪条SQL语句可以查询姓名为”李”开头的所有学员：</p>
<p>下列选项，可用于存储结果集的对象是（）</p>
<p>下面关于executeQuery(String sql)方法，说法正确的是（）</p>
<p>以下关于事务描述错误的是</p>
<p>下列关于JDBC驱动的说法中，正确的是（）</p>
<p>&nbsp;以下哪一项可以创建C3P0的数据库连接池对象？</p>
<p>将JDBC的属性信息写到jdbc.properties，那么要获取这个属性文件内的信息，当前类的类名是JDBCUtils;以下书写正确的是（），选择一项请选择您认为正确的答案？</p>
<p><span style="color: rgb(0, 0, 0);">JDBC中下列执行顺序正确的是</span></p><p><br></p><p><span style="color: rgb(0, 0, 0);">1.导包&nbsp;&nbsp;2.执行SQL操作&nbsp;3.获取连接&nbsp;4.释放资源&nbsp;5.创建状态参数&nbsp;6.加载驱动类</span></p>
<p>在JDBC中使用事务,想要回滚事务事务的方法是什么？</p>
<p>一个事务读到另一个事务未提交的数据，叫做（）</p>
<p>一个事务读到另一事务已提交的新插入数据，叫做（）</p>
<p>数据库的事务属性有哪些</p>
<p>下面关于 BeanFactory接口说法正确的是( )</p>
<p>在Spring中，关于依赖注入，下面说法错误的是( )</p>
<p>Spring 核心模块的作用( )</p>
<p>下面关于Spring中的bean的作用域，描述错误的是( )</p>
<p>下面关于在 Spring 中配置 Bean 的 init-method 的说法正确的是( )</p>
<p>在Spring中，可以通过( )方式实现了依赖注入。</p>
<p>springMVC是通过( )来将前端的请求分发到各控制器的?</p>
<p>声明控制器类的注解是( )&nbsp;</p>
<p>将一个请求url指向一个映射方法的注解是( )&nbsp;&nbsp;</p>
<p>SpringMvc中有个类把视图和数据都合并的一起的,叫什么( )</p>
<p>关于Post提交乱码，我们可以使用下列那个方法解决( )</p>
<p>以下哪个是SpringMvc中提供的视图解析器( )</p>
<p>控制器类中的方法参数如何设置缺省值( )</p>
<p>SpringMvc的核心入口类是什么（ ）</p>
<p>如何将请求参数映射到控制器方法参数上（ ）</p>
<p>下面关于Spring的说法正确的是( )</p>
<p>下面关于Spring的说法正确的是( )</p>
<p>下面关于AOP的理解，正确的是( )</p>
<p>Spring 各模块之间关系( )</p>
<p>Spring 的通知类型有( )</p>
<p>下面关于在 Spring 中配置 Bean的 id 属性的说法正确的是( )</p>
<p>linux中怎样更改一个文件的权限设置？</p>
<p>linux中显示一个文件最后几行的命令是</p>
<p>linux中如何删除当前目录中一个非空子目录tmp</p>
<p>在vi中退出不保存的命令是？</p>
<p>下面哪个命令可以解压文件</p>
<p>退出交互模式的shell，应键入()</p>
<p>关于redis下面说法错误的是()</p>
<p>以下关于redis的描述正确的是</p>
<p>以下哪个命令是redis中hash结构存值的命令</p>
<p>怎么测试Redis的连通性</p>
<p>下列关于git命令表述不正确的是（）</p>
<p>以下关于git与svn的说法错误的是</p>
<p>在本地网络不可用的情况下下面哪个Git操作无法成功执行</p>
<p>如何使用git命令回退到指定版本号</p>
<p>创建名为test的本地分支命令是</p>
<p>常用的git操作有（多选）</p>
<p>下面有关nginx说法错误的是</p>
<p>nginx是一个http服务器，可以将服务器上的静态文件()通过http协议展现给客户（多选）</p>
<p>以下什么功能是基于nginx反向代理实现的</p>
<p>关于nginx的说法错误的是</p>
<p>spring整合Mybatis时核心类是( )&nbsp;</p>
<p>以下哪个不是Mybatis映射文件中常见的标签 ( )</p>
<p>以下哪个不是Mybatis映射文件中常见的标签 ( )</p>
<p>哪些不是Mybatis动态sql语句中的标签( )&nbsp;&nbsp;</p>
<p>mybatis进行一对一和一对多关联查询时使用的标签分别是( )</p>
<p>以下对Mybatis中对trim标签的描述正确的是( )</p>
<p>Mybatis中默认开启的是哪种缓存( )</p>
<p>以下Mybatis中不是resultMap标签的子标签的是( )</p>
<p>如果Mybatis进行查询的时候实体类的属性名和数据库字段不一致怎么办 ? ( )</p><p><br></p>
<p>Mybatis映射文件中,update标签没有以下哪个属性？( )</p>
<p>关于MyBatis框架的说法有误的是( )</p>
<p>以下maven命令不是默认周期执行命令的是( )</p>
<p>通常maven坐标不包括以下哪个元素( )</p>
<p>pom.xml配置文件中project标签下的一级子标签不包括( )</p>
<p>Maven javaweb 应用工程通常packaging设置为( )</p>
<p>maven的默认依赖范围是( )</p><p><br></p>
<p>MyBatis中用于实现动态SQL的元素( )</p>
<p>MyBatis通过映射文件进行输入参数映射时，输入参数的类型可以是( )</p>
<p>maven几套生命周期( )</p>
<p>以下描述Maven优点的是( )</p>
<p>maven私服的仓库类型有( )</p>
<p>HTML的注释标签是哪个( )</p>
<p>网页最外层元素是哪个( )</p>
<p>font标签的size属性大于等于多少效果相同( )&nbsp;</p>
<p>整个网页的标题标签是哪个( )&nbsp;</p>
<p>网页主体中最大的标题标签是哪个( )</p>
<p>整个网页的主体标签是哪个( )&nbsp;</p>
<p>网页中的标签的别称是哪个( )</p>
<p>doctype有什么作用( )</p>
<p>文档声明的正确写法是哪个( )</p>
<p>十六进制中1F转换成十进制是多少( )&nbsp;</p>
<p>网页中代表”表现”的是哪个( )</p>
<p>网页中代表”结构”的是哪个( )</p>
<p>以下不是图片格式的是哪个( )</p>
<p>一个设计良好的网页需要满足什么条件( )</p>
<p>以下对webp格式图片的介绍是错误的是哪个( )</p>
<p>以下对html标签描述错误的是哪个( )</p>
<p>网页中打印一条水平线使用哪个标签( )</p>
<p>网页中进行换行使用哪个标签( )</p>
<p>以下哪个是超链接标签的正确写法( )</p>
<p>如何通过超链接标签打开新的窗口( )</p>
<p>以下关于 Array 数组对象的说法不正确的是( )</p>
<p>以下代码运行的结果是输出( )</p><p>var a = b = 10;</p><p>(function(){</p><p>var a=b=20</p><p>})();</p><p>console.log(b);</p>
<p>以下代码运行后的结果是输出( )</p><p>var a=[1, 2, 3];</p><p>console.log(a.join());</p>
<p>[1,2,3,4].join(0).split() 的执行结果是( )</p>
<p>var n = "miao wei ke tang".indexOf("wei",6)；</p><p>n的值为：( )</p>
<p>下面关于数组的描述正确的是( )</p>
<p>下列程序中alert按顺序分别弹出( )</p><p>var a = 10;</p><p>function test() {</p><p>a = 100;</p><p>alert(a);</p><p>alert(this.a);</p><p>var a;</p><p>alert(a);</p><p>}</p><p>test();</p>
<p>分析下面的代码，输出的结果是( )</p><p>var arr=new Array(5);</p><p>arr[1]=1;</p><p>arr[5]=2;</p><p>console.log(arr.length);</p>
<p>Math.ceil(-3.14)和Math.floor(-3.14)的结果分别是( )</p>
<p>阅读以下代码，在页面中结果是( )</p><p>var&nbsp;s="abcdefg";</p><p>alert(s.substring(1,2));</p>
<p>以下 ECMAScript 变量命名格式正确的是( )</p>
<p>下面代码的输出是什么?( )</p><p>+true;</p><p>!"Lydia";</p>
<p>哪个选项是不正确的?( )</p><p>var bird = {</p><p>&nbsp;size: "small"</p><p>};</p><p>var mouse = {</p><p>&nbsp;name: "Mickey",</p><p>&nbsp;small: true</p><p>};</p>
<p>下面代码的输出是什么?( )</p><p>var c = { greeting: "Hey!" };</p><p>var d;</p><p>d = c;</p><p>c.greeting = "Hello";</p><p>console.log(d.greeting);</p>
<p>下面代码的输出是什么?( )</p><p class="ql-align-justify">for (var i = 0; i &lt; 3; i++) {</p><p class="ql-align-justify">&nbsp;setTimeout(() =&gt; console.log(i), 1);</p><p class="ql-align-justify">}</p><p class="ql-align-justify">&nbsp;for (let i = 0; i &lt; 3; i++) {</p><p class="ql-align-justify">&nbsp;setTimeout(() =&gt; console.log(i), 1);</p><p class="ql-align-justify">}</p>
<p>下面代码的输出是什么?( )</p><p>function Person(firstName, lastName) {</p><p>&nbsp;this.firstName = firstName;</p><p>&nbsp;this.lastName = lastName;</p><p>}</p><p>var lydia = new Person("Lydia", "Hallie");</p><p>var sarah = Person("Sarah", "Smith");</p><p>console.log(lydia);</p><p>console.log(sarah);</p>
<p>下面代码的输出是什么?( )</p><p>function sum(a, b) {</p><p>&nbsp;return a + b;</p><p>}</p><p>sum(1, "2");</p>
<p>下面代码的输出是什么?( )</p><p>var number = 0;</p><p>console.log(number++);</p><p>console.log(++number);</p><p>console.log(number);</p>
<p>下面代码的输出是什么?( )</p><p>function checkAge(data) {</p><p>&nbsp;if (data === { age: 18 }) {</p><p>&nbsp;console.log("You are an adult!");</p><p>&nbsp;} else if (data == { age: 18 }) {</p><p>&nbsp;console.log("You are still an adult.");</p><p>&nbsp;} else {</p><p>&nbsp;console.log(`Hmm.. You dont have an age I guess`);</p><p>&nbsp;}</p><p>}</p><p>checkAge({ age: 18 });</p>
<p>下面代码的输出是什么?( )</p><p>var num = 8;</p><p>var num = 10;</p><p>console.log(num);</p>
<p>下面代码的输出是什么?( )</p><p>var obj = { a: "one", b: "two", a: "three" };</p><p>console.log(obj);</p>
<p>分析下面的 JavaScript 代码段，输出的结果是( )</p><p>function employee(name,code){</p><p>this.name="wangli";</p><p>this.code="A001";</p><p>}</p><p>var newemp = new employee("zhangming",A002);</p><p>document.write("雇员姓名:"+ newemp.name+ " ");</p><p>document.write("雇员代号:"+ newemp.code +" ");</p>
<p>关于js中apply()和call()的说法错误的是( )</p>
<p>将字串s中的所有字母变为小写字母的方法是？( )</p>
<p>"PreparedStatement是Statement的子接口，用于执行预编译的SQL语句"针对这句话下列说法正确的是</p>
<p>"Statement接口的executeUpdate(String sql)返回值是int，它表示数据库中受该SQL语句影响的记录的数目"针对这句话下列说法正确的是</p>
<p>关于sql分类，下列描述正确的是？</p>
<p>下列关于逻辑运算符，正确的是？</p>
<p>&nbsp;DBMS是什么？</p>
<p>下面不属于数据库系统特点的是</p>
<p>&nbsp;mysql数据库是一种( )数据管理系统</p>
<p>关于SQL语言规范，下列叙述正确的是？</p>
<p>关于数据库事务特性，描述正确的是？</p>
<p>下列sql正确的是？</p>
<p>下列有关lambda语法表达式的说法中正确的是</p>
<p>下列有关函数式接口的说法正确的是（）</p>
<p>下列有关方法引用和构造引用的写法正确的是 ( )</p>
<p>下列那个是Stream流的正确操作步骤（）</p>
<p>下列关于jdk日期类的方法中说法正确的是（）</p>
<p>有关jdk中新日期API的优点说法错误的是（）</p>
<p>下列有关函数式接口说法正确的是（）</p>
<p>执行以下代码,找出结果为false的选项( )</p><p><span style="color: rgb(51, 51, 51);">function Person(name,age){</span></p><p><span style="color: rgb(51, 51, 51);">this.name = name</span></p><p><span style="color: rgb(51, 51, 51);">this.age = age</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;}</span></p><p><span style="color: rgb(51, 51, 51);">var girl ={}</span></p><p><span style="color: rgb(51, 51, 51);">Person.call(girl,girl,18)</span></p><p><span style="color: rgb(51, 51, 51);">var Jerry =&nbsp;{}</span></p><p><span style="color: rgb(51, 51, 51);">Person.bind({},Jerry)</span></p><p><span style="color: rgb(51, 51, 51);">var Tom = {}</span></p><p><span style="color: rgb(51, 51, 51);">Person.apply(Tom,["Tom",15])</span></p><p><span style="color: rgb(51, 51, 51);">var boy = new Person(boy,16)</span></p>
<p>下面不属于关键字let的特点的是( )</p>
<p>在数组解构赋值中,var&nbsp;[a,b,c]&nbsp;=&nbsp;[1,2]结果中,a、b、c的值分别为( )</p>
<p>关于模板字符串，下列说法不正确的是( )</p>
<p>关于箭头函数的描述,错误的是( )</p>
<p>下面代码输出的结果是( )</p><p><span style="color: rgb(51, 51, 51);">for (let i = 0; i &lt; 3; i++) {</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;setTimeout(() =&gt; {</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;&nbsp;console.log(i)</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;})</span></p><p><span style="color: rgb(51, 51, 51);">}</span></p><p><span style="color: rgb(51, 51, 51);">for (var i = 0; i &lt; 3; i++) {&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;setTimeout(() =&gt; {</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;&nbsp;console.log(i)</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;})</span></p><p><span style="color: rgb(51, 51, 51);">}</span></p>
<p>关于Symbol,错误的说法是( )</p>
<p>下面关于类class的描述,错误的是( )</p>
<p>class类的继承使用的关键字是( )</p>
<p>关于iterator遍历器的说法,错误的是( )</p>
<p>NodeJS 中读取文件内容的API( )</p>
<p>NodeJS 中写入文件内容的API( )</p>
<p>HTTP 协议请求报文不包括哪个( )</p>
<p>通过编辑哪个文件来忽略文件变更( )</p>
<p>一次代码的成功提交到远程远程仓库,需要经历( )阶段</p>
<p>以下哪个命令用来创建分支( )</p>
<p>对于下列git命令,说法错误的是( )</p>
<p>npm init初始化包后会生成什么文件( )</p>
<p>下列安装npm包命令正确的是( )</p>
<p>在初始化包后根据package.json安装全部依赖的命令是( )？</p>
<p>在以下的 HTML 中，哪个是正确引用外部样式表的方法？﻿( )</p>
<p>在 HTML 文档中，引用外部样式表的正确位置是﻿( )</p>
<p>哪个 HTML 标签用于定义内部样式表( )</p>
<p>下列哪个选项的CSS语法是正确的( )</p>
<p>如何在 CSS 文件中插入注释( )</p>
<p>以下关于class和id的说法不正确的是( )</p>
<p>CSS中的选择器不包括( )</p>
<p>在超链接中，让没访问过的链接变成橙色，下列代码实现正确的是( )</p>
<p>在超链接中，当鼠标移入超链接时，让超链接文字颜色为绿色，下列代码实现正确的是( )</p>
<p>下面选项中，( )可以设置网页中某个标签的右外边距为10像素</p>
<p>下面关于外部样式表的说法错误的是( )</p>
<p>在HTML中，通过(&nbsp;&nbsp;)可以实现鼠标悬停在超链接上时，为无下划线的效果</p>
<p>下面的描述正确的是( )</p><p>#menu{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;font-size:14px;</p><p>}</p>
<p class="ql-align-justify">在HTML页面上声明如下所示的样式，其中(&nbsp;&nbsp;&nbsp;&nbsp;)样式为类样式</p><p>&lt;style type="text/css"&gt;</p><p>P{font-family:"宋体";color:blue;}</p><p>.IMPORTANT{font-family:"隶书";color:red;}</p><p class="ql-align-justify">&lt;/style&gt;</p>
<p>在HTML中，关于CSS样式的说法错误的是( )</p>
<p>阅读下面HTML代码，段落标签&lt;p&gt;内文本最终显示的颜色是( )</p><p>&lt;style type="text/css"&gt;</p><p>body { color:#333; }</p><p>#text{ color:#666; }</p><p>.content { color:#00f; }</p><p>.gray { color:#f00; }</p><p>&lt;/style&gt;</p><p>......</p><p>&lt;p id="text" class="content gray"&gt;我我本将心向明月，奈何明月照沟渠。&lt;/p&gt;......</p>
<p>阅读下面CSS代码，下面选项中与该代码段效果等同的是( )</p><p>.box { margin:10px 5px; margin-right:10px; margin-top:5px; }</p>
<p>在 html 中,下列css属性中不属于盒子属性的是( )</p>
<p>在CSS选择器中，以下选项( )属于后代选择器</p>
<p>下面CSS样式中哪项不能给标签设置背景色( )</p>
<p>在CSS权重中,下面哪项说法正确( )</p>
<p>元素在页面上所占实际宽度是以下哪个( )</p>
<p>下面哪个对于margin的介绍是错误的( )</p>
<p>下面哪个算法是正确的( )</p>
<p>下面哪个描述是正确的( )</p>
<p>下面哪项是正确的( )</p>
<p>现在有一个内容溢出的父元素,想要实现滚动条需要设置以下什么属性( )</p>
<p>下面哪个描述是正确的( )</p>
<p>下面对伪元素的描述哪些是正确的( )</p>
<p>如何将一个元素的类型变成块级元素( )</p>
<p>下面哪些不是position的属性值( )</p>
<p>下面哪个说法是正确的( )</p>
<p>下面对外边距折叠的描述是正确的( )</p>
<p>下面哪个说法是正确的( )</p>
<p>下面哪项是正确的( )</p><p>&lt;style&gt;</p><p>.box{</p><p>width:300px;</p><p>height:150px;</p><p>padding:50px;</p><p>border:10px solid red;</p><p>margin:40px;</p><p>}</p><p>&lt;/style&gt;</p><p>&lt;div class=”box”&gt;&lt;/div&gt;</p>
<p>在html中,实现如下图所示效果,则横线处应填写的代码是( )</p><p>&amp;lt;style&amp;gt;</p><p>li{</p><p>width:150px;</p><p>font:28px 隶书;</p><p>list-style:_____;</p><p>float:_____;</p><p>}</p><p>&amp;lt;/style&amp;gt;</p><p>&amp;lt;div&amp;gt;</p><p>&amp;lt;ul&amp;gt;</p><p>&amp;lt;li&amp;gt;登录&amp;lt;/li&amp;gt;</p><p>&amp;lt;li&amp;gt;注册&amp;lt;/li&amp;gt;</p><p>&amp;lt;li&amp;gt;帮助&amp;lt;/li&amp;gt;</p><p>&amp;lt;/ul&amp;gt;</p><p>&amp;lt;/div&amp;gt;</p><p><br></p><p>图:登录&nbsp;注册&nbsp;帮助&nbsp;</p>
<p>若某个标签里的内容超过标签的尺寸，则超出的内容自动隐藏的CSS样式是( )</p>
<p>关于float描述错误的是( )</p>
<p>关于css的说法正确的是( )</p>
<p>下述有关css属性position的属性值的描述，说法错误的是( )</p>
<p>阅读下面HTML代码，如果期望tabs位于box容器的右下角，则需要添加的CSS样式是( )</p><p>&lt;div id=”box”&gt;&lt;div id=”tabs”&gt;&lt;/div&gt;&lt;/div&gt;</p>
<p>请判断以下说法是否正确：如需设置元素内容与边框间的空间，可使用 padding 属性，并可使用负值( )</p>
<p>在CSS中，下面关于样式“#container, .main{font-size:12px;}”与“#container .main{font-size:14px;}”的说法正确的是( )</p>
<p>以下对<span style="color: rgb(57, 57, 57);">CSS属性</span>white-space介绍错误的是哪个( )</p>
<p>以下说法正确的是( )</p>
<p>以下对于background-origin属性的介绍正确的是( )</p>
<p>实现背景水平垂直都平铺效果，对应的CSS为( )</p>
<p>下面选项中，可以设置页面中某个DIV标签相对页面水平居中的CSS样式是( )</p>
<p>跨多行表格是在单元格里用哪个属性进行设置( )</p>
<p>如果要列出一个目录下所有的文件需要使用的命令是()</p>
<p>以下哪个命令可以将普通用户转为超级用户（）</p>
<p>除非特别指定，cp假定要拷贝的文件在下面哪个目录下（）</p>
<p>在vi编辑器中 ，命令 “dd” 用来删除当前的（）</p>
<p>按下（）键能够终止当前运行的命令</p>
<p>以下哪个命令可以终止一个用户的所有进程？</p>
<p>Vector类的特点是</p>
<p>关于迭代器说法错误的是</p>
<p>下列方法不是Collection通用方法的有</p>
<p>创建一个只能存放String的泛型ArrayList的语句是哪项？</p>
<p>下列哪些项是泛型的优点（）</p>
<p>关于泛型的说法错误的是( )&nbsp;</p>
<p>使用泛型的规则有哪些（）</p>
<p>vi中那条命令是不保存强制退出（）</p>
<p>用户编写了一个文本文件a.txt，想将该文件改名为txt.a,下面命令（）可以实现</p>
<p>查看linux环境下IP地址的命令是（）</p>
<p>redis的value值不支持以下那种数据类型的存储</p>
<p>关于wait()和sleep()描述正确是是</p>
<p>给出代码如下：</p><p>public class MyRunnable implements Runnable{</p><p>public void run(){}</p><p>public static void main(String args[]){</p><p>----------------------</p><p>}}</p><p>请问在虚线处，如下哪些代码可以创建并启动线程？</p>
<p>以下关于redis持久化方式说法错误的是（）</p>
<p>线程对象的生命周期中,通常经历下面哪些状态（ ）</p>
<p>下列关于Thread类提供的线程控制方法的说法中，错误的是（ ）</p>
<p>有关线程的哪些叙述是对的? （ ）</p>
<p>以下关于redis的描述正确的是（）</p>
<p>以下不属于redis事务相关操作的命令是（）</p>
<p>下列File类的方法应用说明正确的是&nbsp;</p>
<p>关于File对象创建错误的是</p>
<p>请问以下哪个选项是相对路径</p>
<p>以下关于redis Hash槽的说法错误的是（）</p>
<p>以下关于redis事务的说法错误的是（）</p>
<p>&nbsp;用一条SQL 语句 查询出每门课都大于80 分的学生姓名</p><p>name course grade</p><p>张三 语文 81</p><p>张三 数学 75</p><p>李四 语文 76</p><p>李四 数学 90</p><p>王五 语文 81</p><p>王五 数学 100</p><p>王五 英语 90</p>
<p>SELECT语句中与HAVING子句通常同时使用的是()子句。</p>
<p>SELECT语句的完整语法较复杂，但至少包括的部分是( )</p>
<p>SQL语句中的条件用以下哪一项来表达</p>
<p>下列关于Spring自动装配的说法中，错误的是（）</p>
<p>&nbsp;HTTP的中文含义为（）</p>
<p>下面关于tomcat服务器描述正确的是（）</p>
<p>tomcat安装成功后默认的端口是（）</p>
<p>Web应用程序中web.xml是放置以下哪个目录中（）&nbsp;</p>
<p>下面有关Servlet的描述错误的是（）</p>
<p>下面不是Servlet可处理的方法是（）</p>
<p>进行重定向时，调用response对象的（）方法</p>
<p>用户使用POST方式提交的数据中存在汉字(使用GBK字符集)，在servlet中需要使用下述（）语句处理</p>
<p>jsp最终被运行的文件类型是（）&nbsp;</p>
<p>以下( )标签用来建立无序列表</p>
<p>下面不属于JSP指令的是：（）</p>
<p>以下( )标签在页面中显示水平线</p>
<p>下面关于HTML描述错误的是()</p>
<p>下列不是HTML预定义标签()</p>
<p>以下用来显示一张图片效果的标签 ( )</p>
<p>以下使用CSS中后代选择器的( )</p>
<p>以下CSS样式RGB颜色表示方式( )</p>
<p>&nbsp;jsp动作标签用于转向另一个页面（）</p>
<p>在css样式中用来指定字体大小的属性（）</p>
<p>&nbsp;四个域对象的作用范围从小到大依次为（）</p>
<p>以下哪种是javascript用来创建对象的方式： ( )</p>
<p>以下哪个EL隐含对象可以获取请求参数中的值：（）&nbsp;</p>
<p>下面哪些是document对象的方法()</p>
<p>要使用JSTL的核心标签库需要在JSP源文件的首部加入如下声明语句（）</p>
<p>DOM元素以下可以使用的方法和属性：( )</p>
<p>以下标签用于实现循环功能的是哪个，类似与Java语句中的for循环&nbsp;</p>
<p>下列选项中属于window对象的方法是()</p>
<p>在JSP中，page指令的属性有（）</p>
<p>DOM中的节点类型包括下列哪些( )</p>
<p>在运行的web应用程序的WEB-INF/目录结构中，会有（）文件</p>
<p>如果需要匹配包含文本的元素，用下面哪种来实现？</p>
<p>在一个指定的元素后添加内容，下面哪个实现该功能？</p>
<p>EL中的隐含对象有（）</p>
<p>以下（）标签属于JSTL核心标签库</p>
<p>在jquery中，想要给元素添加样式，下面哪一个是正确的？</p>
<p>JSP中，HTML注释的特点是（）</p>
<p>在jquery中获取当前窗口的宽度值，下面哪个实现该功能的？()</p><p>A.width()</p><p>B.width(val)</p><p>C.width</p><p>D.innerWidth()</p>
<p>在jquery中获取当前窗口的宽度值，下面哪个实现该功能的？</p>
<p>在jquery中不是操作属性节点的是</p>
<p>cookie默认情况下如何被清除（）</p>
<p>下面哪个函数可以实现隐藏id=”id_txt”的元素？&nbsp;&nbsp;</p>
<p>下面关于session的用法哪项是错误的？（）</p>
<p>以下关于jQuery的描述错误的是（）</p>
<p>Session默认有效时间多长（）</p>
<p>设置session有效时间的方法是（）</p>
<p>下列选项中不可以关闭会话的是（）</p>
<p>Session对象的（）方法用于判断是否为开启新会话</p>
<p>下面有关Filter的描述错误的是（）</p>
<p>应用工程中Filter过滤器的执行顺序：（）</p>
<p>Filter接口定义的方法，用来过滤处理是（）</p>
<p>&nbsp;ServletContext对象被创建时设置初始化值，使用如下哪个方法</p>
<p>&nbsp;jQuery 的方法$.get()做什么？</p>
<p>以下函数不是jQuery内置函数的是()</p>
<p>以下不能实现与服务器进行数据交互的选项（）</p>
<p>在文件上传时，用（）对象接收文件</p>
<p>页面实现文件上传功能，以下描述错误的（）</p>
<p>应用工程中使用Filter过滤器处理哪些功能：（）</p>
<p>JAVAWeb中的原生组件（）</p>
<p>&nbsp;Filter接口中doFilter()方法中的参数类型？（）</p>
<p>以下函数是jQuery内置的与AJAX相关的函数（）</p>
<p>文件上传使用哪些第三方jar （）</p>
<p>表单中的数据要提交到哪里处理,由表单的属性指定（）</p>
<p>页面中需要增加链接a标签，正确的HTML代码是（）</p>
<p>以下选项中哪个全部都是表格标签（）</p>
<p>下面不是CSS选择器的（）</p>
<p>边框的宽度通过哪个指定？（）</p>
<p>以下创建javascript方法声明的正确格式为（）</p>
<p>下面不是document对象的方法是（）&nbsp;</p>
<p>对于id为"name"的文本框，判断其不为空的正确javaScript代码是（）</p>
<p>以下用来获取DOM元素中最后一个元素的是：（）</p>
<p>jQuery中下面实现用来追加到指定元素的末尾的方法？（）</p>
<p>jquery中从DOM中删除所有匹配的元素，下面哪个可以实现？（）</p>
<p>&nbsp;jquery中选取class=’myClass’属性的所有元素？（）</p>
<p>关于正则表达式说法错误的是?</p>
<p>下面哪种不是jQuery的选择器？（）</p>
<p>JQuery中，属于鼠标事件方法的选项是（）</p>
<p>下面关于HTML描述正确的是（）</p>
<p>Form表单的method属性值有哪些情况可设置（）</p>
<p>以下javascript创建函数声明格式不正确的（）</p>
<p>下面哪些是jQuery的选择器？（）</p>
<p>以下关于jQuery的描述正确的是（）</p>
<p>下列关于channel 的特征描述错误的是？[单选题]</p>
<p>下列最不适用于memory channel 传输数据的情景是？[单选题]</p>
<p>下列关于flume 的配置中能够体现出多路复用特征的是？[单选题]</p>
<p>下列关于flume 的配置中能够体现出负载均衡特征的是？[单选题]</p>
<p>下列关于flume 事务机制描述正确的是？[多选题]</p>
<p>下列关于flume 数据丢失描述正确的是？</p>
<p>下列常用source 中描述正确的是？[多选题]</p>
<p>下列常用sink 中描述正确的是？[多选题]</p>
<p>下列关于自定义拦截器中描述错误的是？[单选题]</p>
<p>下列关于kafka 造成数据丢失的场景描述正确的是？[多选题]</p>
<p>下列关于kafka 消费者组的描述错误的是？[多选题]</p>
<p>下列关于kafka 的分区和副本描述错误的是？[单选题]</p>
<p>下列关于kafka 文件存储机制划分描述错误的是？[单选题]</p>
<p>下列关于kafka 生产者分区策略描述正确的是？[多选题]</p>
<p>下列关于kafka生产者的副本数据同步策略描述错误的是？[单选题]</p>
<p>下列关于kafka 中两个重要索引位置描述错误的是？[多选题]</p>
<p>zookeeper采用什么设计模式？</p>
<p>zookeeper的主要作用是什么？</p>
<p>zookeeper数据存储采用什么结构？</p>
<p>下面哪个是zookeeper的临时顺序编号目录节点？</p>
<p>zookeeper测试服务是否处于正确状态的命令是？</p>
<p>zookeeper的默认端口号是多少？</p>
<p>zookeeper的监听到一个数据有变化时发送几次通知？</p>
<p>zookeeper集群搭建最少需要几台主机？</p>
<p>以下对XML描述正确的( )</p>
<p>XML实际中的主要用途( )</p>
<p>以下正确描述XML语法规则的选项( )</p>
<p>Java 提供的 DOM 解析特点( )</p>
<p>Dom4j用来解析XML使用的核心类(A)</p><p>A.</p><p>B.</p><p>C.XMLWriter</p><p>D.DocumentHelper</p>
<p>Dom4j用来解析XML使用的核心类( )</p>
<p>访问tomcat部署的应用出现404错误，原因是()&nbsp;</p>
<p>修改tomcat端口，需要在哪个文件中指定()</p>
<p>在tomcat上发布javaweb应用默认的是什么目录( )&nbsp;</p>
<p>tomcat启动hello这个web应用，在浏览器地址栏访问login.html资源的url()&nbsp;</p>
<p>tomcat启动hello这个web应用，在浏览器地址栏访问login.html资源的url哪个是正确的</p>
<p>开发web项目时，web.xml文件一般位于目录结构中的( )下</p>
<p>在web应用程序的目录结构中，WEB-INF/lib目录下放( )文件</p>
<p><span style="color: rgb(64, 50, 38);">使用SpringMVC&nbsp;处理普通页面请求，&nbsp;下面哪个排序是正确的（）</span></p><p><span style="color: rgb(64, 50, 38);">1.请求：请求提交给服务器</span></p><p>2.分发：分发器通过web&nbsp;应用配置信息&nbsp;，&nbsp;将请求分发至适当的控制器</p><p>3.服务调用：控制器与业务层交互</p><p>4.响应：控制器更新模型，将执行结果返回给客户端展现</p>
<p>安装完tomcat后，CATALINA_HOME下包括以下哪些内容( )&nbsp;</p>
<p><span style="color: rgb(64, 50, 38);">在SpringMVC中，哪个类是负责处理HTTP请求和响应的（）</span></p>
<p><span style="color: rgb(64, 50, 38);">下面关于SpringMVC&nbsp;描述正确的是（）</span></p>
<p>表示重定向的状态码是( )&nbsp;</p>
<p>下面哪一项可以实现防盗链( )&nbsp;</p>
<p>下列关于@RequestParam绑定请求参数值的说法正确的是()。</p>
<p>下面有关HTTP协议的说法不正确的是（ ）</p>
<p>以下属于Get请求报文的：(A)</p>
<p>post()和get()区别描述不正确的是()</p>
<p>在SpringMVC配置文件中，有如下配置:</p><p>&lt;bean&nbsp;class=&nbsp;"org.&nbsp;springfr&nbsp;amework.&nbsp;web.&nbsp;servlet.&nbsp;view.&nbsp;InternalResourceViewResolver&nbsp;p:prefix="/"&nbsp;p:suffix=".jsp"/&gt;</p><p>以下代码有可能从controller跳转到welcome.&nbsp;jsp并能够在jsp中显示出username数据的是()。</p><p><strong> </strong></p><p><strong> </strong></p>
<p>以下HTTP相应状态码的含义描述正确的是（ ）</p>
<p>Get请求报文中，请求首行除显示请求方式外，还包括什么内容( )</p>
<p>在SpringMVC中，SpringMVC的异常处理总共分为几个步骤(&nbsp;)。</p><p><strong> </strong></p><p><strong> </strong></p>
<p>Get请求报文中，请求首行除显示请求方式外，还包括什么内容( )</p>
<p>文由哪几部分组成：(ABC)</p>
<p>报文由哪几部分组成( )</p>
<p>http协议中关于get请求与post请求说法正确的是( )&nbsp;</p>
<p>http响应包含以下哪些部分( )</p>
<p>在使用MyBatis的时候,除了可以使用@Param注解来实现多参数入参,还可以用（）传递多个参数值。</p><p>（选择一项）</p>
<p>Mybatis有两种事物管理器类型，分别是（）和（）</p><p>(选择二项)</p>
<p>以下关于Mybatis核心类生命周期的说法错误的是（）</p>
<p>以下属于Mybatis内置类型别名的有（）</p><p>(选择二项)</p>
<p><span style="color: black;">下列关于Spring自动装配的说法中，错误的是（）</span></p>
<p>以下关于Spring自动装配与依赖检查的说法中错误的是(&nbsp;)。</p>
<p><span style="color: rgb(64, 50, 38);">下列关于Spring特性中IOC描述错误的是（）</span></p>
<p>下列关于ModelAndView的说法错误的是(&nbsp;)。</p>
<p>在使用SpringMVC的项目中，进行服务器端验证，用什么注解可以实现正则匹配</p>
<p>有关MVC的处理过程，描述不正确的是(&nbsp;)。</p>
<p>InternalResourceViewResolve父类是()</p>
<p>关于Spring框架说法错误的是(&nbsp;)。</p>
<p><span style="color: rgb(64, 50, 38);">"@RequestMapping是Spring中的哪一部分（）</span></p>
<p>在使用Spring表单标签之前，需要在jsp页面上先引入标签库:</p><p>&lt;%@&nbsp;taglib&nbsp;prefix=&nbsp;fm"&nbsp;uri="&nbsp;http:&nbsp;//www.&nbsp;spr&nbsp;ingfr&nbsp;amework.&nbsp;org/tags/form&nbsp;%&gt;那么在&nbsp;此页面上使用spring标签正确的是(&nbsp;)</p><p><span style="color: rgb(64, 50, 38);"> </span></p><p><span style="color: rgb(64, 50, 38);"> </span></p>
<p>在做Spring框架和MyBatis框架整合时，关于mapperLocations属&nbsp;性描述错误的是(&nbsp;)。</p><p><span style="color: rgb(64, 50, 38);"> </span></p><p><span style="color: rgb(64, 50, 38);"> </span></p>
<p>Spring与MyBatis整合，下列说法错误的是(&nbsp;)。</p><p><span style="color: rgb(64, 50, 38);"> </span></p><p><span style="color: rgb(64, 50, 38);"> </span></p>
<p>下面对sqoop描述正确的是？</p>
<p>在Sqoop中，“导入”概念指？</p>
<p>在Sqoop中，“导出”概念指？</p>
<p>sqoop默认的map个数是？</p>
<p>sqoop将关系型数据库中的数据导入到HDFS(包括Hive，HBase)中，如果导入的是Hive，那么当Hive中没有对应表时，则自动创建</p>
<p>sqoop导入数据到Mysql中，如果表不存在，不会自动创建</p>
<p>使用sh格式的文件打包sqoop命令</p>
<p>删除用户账号命令是哪个？</p>
<p>可以在创建表时用(&nbsp;&nbsp;&nbsp;)来创建唯一索引，也可以用(&nbsp;&nbsp;&nbsp;)来创建唯一索引</p>
<p>关于SQL优化，以下说明哪个是错误的是</p>
<p>Mysql默认支持事务的引擎为？</p>
<p>下列是Redis的五种数据类型的是?</p>
<p>MyISAM和InnoDB区别中错误的一项是？</p>
<p>性能下降SQL慢、执行时间和等待时间长解决方式不正确的一项是？</p>
<p>下列关于mysql 和redis 对比中描述错误的是?﻿</p>
<p>下列关于mysql 和redis 对比中描述正确的是？</p>
<p>下列关于Redis持久化描述中错误的是？</p>
<p>下列关于Redis持久化描述中错误的是？</p>
<p>性能下降SQL慢、执行时间和等待时间长解决方式不正确的一项是？</p>
<p>下列关于Redis事务描述中错误的是？</p>
<p>哪种情况需要创建索引？</p>
<p>下列关于Redis主从复制描述中错误的是？</p>
<p>哪种情况不要创建索引？</p>
<p>一个表中A、B、C三个字段创建组合索引，那查询情况索引不起作用？</p>
<p>下列属于redis 事务特性的是？</p>
<p>什么情况下会导致索引失效？（多选）</p>
<p>下列哪些场景适用于redis ？</p>
<p>MyISAM引擎的索引底层结构是？</p>
<p>下列有关RDB和AOF区别描述正确的是？</p>
<p>使用redis有哪些优势？</p>
<p>Explain能干什么？（多选）</p>
<p>下列关于Redis锁机制描述正确的是？</p>
<p>慢查询日志有关错误的选项是？</p>
<p>有关于mysql主从复制错误的选项是？</p>
<p>下列关于Git的说法中错误的是？</p>
<p>有关于mysql视图错误的选项是？</p>
<p>下列不属于Git初次构建需要执行的命令的是？</p>
<p>下列可以将一个新建文件test.log提交到本地库的命令是？</p>
<p>下列关于版本切换的命令描述错误的是？</p>
<p>下列关于删除命令描述错误的是？</p>
<p>下列关于elasticsearch描述正确的是？</p>
<p>下列选项中描述正确的是？</p>
<p>下列选项中描述正确的是？</p>
<p>下列选项中描述正确的是？</p>
<p>下列描述中正确的是？</p>
<p>关于Maven的坐标和仓库中位置的对应关系 &lt;dependency&gt; &lt;groupId&gt;com.atguigu.gmall&lt;/groupId&gt; &lt;artifactId&gt;gmall-api&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;/dependency&gt; 以下说法正确的是（）</p>
<pre class="ql-syntax" spellcheck="false">关于Maven的坐标和仓库中位置的对应关系
&lt;dependency&gt;
   &lt;groupId&gt;com.atguigu.gmall&lt;/groupId&gt;
   &lt;artifactId&gt;gmall-api&lt;/artifactId&gt;
   &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
&lt;/dependency&gt;
以下说法正确的是（）
</pre>
<p>Maven重要的依赖范围有哪些（）</p><p>（多选）</p>
<p>shell中脚本开始的 #!/bin/sh 或 #!/bin/bash 表示什么意思 ?[单选题]</p>
<p>shell中 "&gt;&gt;" 作用是什么 ?[单选题]</p>
<p>shell中&nbsp;&amp; 和 &amp;&amp; 有什么区别?[单选题]</p>
<p>’ 和 ” 引号有什么区别 ?</p><p>[单选题]</p>
<p>下列关于shell中  和 " 的用法描述错误的是?[单选题]</p>
<p>shell中如何检查之前的命令是否运行成功?[单选题]</p>
<p>在bash中，变量默认类型是什么？ [单选题]</p>
<p>1.下面那个方法能够读取给定HttpServletRequest request对象中的所有Cookie ( )</p>
<p>Page指令中的哪一个属性用来定义Jsp页面的MIME类型和Jsp字符的编码。</p>
<p>什么是 git</p>
<p>使用request 对象的getParameter()方法可以读取页面输入信息对应标签的哪个属性值( )</p>
<p>&nbsp;HDFS-HA工作要点中元数据管理，描写正确的是？[多选]</p>
<p>配置Metastore到MySql的说法正确的是？ [单选题]</p>
<p>&nbsp;load data [local] inpath /opt/module/datas/student.txt [overwrite] into table student [partition (partcol1=val1,…)];</p><p>以下描述的对的是？[多选]</p>
<p>git使用ssh的好处</p>
<p><strong>&nbsp;</strong>下面的说法正确的是(&nbsp;)</p>
<p>关于main方法说法错误的是（）</p>
<p>hive是什么，以下描述正确的是？[多选]</p>
<p>下面代码执行结果是？</p><p>public static void main(String[] args) {</p><p>boolean b = true;</p><p>if (b = false) {</p><p>System.out.println("a");</p><p>} else if (b) {</p><p>System.out.println("b");</p><p>} else if (!b) {</p><p>System.out.println("c");</p><p>} else { System.out.println("d"); } }</p>
<p>RDD的特性中弹性体现在什么方面？[多选题]</p>
<p>下列关于RDD的说法中正确的是？[多选题]</p>
<p>下列关于RDD的说法中正确的是</p>
<p>下列关于RDD的说法中正确的是？[多选题]</p>
<p>&nbsp;&nbsp;Hive支持用户自定义函数，用户可以根据自己的需求来实现自己的函数。</p>
<p>下列关于RDD的分区器说法中正确的是？[多选题]</p>
<p>spark从外部存储系统创建RDD不包括的</p>
<p>&nbsp;&nbsp;Hive支持用户自定义函数，用户可以根据自己的需求来实现自己的函数。[单选]</p>
<p>下列算子中可以减少数据的是</p>
<p>下列算子中可以将数据进行重分区的是？[多选题]</p>
<p>下列算子中不能对数据进行聚合的是</p>
<p>git 用什么语言编写的</p>
<p>truncate table student;这命令中truncate的描述正确的是[单选]</p>
<p>对hql写法的描述正确的是[多选]</p>
<p>下列算子中没有涉及到shuffle的是？[多选题]</p>
<p>下列算子中返回值可以是一个集合的是？[多选题]</p>
<p>spark支持的序列化框架有？[多选题]</p>
<p>下列关于spark中的job调度说法正确的是？[多选题]</p>
<p>下列关于spark的job划分说法正确的是？[多选题]</p>
<p>下列关于RDD的持久化说法正确的是？[多选题]</p>
<p>spark缓存和检查点的区别在于？[多选题]</p>
<p>sparksql具有什么特点 [多选题]</p>
<p>sparksql是spark用于处理什么数据的模块？</p>
<p>Dataframe比RDD性能高的主要原因是</p>
<p>git pull 和git fetch 有什么区别</p>
<p>sparksql中最新的SQL查询起始点是：</p>
<p>创建Dataframe的方式有： [多选题]</p>
<p>sparksql支持读取数据源的格式有 [多选题]</p>
<p>下列关于sparksql中临时表的说法正确的是 [多选题]</p>
<p>下列关于sparksql中样例类的说法正确的是 [多选题]</p>
<p>包含Hive支持的SparkSQL可以支持： [多选题]</p>
<p>HDFS是基于流数据模式访问和处理超大文件的需求而开发的，具有高容错、高可靠性、高可扩展性、高吞吐率等特征，适合的读写任务是 [单选题]</p>
<p>sparksql如果想连接外部Hive，需要做什么[多选题]</p>
<p>spark的内部通讯组件是什么</p>
<p>下面哪个程序负责 HDFS 数据存储？ [单选题]</p>
<p>下列关于spark本地化调度说法正确的是 [多选题]</p>
<p>&nbsp;NameNode故障后，采用什么方法恢复数据？[单选题]</p>
<p>下列关于spark的shuffle说法正确的是 [多选题]</p>
<p>下列关于yarn模式说法正确的是 [多选题]</p>
<p>在mr计算过程中如何决定partition的个数？[单选题]</p>
<p>spark优化资源分配可以采取的措施有 [多选题]</p>
<p>下列关于并行度优化说法正确的是 [多选题]</p>
<p>配置机架感知的下面哪项正确：[多选]</p>
<p>nginx 的 主要功能</p>
<p>下列关于spark shuffle调优说法正确的是 [多选题]</p>
<p>nginx的主要作用</p>
<p>&nbsp;HDFS无法高效存储大量小文件，想让它能处理好小文件，比较可行的改进策略错误的是 [单选题]</p>
<p>&nbsp;HDFS无法高效存储大量小文件，想让它能处理好小文件，比较可行的改进策略错误的是 [单选题]</p>
<p>下列关于解决spark 数据倾斜的说法正确的是 [多选题]</p>
<p>Namenode在启动时自动进入安全模式，在安全模式阶段，说法错误的是&nbsp;[单选题]</p>
<p>虚拟机自带的类加载器包含以下哪几种？</p>
<p>垃圾回收阶段的算法有几种？（非标记阶段）</p>
<p>下列GC算法说法正确的是？</p>
<p>关于堆内存的划分，下列说法正确的是</p>
<p>关于养老区，下列说法正确的是</p>
<p><span style="color: rgb(27, 39, 51);">通常情况，JVM中使用类加载器的优先级是？</span></p>
<p><span style="color: rgb(51, 51, 51);">下列关于JDK、JRE、JVM 关系的描述中，正确的是（）</span></p>
<p><span style="color: rgb(51, 51, 51);">以下哪些选项属于JVM内存模型的一部分？</span></p>
<p>关于Java栈，下列描述错误的是</p>
<p><span style="color: rgb(51, 51, 51);">关于JVM的类加载机制描述不正确的是？</span></p>
<p>下列dubbo描述错误的是( )</p>
<p>不是dubbo负载均衡策略( )</p>
<p>在开发dubbo的过程中，直连模式描述错误的是</p>
<p>dubbo推荐使用的注册中心是哪个？</p>
<p>在 Provider 上可以配置的 Consumer 端的属性有哪些？</p>
<p>dubbo包含哪些组成部分</p>
<p>Dubbo推荐使用哪种协议？</p>
<p>下列选项哪些是集群容错方案？</p>
<p>关于Dubbo原理描述正确的是？</p>
<p>Dubbo的重试次数的默认配置是多少？</p>
<p><span style="color: rgb(17, 43, 33);">创建多线程的方法有哪几种？</span></p>
<p>关于synchronize和Lock锁的区别描述正确的是？</p>
<p>lambda表达式的写法口诀包含下列哪些？</p>
<p>常用的JUC辅助类工具有哪些？</p>
<p>关于CountDownLatch原理描述错误的是？</p>
<p>关于CyclicBarrier原理描述错误的是？</p>
<p>关于Semaphore原理描述错误的是？</p>
<p>下列选项哪些是阻塞队列的实现方式？</p>
<p>下列选项中，哪些属于线程池的实现方式？</p>
<p>线程池有哪几种拒绝策略？</p>
<p><span style="color: rgb(64, 64, 64);">SpringBoot 2.X与 1.X 有什么区别？</span></p>
<p>@SpringBootApplication注释在内部包含了那些重要注解</p>
<p>如何禁止特定的自动配置类</p>
<p>springcloud 和 dubbo的区别</p>
<p>eureka和zookeeper 的区别</p>
<p>如何避免消息重复投递或者重复消费</p>
<p>使用消息队列有什么缺点</p>
<p>使用消息队列有什么缺点</p>
<p>RabbitMq&nbsp;理论上一个queue&nbsp;中存放&nbsp;message&nbsp;最大可为多少?</p>
<p>什么是docker</p>
<p>docker的优点</p>
<p>以下那些是docker 容器的状态</p>
<p>docker的基本组成</p>
<p>docker的常用命令 正确的是</p>
<p>以下描述正确的是</p>
<p>ES中对数据的操作有</p>
<p>ES的优点</p>
<p>描述正确的是</p>
<p>elasticsearch 和 solr 的 对比阐述正确的是</p>
<p>从以下哪一个选项中可以获得Servlet的初始化参数。</p>
<p>表示“资源移动”的状态码是（）</p>
<p>下列关于模式匹配的说法中不正确的是</p>
<p>下列关于样例类case class的说法中错误的是</p>
<p>scala 中，类和它的伴生对象说法错误的是？</p>
<p>scala语言中关于List的定义，不正确的是</p>
<p>关于函数def sum(args:Int*) = {var r = 0 ; for(arg &lt;- args) r += arg ; r}}&nbsp;输出结果不一致的是</p>
<p>关于数组的常用算法，下列说法错误的是</p>
<p>对于函数</p><p>def getGoodsPrice(goods:String) = {</p><p>val prices = Map(“book” -&gt; 5, “pen” -&gt; 2, “sticker” -&gt; 1)</p><p>prices.getOrElse(goods, 0)</p><p>}</p><p>结果说法错误的是？</p>
<p>下面对MapReduce的优点描述不正确的是？</p>
<p>下面对MapReduce的缺点描述不正确的是？</p>
<p>一个完整的MapReduce程序在分布式运行时有哪几类实例进程？</p>
<p>FileInputFormat切片机制描述不正确的是？</p><p><br></p>
<p>CombineTextInputFormat切片机制描述不正确的是？</p>
<p>对Shuffle中的缓冲区描述不正确的是？</p>
<p>MapTask工作机制描述不正确的是？</p>
<p>ReduceTask工作机制描述不正确的是？</p>
<p>&nbsp;对OutputFormat接口实现类描述正确的是？[多选]</p>
<p>&nbsp;HDFS小文件解决方案描述正确的是？[多选]</p>
<p>Explain能干什么？（多选）</p>
<p>MyISAM引擎的索引底层结构是？</p>
<p>一个表中A、B、C三个字段创建组合索引，那查询情况索引不起作用？</p>
<p>哪种情况不要创建索引？</p>
<p>Maven重要的依赖范围有哪些（）</p><p>（多选）</p>
<p>maven的默认依赖范围是( )</p><p><br></p><ul><li>A、</li><li>B、</li><li>C、</li><li>D、</li></ul><p>【参考答案】: B</p>
<p>maven的默认依赖范围是[单选]( )</p>
<p>pom.xml配置文件中project标签下的一级子标签不包括[单选题]( )</p>
<p>以下描述Maven优点的是( )</p><p>[多选]</p>
<p>关于Maven的坐标和仓库中位置的对应关系 &lt;dependency&gt; &lt;groupId&gt;com.atguigu.gmall&lt;/groupId&gt; &lt;artifactId&gt;gmall-api&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;/dependency&gt; 以下说法正确的是[单选题]（）</p>
<p>查看linux环境下IP地址的命令是？</p>
<p>用户编写了一个文本文件a.txt，想将该文件改名为txt.a,下面命令正确的是？</p>
<p>vi中那条命令是不保存强制退出？</p>
<p><span style="color: rgb(96, 98, 102);">以下哪个命令可以强制杀死一个进程？</span></p>
<pre class="ql-syntax" spellcheck="false">按下（）键能够终止当前运行的命令


</pre>
<p>在vi编辑器中 ，命令 “dd” 的作用是？</p>
<pre class="ql-syntax" spellcheck="false">除非特别指定，cp假定要拷贝的文件在下面哪个目录下（）


</pre>
<p>以下哪个命令可以从一个用户切换到另一个用户（）</p>
<pre class="ql-syntax" spellcheck="false">如果要列出一个目录下所有的文件需要使用的命令是()


</pre>
<p>linux中如何删除一个非空目录/tmp</p>
<p>Hive支持的存储数据的格式有以下哪几种？[多选]</p>
<p>Hive中对行列存储的特点描述正确的是？[多选]</p>
<p>Hive中对Parquet格式描述正确的是？[多选]</p>
<p>在jquey中，如果想要从DOM中删除所有匹配的元素，下面哪一个是正确的?( )&nbsp;</p>
<p>在jquery中想要实现通过远程http get请求载入信息功能的是下面的哪一个( )</p>
<p>怎么才能隐藏下面的元素？</p><p>&lt;input id=”id_txt” name=”txt” type=”text”value=””/&gt;</p>
<p>在jquery中，选择使用myClass类的css的所有元素( )</p>
<p>Hive中对Fetch抓取描述正确的是？[多选]</p>
<p>下面选项中（）能获得焦点</p>
<p>写“Hello World”的正确javascript语法是（）？</p><p><br></p>
<p>HTML文档的树状结构中，（）标签为文档的根节点，位于结构中的最顶层。</p>
<p>Hive中对本地模式描述正确的是？[多选]</p>
<p>在HTML文档对象模型中，history对象的（）用于加载历史列表中的下一个URL页面</p>
<p>在HTML页面上编写Javascript代码时，应编写在（）标签中间。</p>
<p>Hive中对严格模式描述正确的是？[多选]</p>
<p>Hive中对JVM重用描述正确的是？[多选]</p>
<p>Hive中对推测执行描述正确的是？[多选]</p>
<p>为了获得用户提交的表单参数，可以从哪一个接口中得到()</p>
<p>从以下哪一个选项中可以获得Servlet的初始化参数()</p>
<p>哪一个对象可以用于获得浏览器发送的请求()</p>
<p>关于JSP生命周期的叙述，下列哪些为真()</p>
<p>下列哪个为JSP的注释标签()</p>
<p>Hive中对动态分区描述正确的是？[多选]</p>
<p>如果不希望在JSP页面中存取HTTP会话，应该如何设定page指令()</p>
<p>哪一个不是EL定义的隐式对象()</p>
<p>在JSTL中，实现jsp表达式操作相同的标签()</p>
<p>如何发送Cookie(&nbsp;)</p>
<p>如果没有指定Cookie的时效，那么默认的时效是(&nbsp;)</p>
<p>在使用服务器端的会话管理时，通过什么方法标识会话(&nbsp;)</p>
<p>Page指示符的language属性的作用是（&nbsp;）</p>
<p>在JSP中，哪个指令用来声明JSP欲使用的标签库(&nbsp;)</p>
<p>在Servlet的生命周期中，容器只调用一次的方法是(&nbsp;)</p>
<p>Hive中对内外表描述正确的是？[多选]</p>
<p>如何创建Cookie(&nbsp;)&nbsp;</p>
<p>Servlet在容器中经历的阶段，按顺序为()</p>
<p>Hive中对类型转换描述正确的是？[多选]</p>
<p>Hive中对表的连接描述正确的是？[多选]</p>
<p>判断”每一个region维护着startRow与endRowKey"是否正确？</p>
<p>判断”分区提前大致的规划好，可以提高HBase性能"是否正确？</p>
<p>zookeeper数据存储采用什么结构？</p>
<p>判断"如果要预分区的话，需要在创建表的时候预分区"是否正确？</p>
<p>下列关于Dataset的说法中，正确的是：[多选题]</p>
<p>判断"由于HFile中的数据要求是有序的,所以存在写缓存MemStore"是否正确？</p>
<p>判断"数据是先存储在MemStore中，排好序后，等到达刷写时机才会刷写到HFile"是否正确？</p>
<p><span style="color: black;">如下的操作中，哪一个不能将val names = List("Petter", "Paul", "Mary")中的相应地字符串全部变成大写</span></p>
<p><span style="color: black;">对于以下代码描述有误的是</span></p><p><span style="color: black;">﻿val data = Map(1 -&gt; "One", 2 -&gt; "Two")</span></p><p><span style="color: black;">val res = for((k, v) &lt;- data; if(k &gt; 1)) yield v</span></p>
<p><span style="color: black;">下述方法中，哪一个不能将"val tmp = List(1, 2, 3)"中的所有元素求和，并将最终结果6返回</span></p>
<p><span style="color: black;">下面有关Option类型描述有误的是</span></p>
<p><span style="color: black;">对集(Set)进行操作"Set(2, 0, 1) + 1 + 1 - 1"之后的结果为</span></p>
<p><span style="color: black;">对于拉链操作</span></p><p><span style="color: black;">val key = Array(1, 2)</span></p><p><span style="color: black;">val value = Array(“one”,”two”)</span></p><p><span style="color: black;">val m = key.zip(value).toMap</span></p><p><span style="color: black;">返回结果正确的是</span></p>
<p><span style="color: black;">关于数组Array.ofDim[Int](2,3)的初始化结果说明正确的是</span></p>
<p>cookie默认情况下如何被清除（）</p>
<p>下面关于session的用法哪项是错误的？（）</p>
<p>Session默认有效时间多长（）</p>
<p>设置session有效时间的方法是（）</p>
<p>下列选项中不可以关闭会话的是（）</p>
<p>Session对象的（）方法用于判断是否为开启新会话</p>
<p>下面有关Filter的描述错误的是（）</p>
<p>应用工程中Filter过滤器的执行顺序：（）</p>
<p>Filter接口定义的方法，用来过滤处理是（）</p>
<p>在文件上传时，用（）对象接收文件</p>
<p>页面实现文件上传功能，以下描述错误的（）</p>
<p>Filter接口中doFilter()方法中的参数类型？（）</p>
<p>文件上传使用哪些第三方jar （）</p>
<p>以下函数是jQuery内置的与AJAX相关的函数。（）</p>
<p>以下不能实现与服务器进行数据交互的选项（）</p>
<p>以下函数不是jQuery内置函数。（）</p>
<p>jQuery 的方法$.get()做什么？（）</p>
<p>以下那几个监听器，必须在web.xml中设定？</p>
<p>以下哪个为监听器的事件类型之一？</p>
<p>以下哪几个事件类型，拥有getName（）与getValue（）方法？</p>
<p>EL表达式的运算方式有哪些</p>
<p><span style="color: rgb(77, 77, 77);">下列说法正确的是（）</span></p>
<p><span style="color: rgb(77, 77, 77);">下列说法正确的是（）</span></p>
<p>Filter过滤器调用哪个方法才能继续传递道下一个过滤器</p>
<p>以下哪个技术不是Ajax技术体系的组成部分</p>
<p>XMLHttpRequest对象返回状态值有几个</p>
<p>进行文件上传时，Form表单的请求方式是什么</p>
<p><span style="color: rgb(51, 51, 51);">在关于依赖注入，描述正确的是</span></p>
<p><span style="color: rgb(77, 77, 77);">对于Spring的AOP的实现方式下列选项说法错误的是</span></p>
<p><span style="color: rgb(77, 77, 77);">下面对Spring中Bean的注入说法正确的是</span></p>
<p><span style="color: rgb(77, 77, 77);">关于ApplicationContext接口，下列说法错误的是</span></p>
<p><span style="color: rgb(77, 77, 77);">下面关于事务管理说法错误的是</span></p>
<p><span style="color: rgb(77, 77, 77);">以下说法不正确的是</span></p>
<p><span style="color: rgb(77, 77, 77);">下面对Spring框架的持久化支持说法错误的是</span></p>
<p>在一个运行结果的测试类中，有如下代码：</p><p>ApplicationContext Context=new ClassPathXmlApplicationContext（"applicationContext"）</p><p>UserService uservice=（UserService）Context.getBean("userservice")</p><p>下列选项中关于Spring的配置文件理解不正确的是</p>
<p><span style="color: rgb(77, 77, 77);">使用Spring简化Hibernate的开发，不需要的步骤是</span></p>
<p><span style="color: rgb(77, 77, 77);">下面对Spring说法正确的是</span></p>
<p><strong>以下关于Object类,说法错误的是? （）</strong></p>
<p><strong>下面对于toString()方法和equals()方法描述正确的是? （）</strong></p>
<p><strong>读代码,控制台输出的结果为? （）</strong></p><p>public class IntegerDemo {</p><p>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String str = "123";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(str + 10);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i = Integer.parseInt(str);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(i + 10);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p>
<p class="ql-align-justify">当DOM加载完成后要执行的函数，下面哪个是正确的？( )</p>
<p class="ql-align-justify">下面哪一个是jQ方法，用来追加到指定元素内的末尾的？()</p>
<p class="ql-align-justify">如果需要选择器匹配被选中的单选框，用下面哪种来实现？()</p>
<p class="ql-align-justify">如果想要找到一个指定下标的jQuery对象，用下面哪个方法可以快速找到？()</p>
<p class="ql-align-justify">如果想在一个指定的元素的后边添加内容，下面哪个是实现该功能的？()</p>
<p class="ql-align-justify">在jquery中，如果想要从DOM中删除所有匹配的元素，下面哪一个是正确的？()</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">在jquery中，如果想要从DOM中删除所有匹配的元素，下面哪一个是正确的？()</p>
<p class="ql-align-justify">在jquery中，想要给元素添加样式，下面哪一个是正确的？()</p>
<p class="ql-align-justify">下面哪一个不是jquery对象访问的属性或方法?()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p class="ql-align-justify">在jquery中想要找到所有元素的同辈元素，下面哪一个是可以实现的？()</p>
<p class="ql-align-justify">以下jquery&nbsp;对象方法中，能实现事件委托的是(&nbsp;&nbsp;)&nbsp;</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">以下jquery&nbsp;对象方法中，能实现事件委托的是？(&nbsp;&nbsp;)&nbsp;</p>
<p class="ql-align-justify">表单元素的type属性的取值可以是（多选）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p class="ql-align-justify">怎么才能隐藏下面的元素？&nbsp;</p><p class="ql-align-justify">&lt;input id=”id_txt”&nbsp;name=”txt”&nbsp;type=”text”value=””/&gt;</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">在jQuery中</p><p class="ql-align-justify">$( #hello ).css ( "color"，"#f00000" )</p><p class="ql-align-justify">$( #hello ).css ( "color" )</p><p class="ql-align-justify">分别表示的含义是:&nbsp;(多选)&nbsp;</p>
<p class="ql-align-justify">在jquery中，选择使用myClass类的css的所有元素( )</p>
<p class="ql-align-justify">JQuery中，属于鼠标事件方法的选项是(&nbsp;&nbsp;)&nbsp;</p>
<p class="ql-align-justify">以下哪种不属于jQuery的选择器（） ？</p>
<p class="ql-align-justify">以下关于Jquery优点的说法中正确的是？(&nbsp;&nbsp;)&nbsp;</p>
<p class="ql-align-justify">在Jquery中，下列关于DOM操作的说法错误的是(&nbsp;&nbsp;)&nbsp;</p>
<p class="ql-align-justify">以下()选项能够正确地得到这个标签:( )</p><p class="ql-align-justify">&lt;input id="btnGo" type=”buttom”&nbsp;value=”点击”&nbsp;class=”btn”&gt;</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">以下关于jQuery的描述错误的是（）</p>
<p>Azkaban特点描述正确的是？</p>
<p>Azkaban由几个关键组件构成？</p>
<p><span style="color: rgb(87, 87, 87);">下列选项中不属于js中内置对象的是:</span></p><p><br></p><p><br></p><p><br></p>
<p>Azkaban就是能解决___的调度?</p>
<p>指定对象的属性以下方式正确的是（&nbsp;&nbsp;&nbsp;&nbsp;）</p>
<h2 class="ql-align-justify">以下代码运行的结果是输出( )</h2><p class="ql-align-justify">var a = b = 10;</p><p class="ql-align-justify">(function(){</p><p class="ql-align-justify">var a=b=20</p><p class="ql-align-justify">})();</p><p class="ql-align-justify">console.log(b);</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h2 class="ql-align-justify">以下代码运行的结果是输出( )</h2><p class="ql-align-justify">var a = b = 10;</p><p class="ql-align-justify">(function(){</p><p class="ql-align-justify">var a=b=20</p><p class="ql-align-justify">})();</p><p class="ql-align-justify">console.log(b);</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p><span style="color: rgb(87, 87, 87);">var foo = 1;</span></p><p><span style="color: rgb(87, 87, 87);">(function(){</span></p><p><span style="color: rgb(87, 87, 87);">&nbsp;&nbsp;console.log(foo);</span></p><p><span style="color: rgb(87, 87, 87);">&nbsp;&nbsp;var foo = 2;</span></p><p><span style="color: rgb(87, 87, 87);">&nbsp;&nbsp;console.log(foo);</span></p><p><span style="color: rgb(87, 87, 87);">})();</span></p><p><br></p><p class="ql-align-justify"><br></p>
<p>有以下代码：</p><p>&nbsp;&nbsp;function Dog(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;this.name = “小黑”</p><p>&nbsp;&nbsp;}；</p><p>&nbsp;&nbsp;var dog1 = new Dog();</p><p>&nbsp;&nbsp;请问此时this代表的是（&nbsp;&nbsp;&nbsp;&nbsp;）</p><p><br></p><p>&nbsp;</p><p><br></p><p class="ql-align-justify"><br></p>
<p>有以下JS代码：</p><p>&nbsp;&nbsp;var User = {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;count:1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;getCount:function(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.count;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;console.log(User.getCount());&nbsp;&nbsp;</p><p>&nbsp;&nbsp;var func = User.getCount;&nbsp;</p><p>&nbsp;&nbsp;console.log(func());</p><p>&nbsp;&nbsp;以上代码的打印结果分别是（&nbsp;&nbsp;&nbsp;&nbsp;）</p><p><br></p><p><br></p><p><br></p><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>下面代码，k的运行结果是（&nbsp;&nbsp;）</strong></h2><p class="ql-align-justify">var i = 0,j = 0;</p><p class="ql-align-justify">for(;i&lt;10,j&lt;6;i++,j++){</p><p class="ql-align-justify">k = i + j;</p><p class="ql-align-justify">}</p><p class="ql-align-justify">&nbsp;</p><p class="ql-align-justify"><br></p>
<p><strong style="color: rgb(87, 87, 87);">请问一下代码运行后的结果是</strong></p><p><strong style="color: rgb(87, 87, 87);">function&nbsp;funcSwitch(sFlag){ </strong></p><p><strong style="color: rgb(87, 87, 87);">switch(sFlag)&nbsp;{&nbsp;</strong></p><p><strong style="color: rgb(87, 87, 87);">case&nbsp;Test1:&nbsp;alert(Test1); </strong></p><p><strong style="color: rgb(87, 87, 87);"> break; </strong></p><p><strong style="color: rgb(87, 87, 87);"> case&nbsp;Test2:&nbsp;alert(Test2);&nbsp;</strong></p><p><strong style="color: rgb(87, 87, 87);"> break;&nbsp;default:;&nbsp;</strong></p><p><strong style="color: rgb(87, 87, 87);"> }&nbsp;</strong></p><p><strong style="color: rgb(87, 87, 87);">}&nbsp;</strong></p><p><strong style="color: rgb(87, 87, 87);">funcSwitch(Test2);</strong></p><p><br></p><p><br></p><p><br></p><p class="ql-align-justify"><br></p>
<p>下面的等式成立的是（&nbsp;&nbsp;&nbsp;）</p>
<p>请选择结果为真的选项（&nbsp;&nbsp;）</p>
<p>以下代码运行后弹出的结果是(&nbsp;&nbsp;&nbsp;)</p><p>var a = 888;</p><p>++a;</p><p>alert(a++);</p>
<p>下列的哪一个表达式将返回值为假（&nbsp;&nbsp;）</p>
<p>下面请求服务器页面展示的内容是</p><p>const http = require(http);</p><p>const urlTool = require(url);</p><p>const fs = require(fs);</p><p>const server = http.createServer((request, response)=&gt;{</p><p>&nbsp;&nbsp;let pathname = urlTool.parse(request.url).pathname;</p><p>&nbsp;&nbsp;let root = __dirname + /public;</p><p>let filePath = root+pathname;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;fs.readFile(filePath, (err, data)=&gt;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if(err) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.end(404);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}else{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.end(‘html’);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>});</p><p>response(‘hello’)</p><p>});</p><p>server.listen(8000, ()=&gt;{</p><p>});</p>
<p>下面请求服务器页面展示的内容是</p><p>const http = require(http);</p><p>const urlTool = require(url);</p><p>const fs = require(fs);</p><p>const server = http.createServer((request, response)=&gt;{</p><p>&nbsp;&nbsp;let pathname = urlTool.parse(request.url).pathname;</p><p>&nbsp;&nbsp;let root = __dirname + /public;</p><p>let filePath = root+pathname;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;fs.readFile(filePath, (err, data)=&gt;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if(err) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.end(404);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}else{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.end(‘html’);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>});</p><p>response(‘hello’)</p><p>});</p><p>server.listen(8000, ()=&gt;{</p><p>});</p>
<p>下列哪种不方式不能创建Buffer</p>
<p>node环境下全局变量是</p>
<p>下列哪个是Node环境环境下暴露模块的方式</p>
<p>关于cookie和session说法错误的是</p>
<p>关于下列vue模板语法说明错误的是</p>
<p>关于computed属性介绍错误的是</p>
<p>关于watch属性说明有问题的是</p>
<p>关于watch属性说明有问题的是</p>
<p>关于vue中元素class类名和style内联样式说明错误的是</p>
<p>关于vue中元素class类名和style内联样式说明错误的是</p>
<p>下列vue事件绑定错误的是</p>
<p>下列关于事件修饰符说明错误的是</p>
<p>下列过渡和动画中说法错误的是</p>
<p>关于vue生命周期说明不正确的是</p>
<p>关于vue生命周期执行顺序正确的是</p>
<p>以下指令说明错误的是</p>
<p>以下代码的打印结果是</p><p>&lt;div id=”box1” ref=”box1” v-if=”false”&gt;&lt;/div&gt;</p><p>&lt;div id=”box2” ref=”box2” v-show=”false”&gt;&lt;/div&gt;</p><p>&nbsp;</p><p>mounted(){</p><p>console.log(this.$refs.box1,this.$refs.box2)</p><p>}</p>
<p>下面的描述中不正确的是（&nbsp;&nbsp;）</p>
<p>使用v-for列表渲染时,下面说明正确的是</p>
<p>关于vue指令说法错误的是</p>
<p class="ql-align-justify">下面代码的输出是什么?</p><p class="ql-align-justify">function sum(a, b) {</p><p class="ql-align-justify">&nbsp;return a + b;</p><p class="ql-align-justify">}</p><p class="ql-align-justify">sum(1, "2");</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p>关于props说法错误的是</p>
<p>关于自定义事件说明错误的是</p>
<p>可以实现跨组件通信的技术是</p>
<p>关于插槽slot说明错误的是</p>
<p>下列不属于vuex中属性的是</p>
<p>下列关于vuex说明错误的是</p>
<p>下列关于vuex说明错误的是</p>
<p><span style="color: rgb(79, 79, 79); background-color: rgb(238, 240, 244);">下列选项对这段代码解释正确的是（）</span></p><p><span style="color: rgb(79, 79, 79); background-color: rgb(238, 240, 244);">&lt;meta&nbsp;name="’viewport’"&nbsp;content="”width=device-width,"&nbsp;initial-scale="1."&nbsp;maximum-scale="1,user-scalable=no”"/&gt;</span></p>
<p>在组件中使用vuex错误的是</p>
<p>下面能成功修改state中obj对象为{age:5,name:’嗯哼’}的mutation方法是</p><p>state ={</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj:{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;age:18,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:’刘亦菲’</p><p>}</p><p>}</p>
<p>下列action函数中能修改state数据后,obj有值的是</p><p>请求回来的数据result为{name:’嗯哼’}</p><p>state = {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj:{}</p><p>}</p><p><br></p><p><br></p><p>mutations = {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save(state,data){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state.obj = data</p><p>}</p><p>}</p>
<p>下面不能进行路由跳转的是</p>
<p>以下获取动态路由{path:’/home/:user’}中user的值的是</p>
<p><span style="background-color: rgb(238, 240, 244); color: rgb(79, 79, 79);">下列选项对这段代码解释正确的是（）</span></p><p>&lt;meta name="’viewport’" content="”width=device-width," initial-scale="1." maximum-scale="1,user-scalable=no”"/&gt;</p>
<p><span style="color: rgb(79, 79, 79); background-color: rgb(238, 240, 244);">下列针对media类型说法正确的是（）</span></p>
<p>下列选项说法正确的是（）</p><p>background:-webkit-gradient(linear ,10% 10%，100% 100%，</p><p>color-stop(0.14,rgb(255,0,0)),</p><p>color-stop(0.5,rgb(255,255,0)),</p><p>color-stop(1,rgb(0,0,255))&nbsp;);</p>
<p>下列选项说法正确的是（）</p><p>background: radial-gradient(center, shape size, start-color, ..., last-color);</p>
<p>有以下JS代码：</p><p>&nbsp;&nbsp;var User = {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;count:1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;getCount:function(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.count;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;console.log(User.getCount());&nbsp;&nbsp;</p><p>&nbsp;&nbsp;var func = User.getCount;&nbsp;</p><p>&nbsp;&nbsp;console.log(func());</p><p>&nbsp;&nbsp;以上代码的打印结果分别是（&nbsp;&nbsp;&nbsp;&nbsp;）</p><p><br></p><p><br></p><p><br></p>
<p>有以下代码：</p><p>&nbsp;&nbsp;var x = 5;</p><p>&nbsp;&nbsp;(function () {&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(x);&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;var x = 10;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(x);&nbsp;</p><p>&nbsp;&nbsp;})();</p><p>&nbsp;&nbsp;上面的代码，输出的两个值是（&nbsp;&nbsp;）</p><p>&nbsp;&nbsp;</p>
<p><span style="color: rgb(87, 87, 87);">下列选项中对基本类型和复杂类型理解正确的是( )</span></p>
<p>下面代码的输出是什么?</p><p>var a = 3;</p><p>var b = new Number(3);</p><p>var c = 3;</p><p>console.log(a == b);</p><p>console.log(a === b);</p><p>console.log(b === c);</p>
<p>以下不属于JS基本数据类型的选项是&nbsp;()</p>
<p>以下节点类型所对应的nodeType正确的是（）？</p>
<p class="ql-align-justify">以下能正确获取到dom元素的选择器是（）？</p><p class="ql-align-justify">&amp;lt;div class=’box’ id=’box’&amp;gt;hello atguigu&amp;lt;/div&amp;gt;</p>
<p class="ql-align-justify">给目标元素原有基础上增加一个类名acitve，正确的是（）？</p><p class="ql-align-justify">&lt; div id=box &gt;hello atguigu&lt;/div &gt;</p><p class="ql-align-justify">var box = document.getElementById(box)</p>
<p class="ql-align-justify">以下说法正确的是（）？</p>
<p class="ql-align-justify">关于event对象，以下说法正确的是（）？</p>
<p class="ql-align-justify">关于鼠标事件对象event,以下说法正确的是（）?</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">事件传播的三个阶段是什么（）？</p>
<p class="ql-align-justify">阅读代码，以下说法正确的是（）?</p><p class="ql-align-justify">&lt;div class=’box’&gt;&lt;p&gt;你好&lt;/p&gt;&lt;/div&gt;</p><p class="ql-align-justify">&lt;script&gt;</p><p class="ql-align-justify">var box = document.querySelector(‘.box’)</p><p class="ql-align-justify">&lt;/script&gt;</p>
<p class="ql-align-justify">window.onload 事件，说法正确的是（）?</p>
<p class="ql-align-justify">&nbsp;window.onresize 事件，说法正确的是（）?</p>
<p class="ql-align-justify">以下节点类型所对应的nodeType正确的是（）？</p>
<p class="ql-align-justify">阻止冒泡，以下代码正确的是（）?</p>
<p class="ql-align-justify">阻止默认行为，以下代码正确的是（）?</p>
<p class="ql-align-justify">单击下面的html片段打印的内容是什么（）?</p><p class="ql-align-justify">&lt;div onclick="console.log(div)"&gt;</p><p class="ql-align-justify">&nbsp;&lt;p onclick="console.log(p)"&gt;</p><p class="ql-align-justify">&nbsp;Click here!&nbsp;</p><p class="ql-align-justify">&lt;/p&gt;</p><p class="ql-align-justify">&nbsp;&lt;/div&gt;</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">单击按钮button时，event.target是什么?</p><p class="ql-align-justify">&lt;div onclick="console.log(1)"&gt;</p><p class="ql-align-justify">&lt;div onclick="console.log(2)"&gt;</p><p class="ql-align-justify">&lt;button onclick="console.log(3)"&gt; Click! &lt;/button&gt;</p><p class="ql-align-justify">&nbsp;&nbsp;&lt;/div&gt;</p><p class="ql-align-justify">&lt;/div&gt;</p>
<p class="ql-align-justify">关于图片事件，以下说法正确的是（）?</p>
<p class="ql-align-justify"><span style="color: rgb(68, 68, 68);">querySelectorAll</span> 和<span style="color: rgb(68, 68, 68);">getElementsByTagName</span>的区别,以下说法正确的是（）?</p>
<p class="ql-align-justify">关于this在事件中的指向，以下说法正确的是（）?</p>
<p class="ql-align-justify">关于鼠标事件，正确的是（）?</p>
<p class="ql-align-justify">关于键盘事件，正确的是（）?</p>
<p class="ql-align-justify">关于表单事件，正确的是（）?</p>
<p class="ql-align-justify">以下哪种方法能正确的获取到视口宽度（）?</p>
<p class="ql-align-justify">setInterval方法的返回值是什么（）?</p>
<p>以下代码输出的是（）？</p><p class="ql-align-justify">for&nbsp;(var i = 0; i &lt; 5; i++) {</p><p class="ql-align-justify">&nbsp;setTimeout(function() {</p><p class="ql-align-justify">console.log(i);</p><p class="ql-align-justify">},0)</p><p class="ql-align-justify">}</p><p class="ql-align-justify"><br></p>
<p>以下代码输出的是（）？</p><p class="ql-align-justify">for&nbsp;(var&nbsp;i = 0; i &lt; 5; i++) {</p><p class="ql-align-justify">&nbsp;setTimeout(function() {</p><p class="ql-align-justify">console.log(i);</p><p class="ql-align-justify">},0)</p><p class="ql-align-justify">}</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于元素的尺寸位置，以下说法正确的是（）？</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于元素的尺寸位置，以下说法正确的是（）？</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于元素的尺寸位置，以下说法正确的是（）？</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于元素的尺寸位置，以下说法正确的是（）？</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于元素的位置，以下说法正确的是（）？</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">1.&nbsp;以下哪个方法可以判断浏览器的类型（）?</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">以下说法，正确的是（）?</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于正则表达式中的特殊字符，下面理解正确的是（）？</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于正则表达式中的特殊字符，下面理解正确的是（）?</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">以下代码输出正确的是（）?</p><p class="ql-align-justify">for&nbsp;(var&nbsp;i = 0; i &lt; 4; i++) {</p><p class="ql-align-justify">(function(){</p><p class="ql-align-justify">setTimeout(function() {</p><p class="ql-align-justify">console.log(i);</p><p class="ql-align-justify">}, 300);</p><p class="ql-align-justify">})(i)&nbsp;</p><p class="ql-align-justify">}</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">以下代码输出正确的是（）?</p><p class="ql-align-justify">for&nbsp;(var&nbsp;i = 0; i &lt; 4; i++) {</p><p class="ql-align-justify">(function(i){</p><p class="ql-align-justify">setTimeout(function() {</p><p class="ql-align-justify">console.log(i);</p><p class="ql-align-justify">}, 300);</p><p class="ql-align-justify">})(i)&nbsp;</p><p class="ql-align-justify">}</p>
<p class="ql-align-justify">以下代码输出正确的是（）?</p><p class="ql-align-justify">function&nbsp;f1(num){</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;f2(){</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(num);</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;f2;</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;}</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;fa&nbsp;=&nbsp;f1(10);</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;fb&nbsp;=&nbsp;f1(20);</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;fc&nbsp;=&nbsp;f1(30);</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;fa();</p><p class="ql-align-justify">&nbsp;&nbsp;&nbsp;&nbsp;fb();</p><p class="ql-align-justify">fc();&nbsp;&nbsp;</p>
<p class="ql-align-justify">阅读以下代码，输出true的是（）?</p><p class="ql-align-justify">function Person(){};</p><p class="ql-align-justify">var person = new Person;</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">阅读以下代码，输出true的是（）?</p><p class="ql-align-justify">function Person(){};</p><p class="ql-align-justify">var person = new Person;</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下面代码的输出是什么?</p><p class="ql-align-justify">function fn(){</p><p class="ql-align-justify">return (() =&gt; 0)()</p><p class="ql-align-justify">}</p><p class="ql-align-justify">console.log(typeof fn())</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下面代码的输出是什么?</p><p class="ql-align-justify">const shape = {</p><p class="ql-align-justify">&nbsp;radius: 10,</p><p class="ql-align-justify">&nbsp;diameter() {</p><p class="ql-align-justify">&nbsp;return this.radius * 2;</p><p class="ql-align-justify">&nbsp;},</p><p class="ql-align-justify">&nbsp;perimeter: () =&gt; 2 * Math.PI * this.radius</p><p class="ql-align-justify">};&nbsp;</p><p class="ql-align-justify">shape.diameter();</p><p class="ql-align-justify">shape.perimeter();</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">阅读以下代码，正确打印顺序结果为（）?</p><p>console.log(1)</p><p><br></p><p>setTimeout(function(){</p><p>&nbsp;&nbsp;console.log(2)</p><p>})</p><p><br></p><p>setTimeout(function(){</p><p>&nbsp;&nbsp;console.log(3)</p><p>}, 100)</p><p><br></p><p>&nbsp;setTimeout(function(){</p><p>&nbsp;&nbsp;console.log(4)</p><p>}, 0)</p><p><br></p><p class="ql-align-justify">&nbsp;console.log(5)</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">阅读以下代码，正确打印顺序结果为（）?</p><p>console.log(1)</p><p><br></p><p>setTimeout(function(){</p><p>&nbsp;&nbsp;console.log(2)</p><p>}, 300)</p><p><br></p><p>&nbsp;setTimeout(function(){</p><p>&nbsp;&nbsp;console.log(3)</p><p>}, 200)</p><p><br></p><p>&nbsp;setTimeout(function(){</p><p>&nbsp;&nbsp;console.log(4)</p><p>}, 100)</p><p><br></p><p>&nbsp;setTimeout(function(){</p><p>&nbsp;&nbsp;console.log(5)</p><p>}, 0)</p><p><br></p><p>&nbsp;setTimeout(function(){</p><p>&nbsp;&nbsp;console.log(6)</p><p>}, 100)</p><p><br></p><p class="ql-align-justify">&nbsp;console.log(7)</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于WebWorkers，以下说法正确的是（）?</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于WebWorkers，以下说法正确的是（）?</p><p class="ql-align-justify"><br></p>
<p><strong>下面程序的输出结果是? （）</strong></p><p>﻿Collection&lt;String&gt; coll = new ArrayList&lt;String&gt;();</p><p>coll.add("hello");</p><p>coll.add("world");</p><p>coll.add("java");</p><p>System.out.println(coll.remove("java"));</p>
<p><strong>一个类声明上出现泛型： ? super 类 ，下面哪个说法是正确的？（）</strong></p>
<p><strong>出现泛型： ? extends 类 ，下面哪个说法是正确的？（）</strong></p>
<p>下面那个jsx语法是正确的( )</p>
<p>ReactDOM.render()方法中的第一个参数是( )</p>
<p>下面input中value值为3的是哪个( )</p>
<p>react属于什么模式的框架( )</p>
<p>react-dom中的render方法作用描述错误的是( )?</p>
<p>react的作者是谁( )</p>
<p>在react中数据流动是什么规则( )</p>
<p>react中组件内部状态是( )</p>
<p>react无状态组件是指什么( )</p>
<p>props和state描述正确的是( )</p>
<p>对于react中的proptypes验证描述正确的是( )</p>
<p>如果一个列表没有行为，没有状态，应该使用那种组件定义的方式( )</p>
<p>react生命周期中,下面哪个生命周期是第一次获取到真实dom的?( )</p>
<p>可以监听props变化的生命周期是哪个( )</p>
<p>下面哪个方法能使组件调用自身的render()方法重新渲染组件( )</p>
<p>在react中,想要修改state需要使用以下哪个( )</p>
<p>关于componentDidMount说法不正确的是哪个( )</p>
<p>以下对虚拟dom描述正确的是( )</p>
<p>React中元素类型有( )</p>
<p>下面关于JSX编写错误的是( )</p>
<p>以下属于react定义组件方式的有( )</p>
<p>下面哪些生命周期是在整个组件渲染过程中执行一次的( )</p>
<p>对于shouldComponentUpdate描述正确的是( )</p>
<p>在state修改后哪个生命周期不会执行( )</p>
<p>想在一个组件内操作dom应该在哪个什么周期( )</p>
<p>下面关于jsx叙述正确的是( )</p>
<p>react中组件元素定义的规则是( )</p>
<p>事件对象event上的哪个属性可以返回触发当前事件的元素(事件的目标节点)( )</p>
<p>react中跨级通信最优的方案是( )</p>
<p>以下生命周期描述错误的是( )</p>
<p>在react中如何将input输入的值和state状态绑定到一起( )</p>
<p>在redux中监听state的数据的改变使用( )</p>
<p>改变store内state的惟一途径是( )</p>
<p>combineReducers的作用是( )</p>
<p>在组件更新期优化的话主要是优化哪个生命周期( )</p>
<p>react中子组件(类组件)中读取props的值应该使用什么属性( )</p>
<p>react中路由配置使用( )</p>
<p>展示组件(UI组件)描述错误的是( )</p>
<p>对于react中的proptypes验证描述正确的是( )</p>
<p>mapStateToProps描述错误的是( )</p>
<p>下面关于React描述正确的是( )</p>
<p>react存在期（更新阶段）包含哪些方法( )</p>
<p>react中获取dom有哪些方法( )</p>
<p>react可以使用下面哪些方法绑定this( )</p>
<p>下面内容哪些属于react生命周期函数( )</p>
<p>props验证需要注意的是( )</p>
<p>以下关于animation中step(10,end)介绍错误的是哪个( )</p>
<p>spark采用的kryo序列化可以进行默认序列化的类型是[多选题]</p>
<p>下列属于spark的持久化级别的是[多选题]</p>
<p>下列属于spark的本地化级别的是[多选题]</p>
<p>spark的内存管理机制将堆内存分为哪些部分？[多选题]</p>
<p>在jQuery中，$(this)和this的区别，正确说法的是? ()</p>
<p>以下哪种不属于jQuery的筛选（）？</p>
<p>下面对伪元素的描述哪些是正确的( )</p>
<p>下面对伪元素的描述哪些是正确的( )</p>
<p>下面对伪元素的描述哪些是正确的( )</p>
<p>下面对伪元素after的描述哪些是正确的( )</p>
<p>观察以下代码</p><p>public class MyThread extends Thread{&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;public void run(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("我爱java");</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>以下说法错误的是: (&nbsp;&nbsp;)</p>
<p>观察以下代码</p><p>public class MyThread extends Thread{</p><p>&nbsp;&nbsp;&nbsp;public void run(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int i = 0;i&nbsp;&lt;10; i++){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>public static void main(String[] args){</p><p>&nbsp;&nbsp;&nbsp;new MyThread().start();</p><p>&nbsp;&nbsp;&nbsp;new MyThread().start();</p><p>}</p><p>运行以上代码,会出现什么情况? (&nbsp;&nbsp;)</p>
<p>观察以下代码</p><p>class MyRunnale implements Runnable {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void run() {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("我爱java");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;}</p><p>public class Test{</p><p>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyRunnale r = new MyRunnale();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.start();</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>&nbsp;</p><p>&nbsp;运行以上程序,结果是:（）</p>
<p>对于sql 语句中 "select * from TableA, TableB " （TableA 有5条数据，TableB 有10条数据，两表无字段名相同的公共列）的执行结果会得到多少条数据？</p>
<p>下列关于maven生命周期描述正确的是[多选]？</p>
<p>下列关于Rowkey设计的原则的描述错误的是？</p>
<p>下列关于HBase二级索引的描述，哪些是正确的？</p>
<p>HBase性能优化包含下面的哪些选项？</p>
<p>HBase的主Master是如何选举的？</p>
<p>HFile数据格式中的KeyValue数据格式中Value部分存储形式是？</p>
<p>下面对HBase的描述错误的是？</p>
<p>react中针对于表单的处理有( )</p>
<p>react中针对于表单的处理有( )</p>
<p>redux中包含哪些内容( )</p>
<p>在redux中用dispatch方法属于谁的方法( )</p>
<p>以下什么选项为action执行函数必须要有的内容( )</p>
<p>在redux中combineReducers的作用是什么( )</p>
<p>在redux中dispatch方法的来源是( )</p>
<p>在react-redux中Provider组件需要传递什么内容才能将store和react组件联系起来( )</p>
<p>在redux中合并多个reducer使用以下哪个( )</p>
<p>改变 store 内 state 的惟一途径是( )</p>
<p>连接 React 组件与 Redux store需要使用什么函数( )</p>
<p>在react-router-dom中用来做重定向的组件是( )</p>
<p>在react中connect函数中第几个参数可以获取到state( )</p>
<p>redux中使用combineReducers做什么( )</p>
<p>redux应用的顶层组件是什么？接收一个什么作为props?( )</p>
<p>redux应用的顶层组件是什么？接收一个什么作为props?( )</p>
<p>对于ref属性描述正确的是( )</p>
<p>在react中实现子向父传参，以下说法正确的是( )</p>
<p>在redux中reducer的返回值必须是什么( )</p>
<p>下面哪些方法是属于store的方法( )</p>
<p>下面哪些组件是路由相关组件( )</p>
<p>redux的三大原则是哪些( )</p>
<p>以下属于reducer禁止操作的事情有哪些( )</p>
<p>react-redux提供下面哪些东西( )</p>
<p>createdStore方法创建的store是一个对象，它包含以下哪些方法( )</p>
<p><span style="color: rgb(96, 98, 102);">以下哪项可以实现元素旋转</span></p>
<p>关于vue底层实现原理说法错误的是</p>
<p>scala中集合可以分为三大类，以下描述中不是这三大类的是</p>
<p>如何编写当 i 等于 5 时执行一些语句的条件语句？</p>
<p>如何编写当 i 不等于 5 时执行一些语句的条件语句？</p>
<p>在JavaScript中，有多少种不同类型的循环？</p>
<p>for循环如何开始？</p>
<p>以下哪个值放在if中被隐式类型转换后不会变为false</p>
<p>以下程序运行结束正确的是：</p><p>var a = 3;</p><p>var b = 4;</p><p>var c = 5;</p><p>console.log(a&gt;b &amp;&amp; c&gt;b || a &lt; c)</p>
<p><span style="color: rgb(96, 98, 102);">props和state描述正确的是( )</span></p>
<p><span style="color: rgb(96, 98, 102);">如何在class组件形式中定义默认的props( )</span></p>
<p>下列关于promise说法，错误的是（）？</p>
<p>Promise构造函数是同步执行还是异步执行，那么 then 方法呢（）？</p>
<p>Promise构造函数是同步执行还是异步执行，那么 then 方法呢（）？</p>
<p>下列关于async/await，说法错误的是（）?</p>
<p>阅读以下代码，输出顺序正确的是（）?</p><p>console.log(1)</p><p>new&nbsp;Promise((resolve,&nbsp;reject)&nbsp;=&gt;&nbsp;{</p><p>&nbsp;&nbsp;console.log(2)</p><p>&nbsp;&nbsp;setTimeout(()&nbsp;=&gt;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(3)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;resolve(4)</p><p>&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;console.log(5)</p><p>}).then(value&nbsp;=&gt;&nbsp;{</p><p>&nbsp;&nbsp;console.log(value)</p><p>}).then(()&nbsp;=&gt;&nbsp;{</p><p>&nbsp;&nbsp;console.log(6)</p><p>})</p><p>setTimeout(()&nbsp;=&gt;&nbsp;{</p><p>&nbsp;&nbsp;console.log(7)</p><p>})</p>
<p>Hadoop的优势，下面描述正确的是？[多选题]</p>
<p>hadoop的namenode格式化时需要注意什么？[多选题]</p>
<p>Hadoop出现错误，第一时间如何找到错误日志，有哪几种查看日志的方法？[多选题]</p>
<p>hadoop种nn、2nn、edits和FsImage之间的关系和自身的作用，描述正确的是？【多选】</p>
<p>下列哪种方式能实现对数据的监视()</p>
<p>下列关于条件渲染错误的是()</p>
<p>下列子组件语法使用正确的是</p><p>&lt; Children&nbsp;@click=”handleClick”/&gt;</p>
<p>下列不属于route对象属性的是()</p>
<h4><strong>SpringMVC框架说法正确的是（ ）</strong></h4>
<p>在new Vue()传入的配置对象属性错误的是</p>
<p>下面不属于关键字let的特点的是：（ ）</p>
<p>关于关键字const，下列说法错误的是：（）</p>
<p>关于箭头函数的描述，错误的是：（）</p>
<p><span style="color: rgb(18, 18, 18);">在对象的解构赋值中，var {a,b,c} = { “c”:10, ”b”:9, ”a”:8 } 结果中，a、b、c的值分别是：（）</span></p>
<p><span style="color: rgb(18, 18, 18);">在类的继承中，关于super的说法错误的是：（）</span></p>
<p>关于Set结构，下面说法错误的是：（）</p>
<p>关于模板字符串，下列说法不正确的是：（）</p>
<p>关于模块化介绍说明错误的是</p>
<p>【多选题】关于Runnable接口和Callable接口，下列说法正确的是（）</p>
<p>【多选题】volatile的特性包含哪些（）</p>
<p>【多选题】什么情况下会产生StackOverflowError（栈溢出）</p>
<p>关于http请求说法错误的是</p>
<p>关于cookie和session说法错误的是</p>
<p>关于Ajax说明错误的是</p>
<p>XMLHttpRequest对象有几个返回状态值</p>
<p>AJAX中通过哪个API来获取来自服务器的响应</p>
<p>关于http状态码说法错误的是</p>
<p>关于缓存说明错误的是</p>
<p>关于Ajax跨域描述正确的是</p>
<p>下列哪种方式不能解决跨域</p>
<p>关于XMLHttpRequest对象说法错误的是</p>
<p>关于vue配置对象属性描述错误的是</p>
<h2><strong>执行以下代码,找出结果为false的选项( )</strong></h2><p><span style="color: rgb(51, 51, 51);">function Person(name,age){</span></p><p><span style="color: rgb(51, 51, 51);">this.name = name</span></p><p><span style="color: rgb(51, 51, 51);">this.age = age</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;}</span></p><p><span style="color: rgb(51, 51, 51);">let girl ={}</span></p><p><span style="color: rgb(51, 51, 51);">Person.call(girl,girl,18)</span></p><p><span style="color: rgb(51, 51, 51);">let Jerry&nbsp;=&nbsp;{}</span></p><p><span style="color: rgb(51, 51, 51);">Person.bind({},Jerry)</span></p><p><span style="color: rgb(51, 51, 51);">let Tom = {}</span></p><p><span style="color: rgb(51, 51, 51);">Person.apply(Tom,["Tom",15])</span></p><p><span style="color: rgb(51, 51, 51);">let boy = new Person(boy,16)</span></p>
<h2><strong>下面不属于关键字let的特点的是(  )</strong></h2><h2><br></h2>
<h2 class="ql-align-justify"><strong>在数组解构赋值中,var&nbsp;[a,b,c]&nbsp;=&nbsp;[1,2]结果中a、b、c的值分别为( )</strong></h2><h2><br></h2><h2><br></h2>
<h2 class="ql-align-justify"><strong>关于模板字符串，下列说法不正确的是( )</strong></h2><p class="ql-align-justify"><br></p><h2><br></h2>
<h2 class="ql-align-justify"><strong>关于箭头函数的描述,错误的是( )</strong></h2><p class="ql-align-justify"><br></p><h2><br></h2>
<h2 class="ql-align-justify"><strong>下面代码输出的结果是( )</strong></h2><p><span style="color: rgb(51, 51, 51);">for (let i = 0; i &lt; 3; i++) {</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;setTimeout(() =&gt; {</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;&nbsp;console.log(i)</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;})</span></p><p><span style="color: rgb(51, 51, 51);">}</span></p><p><span style="color: rgb(51, 51, 51);">for (var i = 0; i &lt; 3; i++) {&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;setTimeout(() =&gt; {</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;&nbsp;console.log(i)</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;})</span></p><p><span style="color: rgb(51, 51, 51);">}</span></p><p class="ql-align-justify"><br></p><h2><br></h2>
<h2 class="ql-align-justify"><strong>关于Symbol,错误的说法是(  )</strong></h2><h2><br></h2>
<h2 class="ql-align-justify"><strong>下面关于类class的描述,错误的是( )</strong></h2><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>class类的继承使用的关键字是( )</strong></h2><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>关于iterator遍历器的说法,错误的是( )</strong></h2><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>NodeJS&nbsp;中读取文件内容的API&nbsp;( )</strong></h2><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>NodeJS&nbsp;中写入文件内容的API ( )</strong></h2><h2 class="ql-align-justify"><br></h2><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>&nbsp;HTTP&nbsp;协议请求报文不包括哪个( )</strong></h2><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>通过编辑哪个文件来忽略文件变更( )</strong></h2><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>&nbsp;一次代码的成功提交到远程远程仓库,需要经历( )阶段</strong></h2><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>以下哪个命令用来创建分支( )</strong></h2><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>对于下列git命令,说法错误的是( )</strong></h2><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>NPM&nbsp;初始化包后会生成什么文件( )</strong></h2><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>下列安装npm包命令正确的是( )</strong></h2><p class="ql-align-justify"><br></p>
<h2 class="ql-align-justify"><strong>&nbsp;node环境下全局对象是( )</strong></h2><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下列哪个是Node环境下暴露模块的方式</p>
<p class="ql-align-justify">下列哪种方式不能创建Buffer</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下列关于fs文件系统说明错误的是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于http请求说法错误的是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">node环境下全局对象是</p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于Iterator遍历器的说法，错误的是：（）</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于cookie和session说法错误的是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">哪一项不是node-js中自带的模块</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">在Node环境下需要加载http模块,需要</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">通过http模块创建一个服务器调用哪个方法</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于Ajax说明错误的是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">XMLHttpRequest对象有几个返回状态值</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">AJAX中通过哪个API来获取来自服务器的响应</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于http状态码说法错误的是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下列fs对文件夹的操作说明错误的是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">以下哪个不是HTTP请求报文组成</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于Ajax跨域描述正确的是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于session描述正确的是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">关于cookie，描述正确的是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">解决跨域的方式有哪些？</p><p class="ql-align-justify"><br></p>
<p>XMLHttpRequest对象的readyState属性用来描述当前对象的状态.其中__________表示UNSENT(未发送),对象被创建,但尚未调用open()方法;_______________表示HEADERS_ RECEIVED(接收到请求头)，send()方法已经被调用，并且头部和状态已经可获得;_____表示 LOADING(正在下载响应体)，下载中，responseText属性已经包含部分数据;____表示 OPENED(初始化与服务端连接)，open()方法已经被调用;__表示DONE(下载响应体完成)，下载操作已完成.</p><p class="ql-align-justify"><br></p>
<p><span style="color: rgb(96, 98, 102);">以下代码中，会出现什么结果：第一次弹（&nbsp;&nbsp;&nbsp;），第二次弹（&nbsp;&nbsp;&nbsp;），第三次弹（&nbsp;&nbsp;&nbsp;）</span></p><p><span style="color: rgb(96, 98, 102);">﻿function fn1() {</span></p><p><span style="color: rgb(96, 98, 102);"> var a = 0;</span></p><p><span style="color: rgb(96, 98, 102);"> function fn2() {&nbsp;++a;&nbsp;alert(a); }</span></p><p><span style="color: rgb(96, 98, 102);"> return fn2;</span></p><p><span style="color: rgb(96, 98, 102);"> }</span></p><p><span style="color: rgb(96, 98, 102);"> fn1()();</span></p><p><span style="color: rgb(96, 98, 102);"> var newFn = fn1();</span></p><p><span style="color: rgb(96, 98, 102);"> newFn();</span></p><p><span style="color: rgb(96, 98, 102);"> newFn();</span></p>
<p><span style="color: rgb(96, 98, 102);">以下代码运行后，arr的结果为（&nbsp;&nbsp;），arr2的结果为（&nbsp;&nbsp;）</span></p><p><span style="color: rgb(96, 98, 102);"> var arr = [1,2];</span></p><p><span style="color: rgb(96, 98, 102);"> var arr2 = arr.concat();</span></p><p><span style="color: rgb(96, 98, 102);"> arr2.push( arr.splice(1,0) );</span></p>
<p><span style="color: rgb(96, 98, 102);">阅读以下代码，在页面中结果是( )</span></p><p><span style="color: rgb(96, 98, 102);">var&nbsp;s="abcdefg";</span></p><p><span style="color: rgb(96, 98, 102);">alert(s.slice(1,2));</span></p>
<p>使用ajax可带来的便捷有()</p>
<p><strong style="color: rgb(75, 75, 75);">构成Ajax的技术有</strong></p>
<p>下面哪些是Ajax用到的基本技术()</p>
<p>构成Ajax技术有()</p>
<p><span style="color: rgb(51, 51, 51);">&nbsp;以下哪个技术不是Ajax技术体系的组成部分？()</span></p>
<p>ajax的交互流程有哪几步()</p>
<p><span style="color: rgb(96, 98, 102);">阅读以下代码，输出true的是（）?</span></p><p><span style="color: rgb(96, 98, 102);">function Person(){};</span></p><p><span style="color: rgb(96, 98, 102);">var person = new Person;</span></p>
<p><span style="color: rgb(96, 98, 102);">以下代码，输出true的是（）?</span></p>
<p><span style="color: rgb(96, 98, 102);">以下代码中，会出现什么结果：第一次弹（&nbsp;&nbsp;&nbsp;），第二次弹（&nbsp;&nbsp;&nbsp;），第三次弹（&nbsp;&nbsp;&nbsp;）</span></p><p><span style="color: rgb(96, 98, 102);"> function fn1() {</span></p><p><span style="color: rgb(96, 98, 102);"> var a = 0;</span></p><p><span style="color: rgb(96, 98, 102);"> function fn2() {&nbsp;++a;&nbsp;alert(a); }</span></p><p><span style="color: rgb(96, 98, 102);"> return fn2;</span></p><p><span style="color: rgb(96, 98, 102);"> }</span></p><p><span style="color: rgb(96, 98, 102);"> fn1()();</span></p><p><span style="color: rgb(96, 98, 102);"> var newFn = fn1();</span></p><p><span style="color: rgb(96, 98, 102);"> newFn();</span></p><p><span style="color: rgb(96, 98, 102);"> newFn();</span></p>
<p><span style="color: rgb(96, 98, 102);">下列表述不正确的选项是（&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;）</span></p>
<p class="ql-align-justify"><span style="color: rgb(96, 98, 102);">下面哪个不属于面向对象的特点</span></p>
<p class="ql-align-justify"><span style="color: rgb(96, 98, 102);">下面哪个不属于面向对象的特点</span></p>
<p class="ql-align-justify"><span style="color: rgb(96, 98, 102);">阅读以下代码，输出true的是（）</span></p><p class="ql-align-justify"><span style="color: rgb(96, 98, 102);">function Person(){};</span></p><p class="ql-align-justify"><span style="color: rgb(96, 98, 102);">var person = new Person;</span></p>
<p><span style="color: rgb(96, 98, 102);">阅读以下代码，输出true的是（）?</span></p><p><span style="color: rgb(96, 98, 102);">function Person(){};</span></p><p class="ql-align-justify"><span style="color: rgb(96, 98, 102);">var person = new Person;</span></p>
<p><span style="color: rgb(96, 98, 102);">以下代码输出正确的是（）?</span></p><p><span style="color: rgb(96, 98, 102);">for&nbsp;(var&nbsp;i = 0; i &lt; 4; i++) {&nbsp;</span></p><p><span style="color: rgb(96, 98, 102);">(function(){</span></p><p><span style="color: rgb(96, 98, 102);">setTimeout(function() {&nbsp;</span></p><p><span style="color: rgb(96, 98, 102);">console.log(i);&nbsp;</span></p><p><span style="color: rgb(96, 98, 102);">}, 300);</span></p><p><span style="color: rgb(96, 98, 102);">})(i)&nbsp;</span></p><p class="ql-align-justify"><span style="color: rgb(96, 98, 102);">}</span></p>
<p class="ql-align-justify">以下说法正确的是</p>
<p class="ql-align-justify">以下说法正确的是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">下列选项中不能获取DOM元素的方法是</p><p class="ql-align-justify"><br></p>
<p class="ql-align-justify">以下说法正确的是</p>
<p class="ql-align-justify"><span style="color: rgb(87, 87, 87);">DOM中为元素绑定事件描述错误的是</span></p>
<p class="ql-align-justify"><span style="color: rgb(87, 87, 87);">下列哪些选项属于DOM对象</span></p><p class="ql-align-justify"><br></p>
<p>下列代码运行结果</p><p>class Db {</p><p>int i=20;</p><p>int j=30;</p><p>void f() {</p><p>System. out . print("" + i);</p><p>}</p><p>}</p><p><br></p><p>public class DbTest2 extends Db {</p><p>int i=30;</p><p>int k=40;</p><p>void f() {</p><p>System. out.print("" + i);</p><p>}</p><p>void g() {</p><p>System. out.print("" + k);</p><p>}</p><p><br></p><p>public static void main(String[] args) {</p><p>Db d = new DbTest2();</p><p>System. out . print1n(d.i);</p><p>d.f();</p><p>DbTest2 d2 = (DbTest2) d;</p><p>System. out. println(d2.i);</p><p>d2.f();</p><p>}</p><p>}</p>
<p>&nbsp;function Fn() {</p><p>&nbsp;&nbsp;&nbsp;this.x = 100;</p><p>&nbsp;&nbsp;&nbsp;this.y = 200;</p><p>&nbsp;&nbsp;&nbsp;this.getX = function () {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(this.x);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;Fn.prototype.getX = function () {</p><p>&nbsp;&nbsp;&nbsp;console.log(this.x);</p><p>&nbsp;&nbsp;};</p><p><br></p><p>&nbsp;&nbsp;Fn.prototype.getY = function () {</p><p>&nbsp;&nbsp;&nbsp;console.log(this.y);</p><p>&nbsp;&nbsp;};</p><p><br></p><p>&nbsp;&nbsp;var f1 = new Fn;</p><p>&nbsp;&nbsp;var f2 = new Fn;</p><p><br></p><p>&nbsp;&nbsp;console.log(f1.getX === f2.getX);</p><p>&nbsp;&nbsp;console.log(f1.getY === f2.getY);</p>
<p>function fun(){</p><p>&nbsp;&nbsp;this.a=0;</p><p>&nbsp;&nbsp;this.b=function(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;alert(this.a);</p><p>&nbsp;&nbsp;};</p><p>&nbsp;&nbsp;this.c=function(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;alert(this.a)</p><p>&nbsp;&nbsp;}</p><p>}</p><p>fun.prototype={</p><p>&nbsp;&nbsp;b:function(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;this.a=20;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;alert(this.a);</p><p>&nbsp;&nbsp;},</p><p>&nbsp;&nbsp;c:function(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;this.a=30;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;alert(this.a)</p><p>&nbsp;&nbsp;}</p><p>}</p><p>var my_fun=new fun();</p><p><br></p><p>my_fun.b();&nbsp;&nbsp;</p><p>my_fun.c();&nbsp;</p>
<p>BOM相关对象不包括：</p>
<p>关于location相关的属性，哪个是正确的:</p>
<p>阅读下面代码</p><p>var s = new Date().getSeconds();</p><p><br></p><p>setTimeout(function() {</p><p>console.log(进入定时器);</p><p>}, 500);</p><p><br></p><p>while(true) {</p><p>if(new Date().getSeconds() - s &gt;= 2) {</p><p>console.log("我进来了");</p><p>break;</p><p>}</p><p>}</p>
<p>// 1</p><p>console.log(a); // ?</p><p>var a;</p><p>function a() {}</p><p><br></p><p>// 2</p><p>function b() {}</p><p>var b;</p><p>console.log(b); // ?</p><p><br></p><p>// 3</p><p>var c = 1;</p><p>function c() {}</p><p>console.log(c); // ?</p>
<p>var b = 1;</p><p>function fn1() {</p><p>&nbsp;console.log(b); // ?</p><p>}</p><p>b=3;</p><p>function fn2() {</p><p>&nbsp;var b = 2;</p><p>&nbsp;fn1();</p><p>}</p><p><br></p><p>fn2();</p>
<p>下面关于typeof的表述中，错误的是</p>
<p>下面这段代码，控制台会打印什么</p><p>var age = 35;</p><p><br></p><p>if (age &gt;= 20 &amp;&amp; age &lt;= 29) {</p><p>&nbsp;&nbsp;console.log(期货);</p><p>} else if (age &gt;= 30 &amp;&amp; age &lt;= 39) {</p><p>&nbsp;&nbsp;console.log(抢手货);</p><p>}else if (age &gt;= 40 &amp;&amp; age &lt;= 49) {</p><p>&nbsp;&nbsp;console.log(现货);</p><p>}else {</p><p>&nbsp;&nbsp;console.log(不在讨论范围内!);</p><p>}</p>
<p><span style="color: rgb(51, 51, 51);">下面关于函数的说法错误的是</span></p>
<p><span style="color: rgb(51, 51, 51);">下面代码的打印值，哪个是正确的？</span></p><p>var a = 1;</p><p>var b;</p><p><br></p><p>if (true) {</p><p>&nbsp;&nbsp;a = 2;</p><p>} else {</p><p>&nbsp;&nbsp;b = 3;</p><p>}</p><p><br></p><p>console.log(a);</p><p>console.log(b);</p>
<p class="ql-align-justify">以下说法正确的是</p>
<p class="ql-align-justify">关于鼠标事件对象event,以下说法正确的</p>
<p>下面代码的输出顺序是()?</p><p>Promise.resolve().then(() =&gt; {</p><p>&nbsp;&nbsp;&nbsp;console.log(1)</p><p>&nbsp;&nbsp;&nbsp;setTimeout(() =&gt; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(2)</p><p>&nbsp;&nbsp;&nbsp;}, 0);</p><p>&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;setTimeout(() =&gt; {</p><p>&nbsp;&nbsp;&nbsp;console.log(3);</p><p>&nbsp;&nbsp;&nbsp;Promise.resolve().then(() =&gt; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(4)</p><p>&nbsp;&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;}, 0);</p>
<p>下面代码的输出顺序（）?</p><p>console.log(1);</p><p>&nbsp;&nbsp;async function async() {</p><p>&nbsp;&nbsp;&nbsp;console.log(2);</p><p>&nbsp;&nbsp;&nbsp;await console.log(3);</p><p>&nbsp;&nbsp;&nbsp;console.log(4)</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;setTimeout(() =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;console.log(5);</p><p>&nbsp;&nbsp;}, 0);</p><p>&nbsp;&nbsp;const promise = new Promise((resolve, reject) =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;console.log(6);</p><p>&nbsp;&nbsp;&nbsp;resolve(7)</p><p>&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;promise.then(res =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;console.log(res)</p><p>&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;async();</p><p>&nbsp;&nbsp;console.log(8);</p>
<p>下面代码的输出顺序（）?</p><p>new Promise((resolve, reject) =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;resolve(1);</p><p>&nbsp;&nbsp;&nbsp;reject(2);</p><p>&nbsp;&nbsp;&nbsp;resolve(3);</p><p>&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;&nbsp;.then((res) =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(res);</p><p>&nbsp;&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;&nbsp;.catch((err) =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(err);</p><p>&nbsp;&nbsp;&nbsp;});</p>
<p>下面代码的输出顺序（）?</p><p>Promise.resolve()</p><p>&nbsp;&nbsp;&nbsp;.then(() =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return new Error(1)</p><p>&nbsp;&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;&nbsp;.then((res) =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(111)</p><p>&nbsp;&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;&nbsp;.catch((err) =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(222)</p><p>&nbsp;&nbsp;&nbsp;})</p>
<p>下面代码的输出顺序（）?</p><p>console.log(1)</p><p>&nbsp;&nbsp;new Promise((resolve, reject) =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;console.log(2)</p><p>&nbsp;&nbsp;&nbsp;setTimeout(() =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(3)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;resolve(4)</p><p>&nbsp;&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;&nbsp;console.log(5)</p><p>&nbsp;&nbsp;}).then(value =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;console.log(value)</p><p>&nbsp;&nbsp;}).then(() =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;console.log(6)</p><p>&nbsp;&nbsp;})</p><p>&nbsp;&nbsp;setTimeout(() =&amp;gt; {</p><p>&nbsp;&nbsp;&nbsp;console.log(7)</p><p>&nbsp;&nbsp;})</p>
<p><strong>以下关于Object类,说法错误的是? （）</strong></p>
<p><strong>下面对于toString()方法和equals()方法描述正确的是? （）</strong></p>
<p><strong>观察下列代码.日期格式化为字符串是(时间忽略)?</strong></p><p>﻿public class SimpleDateFormatDemo {</p><p>&nbsp;&nbsp;&nbsp;public static void main(String[] args) throws ParseException {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SimpleDateFormat sdf = new SimpleDateFormat("yyyy年MM月dd日 HH:mm:ss");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date date = new Date();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String s = sdf.format(date);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p>
<p><strong>想得到"2018-04-11 22时12分10秒"(时间忽略),模式正确的是?：</strong></p><p><strong>public class SimpleDateFormatDemo {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;public static void main(String[] args) throws ParseException {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//此处代码应填写</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date date = new Date();</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String s = sdf.format(date);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>}</strong></p>
<p><strong>阅读代码,横线位置应填写的内容是? （）</strong></p><p><strong>public class SimpleDateFormatTest {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;public static void main(String[] args) throws ParseException {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String str = "1998-01-01";</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SimpleDateFormat sdf = new SimpleDateFormat(_____);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date date = sdf.parse(str);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(date);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>}</strong></p>
<p><strong>读代码,控制台输出的结果为? （）</strong></p><p><strong>public class IntegerDemo {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String str = "123";</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(str + 10);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i = Integer.parseInt(str);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(i + 10);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>}</strong></p>
<p><strong>阅读代码,控制台输出的结果为? （）</strong></p><p><strong>public class IntegerDemo {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String str = "1a3";</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer it = new Integer(str);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i = it.intValue();</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(i);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>}</strong></p>
<p><strong>阅读代码,控制台输出的结果为? （）</strong></p><p><strong>public class IntegerDemo {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String str = "1a3";</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer it = new Integer(str);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i = it.intValue();</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(i);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>}</strong></p>
<p><strong>阅读代码,控制台要打印110横线需要填写什么? （）</strong></p><p><strong>public class IntegerDemo {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i = 1;</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer it = new Integer(i);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String s = ___;</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s + 10);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>}</strong></p>
<p><strong>阅读代码,控制台打印的结果为? （）</strong></p><p><strong>public class IntegerDemo {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i = 10;</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String str = i + "";</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(str.equals("10"));</strong></p><p><strong>&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>}</strong></p>
<p><strong>下面哪个功能不是Collection集合的? （）</strong></p>
<p><strong>下面程序的输出结果是? （）</strong></p><p><strong>Collection&lt;String&gt; coll = new ArrayList&lt;String&gt;();</strong></p><p><strong>coll.add("hello");</strong></p><p><strong>coll.add("world");</strong></p><p><strong>coll.add("java");</strong></p><p><strong>System.out.println(coll.remove("java"));</strong></p>
<p><strong>观察下列代码</strong></p><p><strong>public class cs {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Collection&lt;String&gt; coll = new ArrayList&lt;String&gt;();</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;coll.add("天安门");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;coll.add("兵马俑");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Iterator&lt;String&gt; it = coll.iterator();</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(it.next());</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(it.next());</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(it.next());</strong></p><p><strong>&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>}</strong></p><p><strong>请问，下面哪种说法是正确的?&nbsp;&nbsp;&nbsp;&nbsp;（）</strong></p>
<p><strong>观察下列代码</strong></p><p><strong>public static void main(String[] args) {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Collection&lt;String&gt; coll = new ArrayList&lt;String&gt;();</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;coll.add("水立方");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;coll.add("东方明珠");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;coll.add("大雁塔");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (String s : coll) { </strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(s+", ");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>}</strong></p><p>﻿最终结果是? （）</p>
<p><strong>&nbsp;下面代码的输出结果是? （）</strong></p><p><strong>public static void main(String[] args) {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Collection&lt;String&gt; arr=new ArrayList&lt;String&gt;();</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.add("张无忌");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.add("张翠山");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.add("赵敏");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.add("杨不悔");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (String str : arr) {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(str.equals("张翠山")){</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.remove(str);</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (String name : arr) {</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(name+" ");</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</strong></p><p><strong>&nbsp;&nbsp;&nbsp;}</strong></p>
<p><strong>观察下列代码</strong></p><p>Collection&lt;String&gt; coll = new ArrayList&lt;&gt;();</p><p>coll.add("s");</p><p>coll.add("ddd");</p><p>coll.add("true");</p><p>System.out.println(coll);</p><p>&nbsp;</p><p>运行结果是? （）</p>
<p><strong>&nbsp;下面代码运行的结果是？（）</strong></p><p><strong>Collection&lt;String&gt; arr=new ArrayList&lt;String&gt;();</strong></p><p><strong>arr.add("1");</strong></p><p><strong>arr.add("java");</strong></p><p><strong>arr.add(1);</strong></p><p><strong>arr.add(true);</strong></p><p><strong>System.out.println(arr);</strong></p>
<p><strong>出现泛型：&lt;? extends 类 &gt;，下面哪个说法是正确的？（）</strong></p>
<p><strong>一个类声明上出现泛型：&lt;? super 类 &gt;，下面哪个说法是正确的？（）</strong></p>
<p>下列属于List集合的特点是？（）</p>
<p>下面代码运行结果是？ （）</p><p>List&lt;String&gt; arr=new ArrayList&lt;String&gt;();</p><p>arr.add("java");</p><p>arr.add("world");</p><p>arr.add("hello");</p><p>arr.add("java");</p><p>arr.remove("java");</p><p>System.out.println(arr.contains("java"));</p>
<p>下列不属于数组结构的特点是？ （）</p>
<p>下列属于数组结构在内存中的特点是? （）</p>
<p>下列有关栈结构的特点说法正确的是？ （）</p>
<p>下面关于队列结构描述正确的是？ （ ）</p>
<p>下列有关单向链表说法不正确的是？ （）</p>
<p>关于单向链表描述正确的是？（）</p>
<p>下面代码运行结果是？（）</p><p>HashSet&lt;String&gt;&nbsp;set = new HashSet&lt;String&gt;();</p><p>set.add("cba");</p><p>set.add("abc");</p><p>set.add("bac");</p><p>set.add("cba");&nbsp;</p><p>for (int i = 0; i &lt; set.size(); i++) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(set.get(i));</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p>
<p>&nbsp;下列有关哈希表说法正确的是？ （）</p>
<p>下面关于哈希表特点描述错误的是？（）</p>
<p>观察下列代码</p><p>HashSet&lt;Student&gt; hs = new HashSet&lt;Student&gt;();</p><p>Student s1 = new Student("张三", 18);</p><p>Student s2 = new Student("李四", 18);</p><p>Student s3 = new Student("张三", 20);</p><p>Student s4 = new Student("李四", 18);</p><p>hs.add(s1);</p><p>hs.add(s2);</p><p>hs.add(s3);</p><p>hs.add(s4);</p><p>for (Student s : hs) {</p><p>&nbsp;&nbsp;&nbsp;System.out.println(s.getName() + "---" + s.getAge());</p><p>}</p><p>Student类中自动生成了hashCode()和equals()方法，输出结果是？ （）</p>
<p>HashSet&lt;User&gt;&nbsp;set = new HashSet&lt;User&gt;();</p><p>set.add(new User("杰克", 18));</p><p>set.add(new User("肉丝", 17));</p><p>set.add(new User("杰克", 19));</p><p>set.add(new User("肉丝", 16));</p><p>int sum=0;</p><p>for (User u : set) {</p><p>&nbsp;&nbsp;&nbsp;sum+=u.getAge();</p><p>}</p><p>System.out.println(sum/set.size());</p><p>```</p><p>User类中自动生成了hashCode()和equals()方法，输出结果是？（）</p>
<p>观察下列代码</p><p>ArrayList&lt;Student&gt; arr = new ArrayList&lt;Student&gt;();</p><p>Student s1 = new Student("张三", 16);</p><p>Student s2 = new Student("李四", 13);</p><p>Student s3 = new Student("王五", 29);</p><p>arr.add(s1);</p><p>arr.add(s2);</p><p>arr.add(s3);</p><p>MyComparator my = new MyComparator();</p><p>Collections.sort(arr, my);</p><p>for (Student s : arr) {</p><p>&nbsp;&nbsp;&nbsp;System.out.println(s.getName());</p><p>}</p><p>和</p><p>public class MyComparator implements Comparator&lt;Student&gt; {</p><p>&nbsp;&nbsp;&nbsp;@Override</p><p>&nbsp;&nbsp;&nbsp;public int compare(Student s1, Student s2) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return s2.getAge() - s1.getAge();</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>标准Student类也给出，请问第一个代码的输出结果是？ （）</p>
<p><strong>下面关于Map集合说法错误的是? （）</strong></p>
<p><strong>下面关于Map集合说法正确的是? （）</strong></p>
<p><strong>观察下列代码</strong></p><p>﻿HashMap&lt;String, String&gt; map = new HashMap&lt;&gt;();</p><p>map.put("小米", "红色");</p><p>map.put("小米", "蓝色");</p><p>System.out.println(map);</p><p>&nbsp;</p><p>请问，输出的结果是?&nbsp;（）</p>
<p><strong>观察下列代码</strong></p><p>HashMap&lt;String, String&gt; map = new HashMap&lt;&gt;();</p><p>map.put("小米", "红色");</p><p>map.put("小米", "蓝色");</p><p>System.out.println(map);</p><p>&nbsp;</p><p>请问，输出的结果是?&nbsp;（）</p>
<p><strong>观察下列代码</strong></p><p><strong>HashMap&lt;String, Integer&gt; map = new HashMap&lt;&gt;();</strong></p><p><strong>map.put("张三", 18);</strong></p><p><strong>map.put("李四", 20);</strong></p><p><strong>map.put("张三", 20);</strong></p><p><strong>System.out.println(map.get("张三"));</strong></p><p><strong>请问，输出的结果是?&nbsp;（）</strong></p>
<p><strong>&nbsp;对Map集合遍历可以根据键找值的方法说法正确的是?（）</strong></p>
<p><strong>观察下列代码</strong></p><p>HashMap&lt;String, Integer&gt; map = new HashMap&lt;&gt;();</p><p>map.put(null, 0);</p><p>Set&lt;String&gt; keySet = map.keySet();</p><p>for (String key : keySet) {</p><p>&nbsp;&nbsp;&nbsp;System.out.println(key+":"+map.get(key));</p><p>}</p><p>请问，输出的结果是? （）</p>
<p><strong>关于使用根据键值对找键和值对Map集合遍历的方式说法错误的是? （）</strong></p>
<p><strong>下列关于HashMap存储自定义类型键值对数据说法错误的是? (&nbsp;)</strong></p>
<p><strong>观察下列代码</strong></p><p><strong>HashMap&lt;Phone, String&gt; map = new HashMap&lt;&gt;();</strong></p><p><strong>map.put(new Phone("锤子",1799),"top1" );</strong></p><p><strong>map.put(new Phone("小米",1999),"top2");</strong></p><p><strong>map.put(new Phone("小米",1999),"top3");</strong></p><p><strong>下面描述错误的是? (&nbsp;)</strong></p>
<p>&nbsp;观察以下代码</p><p>try{</p><p>&nbsp;&nbsp;&nbsp;String s = "hello";</p><p>&nbsp;&nbsp;&nbsp;String sub = s.substring(0);</p><p>&nbsp;&nbsp;&nbsp;System.out.println(sub);</p><p>&nbsp;&nbsp;&nbsp;s = null;</p><p>}catch(NullPointerException e){</p><p>&nbsp;&nbsp;&nbsp;System.out.println("空指针异常");</p><p>}</p><p>以上程序的运行结果是:&nbsp;&nbsp;(&nbsp;)</p>
<p>观察以下代码</p><p>try{</p><p>&nbsp;&nbsp;&nbsp;int[] arr = new int[10];</p><p>&nbsp;&nbsp;&nbsp;System.out.println(arr[10]);</p><p>&nbsp;&nbsp;&nbsp;arr = null;</p><p>&nbsp;&nbsp;&nbsp;System.out.println(arr[0]);</p><p>}catch(ArrayIndexOutOfBoundsException e2){</p><p>&nbsp;&nbsp;&nbsp;System.out.println("数组角标越界");</p><p>}catch(NullPointerException e){</p><p>&nbsp;&nbsp;&nbsp;System.out.println("空指针异常");</p><p>}</p><p>以上代码运行,控制台会输出什么? (&nbsp;)</p>
<p>观察以下代码</p><p>public static void main(String[] args){</p><p>&nbsp;&nbsp;&nbsp;int[] arr = null;</p><p>&nbsp;&nbsp;&nbsp;printArr(arr);</p><p>}</p><p>public static void printArr(int[] arr) throws NullPointerException{</p><p>&nbsp;&nbsp;&nbsp;for (int i = 0; i &lt; arr.length; i++) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(arr[i]);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>运行以上程序,结果是:(&nbsp;&nbsp;)</p>
<p>public static void main(String[] args) throw ParseException {</p><p>&nbsp;&nbsp;&nbsp;SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");</p><p>&nbsp;&nbsp;&nbsp;String s1 = "1989-12-11";</p><p>&nbsp;&nbsp;&nbsp;Date date = format.parse(s1);</p><p>}</p><p>&nbsp;</p><p>以下说法正确的是: (&nbsp;&nbsp;)</p>
<p>以下关于自定义异常类错误的是: (&nbsp;&nbsp;)</p>
<p>观察以下代码</p><p>public class MyException extends Exception{</p><p>&nbsp;&nbsp;&nbsp;public MyException(){</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;public MyException(String message){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(message);&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>&nbsp;</p><p>以下描述正确的是:(&nbsp;&nbsp;)</p>
<p>观察以下代码</p><p>public class WeightOutOfBoundsException extends Exception{</p><p>&nbsp;&nbsp;&nbsp;public WeightOutOfBoundsException(){</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;public WeightOutOfBoundsException(String message){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(message);&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>public class Person{</p><p>&nbsp;&nbsp;&nbsp;private int weight;</p><p>&nbsp;&nbsp;&nbsp;public Person(int weight)throws WeightOutOfBoundsException{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(weight &lt; 0 || weight &gt; 300){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new WeightOutOfBoundsException("体重不符合要求");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.weight = weight;</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>&nbsp;</p><p>观察以上代码,如果创建Person对象,下列哪种处理是正确的:(&nbsp;&nbsp;)</p>
<p>以下关于并行和并发说法错误的是:(&nbsp;&nbsp;)</p>
<p>以下关于并行和并发说法错误的是:(&nbsp;&nbsp;)</p>
<p>以下哪种现象是在描述并发的: (&nbsp;&nbsp;)</p>
<p>观察以下代码</p><p>&nbsp;&nbsp;&nbsp;public static void main(String[] args){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread t = new Thread(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void run(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("我爱java")；</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;___________________________;</p><p>&nbsp;&nbsp;&nbsp;}</p><p>请在横线处填入适当代码,使线程开启并运行:(&nbsp;&nbsp;)</p>
<p>下面关于如何开启线程说法错误的是: (&nbsp;&nbsp;)</p>
<p>观察以下代码</p><p>public class MyThread extends Thread{&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;public void run(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("我爱java");</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>以下说法错误的是: (&nbsp;&nbsp;)</p>
<p>观察以下代码</p><p>public class MyThread extends Thread{</p><p>&nbsp;&nbsp;&nbsp;public void run(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int i = 0;i&nbsp;&lt;10; i++){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>public static void main(String[] args){</p><p>&nbsp;&nbsp;&nbsp;new MyThread().start();</p><p>&nbsp;&nbsp;&nbsp;new MyThread().start();</p><p>}</p><p>运行以上代码,会出现什么情况? (&nbsp;&nbsp;)</p>
<p>观察以下代码</p><p>class MyRunnale implements Runnable {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void run() {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("我爱java");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;}</p><p>public class Test{</p><p>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyRunnale r = new MyRunnale();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.start();</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>&nbsp;</p><p>&nbsp;运行以上程序,结果是:（）</p>
<p>&nbsp;关于同步代码块说法错误的是:（）</p>
<p>执行如下代码控制台输出的是(&nbsp;)</p><p>package day11;</p><p>public class Student{</p><p>private String name;</p><p>public Student(String name){</p><p>this.name = name;</p><p>}</p><p>public static void main(String[] args){</p><p>Student yqw = new Student("yqw");</p><p>Class&lt;? extends Student&gt; sclass = yqw.getClass();</p><p>System.out.println(sclass.getName());</p><p>}</p><p>}</p>
<p>下面获取String类的字节码对象正确的是（）</p>
<p>下面获取String类的字节码对象正确的是（）</p>
<p>下面说法正确的是（）</p>
<p>关于&nbsp;Method的 Object invoke​(Object obj, Object... args)方法说法正确的是（）</p>
<p>关于自定义注解的说法正确的是（）</p>
<p>关于自定义注解的说法正确的是()</p>
<p>下面说法正确的是(多选)()</p>
<p>关系型数据库的核心是(&nbsp;&nbsp;)</p>
<p>请判断以下哪条语句创建数据库是正确的语法（&nbsp;）</p>
<p>请判断以下哪个说法是正确的( )</p>
<p>在SQL中，下面对于数据定义语言(DDL)描述正确的是(&nbsp;&nbsp;)</p>
<p>请判断以下哪条语句的语法是错误的（）</p>
<p>在MYSQL中，删除student表中全部数据的命令正确的是(&nbsp;&nbsp;)</p>
<p>下列哪个关键字在select 语句中表示所有列(&nbsp;&nbsp;)</p>
<p>属于数据定义语言(DDL)的有？（&nbsp;）</p>
<p>下列关于创建、管理数据库的操作语句不正确的是（）</p>
<p>请判断以下哪条语句是给person表添加age字段( )</p>
<p>请判断以下哪个sql语句语法正确的是( )</p>
<p>表和表之间的关系有( )</p>
<p>查找条件为：姓名不是NULL的记录(&nbsp;)</p>
<p>&nbsp;SQL中，”AGE IN (20,22)”的语义是（ ）</p>
<p>在SQL语言中，条件“BETWEEN 20 AND 30”表示年龄在20到30之间，且（&nbsp;）</p>
<p>下面正确表示Employees表中有多少非NULL的Region列的SQL语句是</p>
<p>t_score(stu_id,sub_id,score)，即成绩表(学号，科目编号，成绩)。以下能够获取每个学生所有学科的平均成绩的选项是（）</p>
<p>若要求查找S表中，姓名的第一个字为王的学生学号和姓名。下面列出的SQL语句中，哪个是正确的（ ）</p>
<p>若要求“查询选修了3门以上（不包含3门）课程的学生的学生号”，正确的SQL语句是（ ）</p>
<p>以下关于表主键描述错误的是( )</p>
<p>如果一个字段的数据必须来源另一个表的主键,那么要在这个字段上建立（）</p>
<p>关于表和表之间的关系，以下哪个描述是多对多的关系&nbsp;( )</p>
<p>要删除students表中学生平均成绩(avg_grade)小于60分的记录, 下列SQL语句正确的是?</p>
<p>关于主键下列说法错误的是（）</p>
<p>以下聚合函数求平均数的是()</p>
<p>有如下表和数据：</p><p>表名：student</p><p>数据：id&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;&nbsp;&nbsp;&nbsp;age&nbsp;&nbsp;&nbsp;&nbsp;sex</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;张三&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;男</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;李四&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;女</p><p>请问，以下哪条SQL语句可以查询姓名为”李”开头的所有学员：（ ）</p>
<p>关于MySQL中的group by(分组)，以下说法正确的是（）</p>
<p>如何把 "Persons" 表中 "LastName" 列的 "Gates" 改为 "Wilson" ？</p>
<p>以下关于表外键描述错误的是( )</p>
<p>关于SQL中主外键说法错误的是（）</p>
<p>按照学生平均成绩(avg_grade) 升序排列将students表中的数据检索出来，下面SQL语句正确的是（）</p>
<p>假如有数据库：Employee，里面有”性别”字段：sex，”薪水”字段：salary，请补全下面的SQL语句，使其可以查询：男性员工和女性的员工的最高薪水。要求结果显示：性别，最高薪水两列。（请按顺序选择） select sex ‘性别’, _______________ from employee _______________</p>
<p>要删除表table1中的名为fk001的外键，正确的sql写法是( )</p>
<p>以下关于事务描述错误的是&nbsp;( )</p>
<p>以下描述错误的是&nbsp;(&nbsp;&nbsp;)</p>
<p>以下关于连接查询的描述正确的是( )</p>
<p>以下关于笛卡尔积现象描述正确的是( )</p>
<p>在sql语句中子查询返回多行结果时，可以采用下列哪种解决方式（ ）</p>
<p>有以下表格：</p><p>①&nbsp;科目表：Course</p><p>id&nbsp;&nbsp;&nbsp;&nbsp;cname&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cdesc</p><p>1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Java学科</p><p>2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IOS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IOS学科</p><p>3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Android&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安卓学科</p><p>4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;平面设计&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;平面设计学科</p><p>&nbsp;</p><p>②&nbsp;学员表：Student</p><p>id&nbsp;&nbsp;&nbsp;&nbsp;stuname&nbsp;&nbsp;&nbsp;&nbsp;stuage&nbsp;&nbsp;&nbsp;&nbsp;stusex&nbsp;&nbsp;&nbsp;&nbsp;cid</p><p>1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;张三&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;22&nbsp;&nbsp;&nbsp;&nbsp;男&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</p><p>2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;李四&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;21&nbsp;&nbsp;&nbsp;&nbsp;男&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2</p><p>3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;王五&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;19&nbsp;&nbsp;&nbsp;&nbsp;女&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</p><p>请问，以下哪条SQL语句可以查询出Java学科或IOS学科的所有学员的名字：（ ）</p>
<p>有如下表和数据：</p><p>①&nbsp;category（分类表）</p><p>cid&nbsp;&nbsp;&nbsp;&nbsp;cname&nbsp;&nbsp;&nbsp;&nbsp;cdesc</p><p>1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;手机&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;手机类别</p><p>2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;家电&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;家电类别</p><p>3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;外设&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;电脑外设类别</p><p>&nbsp;</p><p>②&nbsp;product（产品表）</p><p>pid&nbsp;&nbsp;&nbsp;&nbsp;pname&nbsp;&nbsp;&nbsp;&nbsp;price&nbsp;&nbsp;&nbsp;&nbsp;pdate(上市日期)&nbsp;&nbsp;&nbsp;&nbsp;cid(分类id)</p><p>1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IPhone7&nbsp;&nbsp;&nbsp;7680&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2016-01-03&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</p><p>3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;荣耀6X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2680&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2017-02-03&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</p><p>3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;索尼电视&nbsp;&nbsp;&nbsp;7200&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2017-03-30&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2</p><p>4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;篮球&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;58&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2017-03-01&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(NULL)</p><p>请问，以下哪条语句可以查询出所有商品，包括没有分类的商品信息：（&nbsp;）</p>
<p>下面关于SQL数据查询操作描述正确的有：（）</p>
<p>以下内容关于stmt对象操作数据，正确的描述是（）</p><p>Class.forName("com.mysql.jdbc.Driver");</p><p>Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/test","root","root");</p><p>System.out.println(conn);</p><p>Statement stmt = conn.createStatement();</p>
<p>以下关于jdbc查询emp数据表正确的是（）</p><p>Class.forName("com.mysql.jdbc.Driver");</p><p>Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/test","root","root");</p><p>Statement stmt = conn.createStatement();</p><p>String sql = "select * from emp";</p><p>ResultSet rs = stmt.executeQuery();</p>
<p>以下关于jdbc查询emp数据表正确的是（）</p><p>Class.forName("com.mysql.jdbc.Driver");</p><p>Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/test","root","root");</p><p>Statement stmt = conn.createStatement();</p><p>String sql = "select * from emp";</p><p>ResultSet rs = stmt.executeQuery();</p>
<p>以下关于jdbc查询emp数据表正确的是（）</p><p>Class.forName("com.mysql.jdbc.Driver");</p><p>Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/test","root","root");</p><p>Statement stmt = conn.createStatement();</p><p>String sql = "select * from emp";</p><p>ResultSet rs = stmt.executeQuery();</p>
<p>请选择正确的JDBC事务使用步骤（）</p><p>①. 注册驱动 ②. 开启事务 ③. 使用Statement执行SQL ④. 提交或回滚事务 ⑤. 关闭资源 ⑥.获取连接 ⑦. 获取到Statement</p>
<p>以下关于事务的描述错误的是（）</p>
<p>关于DriverManager类下列说法正确的是（）</p>
<p>关于DriverManager类下列说法正确的是（）</p>
<p>以下对PreparedStatement 对象描述正确的是（）</p>
<p>在未使用C3P0连接池之前的状态说法错误的是（）</p>
<p>在未使用C3P0连接池之前的状态说法错误的是（）</p>
<p>以下关于使用C3P0连接池的好处说法正确的有（）</p>
<p>以下关于C3P0配置文件中参数说法正确的是（）</p>
<p>关于DRUID连接池的常用配置参数描述错误的是（）</p>
<p>以下有关Lambda表达式说法错误的是?&nbsp;（）</p>
<p>有一个Student类，代码如下</p><p>public class Student{</p><p>&nbsp;&nbsp;private int age;</p><p>&nbsp;&nbsp;public Student(int age) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;this.age = age;</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;public void setAge(int age){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;this.age=age;</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;public int getAge(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return age;</p><p>&nbsp;&nbsp;}</p><p>}</p><p>有一个测试类，代码如下：</p><p>public class Test{</p><p>&nbsp;&nbsp;public static void main(String[] args) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ArrayList&lt;Student&gt; list = new ArrayList();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;list.add(new Student(22));</p><p>&nbsp;&nbsp;&nbsp;&nbsp;list.add(new Student(32));</p><p>&nbsp;&nbsp;&nbsp;&nbsp;list.add(new Student(28));</p><p>&nbsp;&nbsp;&nbsp;&nbsp;list.add(new Student(25));</p><p>&nbsp;&nbsp;}</p><p>}</p><p>对ArrayList&lt;Student&gt;集合中的Student对象按照年龄进行排序，下面代码正确的是? （）</p>
<p>使用Lambda表达式创建线程，下面选项错误的是? （）</p>
<p>有一个数组Integer[] arr={9,1,5,2,3,8,6,7,9};下面选项可以对数组进行降序排列的是? （）</p>
<p>有一个接口如下</p><p>public interface Phone {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void call(String message);</p><p>}</p><p>调用call(String message)方法，以下代码错误的是?&nbsp;（）</p>
<p>观察以下代码</p><p>public interface Animal {</p><p>&nbsp;&nbsp;&nbsp;public abstract void eat(String some);</p><p>}</p><p>public class Feeder {</p><p>&nbsp;&nbsp;&nbsp;public static void feed(Animal a,String some){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a.eat(some);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>}</p><p>下面哪个选项能输出"猫吃鱼"? (&nbsp;&nbsp;)</p>
<p>下列关于函数式接口的描述, 错误的是 : (&nbsp;&nbsp;)</p>
<p>下列哪个接口不是函数式接口 : (&nbsp;&nbsp;)</p>
<p>我们定义了一个函数式接口Inter, 并定义了一个方法使用该接口.</p><p>@FunctionalInterface</p><p>public interface Inter{</p><p>&nbsp;&nbsp;&nbsp;void show();</p><p>}</p><p>public void method(Inter inter){</p><p>&nbsp;&nbsp;&nbsp;inter.show();</p><p>}</p><p>下列哪个选项可以成功调用method方法 : (&nbsp;&nbsp;)</p>
<p>下列接口中哪个接口为无参, 无返回值的函数式接口 : (&nbsp;&nbsp;)</p>
<p>&nbsp;我们定义了一个函数式接口Inter, 并定义了一个方法使用该接口.</p><p>@FunctionalInterface</p><p>public interface Inter{</p><p>&nbsp;&nbsp;&nbsp;String concat(String str1, String str2);</p><p>}</p><p>public void method(Inter inter,String str1, String str2){</p><p>&nbsp;&nbsp;&nbsp;System.out.println(inter.concat(str1, str2));</p><p>}</p><p>下列哪个选项可以成功调用method方法 : (&nbsp;&nbsp;)</p>
<p>下列哪个为有参数、有返回值的函数式接口 : (&nbsp;&nbsp;)</p>
<p>下列说法错误的是 : (&nbsp;&nbsp;)</p>
<p>我们知道, Supplier为JDK为我们提供的函数式接口.</p><p>@FunctionalInterface</p><p>public interface Supplier&lt;T&gt; {</p><p>&nbsp;&nbsp;&nbsp;T get();</p><p>}</p><p>在测试类中定义getSupplier方法, 用来返回该接口的实例.</p><p>public Supplier&lt;String&gt; getSupplier(){</p><p>&nbsp;&nbsp;&nbsp;方法体;</p><p>}</p><p>那么下列关于该方法的实现, 错误的为 : (&nbsp;&nbsp;&nbsp;)</p>
<p>定义一个学生类 Student, 含有成员方法study</p><p>public void study(String name){</p><p>&nbsp;&nbsp;&nbsp;System.out.println(name+"爱学习");</p><p>}</p><p>存在一个函数式接口, 其抽象方法show的预期行为与学生类的study方法一致.</p><p>@FunctionalInterface</p><p>public interface Inter{</p><p>&nbsp;&nbsp;&nbsp;void show(String str);</p><p>}</p><p>在测试类中, 存在一个方法, 将该函数式接口与字符串作为方法的参数.</p><p>private static void method(Inter i,String str) {</p><p>&nbsp;&nbsp;&nbsp;i.show(str);</p><p>}</p><p>接着, 我们在main方法中创建了学生类的对象Student stu = new Student();.</p><p>那么问题来了, 下面哪种方式会导致method方法 调用失败 :(&nbsp;)</p>
<p>定义一个Person类, 注意观察其构造方法,</p><p>private String name;</p><p>public Person(){}</p><p>public Person(String name){this.name = name;}</p><p>public String toString() {return "Person [name=" + name + "]";}</p><p>&nbsp;</p><p>接着, 我们定义一个函数式接口,</p><p>&nbsp;</p><p>@FunctionalInterface</p><p>interface PersonBuilder{</p><p>&nbsp;&nbsp;&nbsp;Person build();</p><p>}</p><p>&nbsp;</p><p>接着, 我们定义了一个方法用来使用该接口,</p><p>&nbsp;</p><p>public static void print(PersonBuilder b,String name){</p><p>&nbsp;&nbsp;&nbsp;Person person = b.build();</p><p>&nbsp;&nbsp;&nbsp;System.out.println(person);</p><p>}</p><p>&nbsp;</p><p>当我们在main方法中调用print(Person::new,"尼古拉斯-赵四");时, 会输出 : (&nbsp;)</p>
<p>下列表述错误的是 : (&nbsp;&nbsp;)</p>
<p>下列获取流的方式, 错误的是: (&nbsp;&nbsp;)</p>
<p>观察下列代码</p><p>Integer[] sixNums = {1, 2, 3, 4, 5, 6};</p><p>Integer[] evens = Stream.of(sixNums).filter(n -&gt; n%2 == 0).toArray(Integer[]::new);</p><p>&nbsp;</p><p>请问，得到数组evens中的结果是什么?&nbsp;(&nbsp;&nbsp;)</p>
<p>观察下列代码，求最终结果：(&nbsp;&nbsp;)</p><p>Stream&lt;String&gt; original = Stream.of("Hello.java", "java编程思想.pdf", "IOS开发快速入门.pdf", "stream.java","小葵花宝典.txt","如何学好java.txt");</p><p>Stream&lt;String&gt; result = original.filter(s -&gt; s.contains("java")).skip(1);</p><p>System.out.println(result.count());</p>
<p>下列哪种方式的转换是正确的 : (&nbsp;&nbsp;）</p>
<p>下列哪种方式的转换是正确的 : (&nbsp;&nbsp;）</p>
<p>请问File类中获取文件或者文件夹名字的方法是？ 最终结果：(&nbsp;)</p>
<p>请问File类中判断一个路径指向的是文件的方法是？最终结果：(&nbsp;)</p>
<p>请问File类中判断一个路径指向的是文件夹的方法是？最终结果：(&nbsp;&nbsp;)</p>
<p>请问以下哪个选项是相对路径？最终结果：(&nbsp;&nbsp;)</p>
<p>关于File对象创建错误的是（ ）</p>
<p>下列File类的方法应用说法正确的是（ ）</p>
<p>File类型中定义了什么方法来判断一个文件是否存在？（&nbsp;）</p>
<p>观察下列代码</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileOutputStream fos = new FileOutputStream("测试.txt");</p><p>&nbsp;&nbsp;&nbsp;fos.write(97);</p><p>&nbsp;&nbsp;&nbsp;fos.close();</p><p>}</p><p>请问,文件当中显示的结果是什么?&nbsp;(&nbsp;)</p>
<p>观察下列代码</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileOutputStream fos = new FileOutputStream("测试.txt");</p><p>&nbsp;&nbsp;&nbsp;fos.write(g);</p><p>&nbsp;&nbsp;&nbsp;fos.close();</p><p>&nbsp;&nbsp;&nbsp;fos.write(d);</p><p>&nbsp;&nbsp;&nbsp;fos.close();</p><p>}</p><p>请问,文件当中显示的结果是什么?(&nbsp;&nbsp;)</p>
<p>递归是什么含义？(&nbsp;&nbsp;)</p>
<p>关于递归的描述正确的是（　）(多选)&nbsp;</p>
<p>观察下列代码</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileInputStream fis = new FileInputStream("测试.txt");</p><p>&nbsp;&nbsp;&nbsp;int temp;</p><p>&nbsp;&nbsp;&nbsp;while(需要补充的代码){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(temp);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;fis.close();</p><p>}</p><p>请选择需要填补的代码 (&nbsp;)</p>
<p>"测试.txt"当中内容如下:</p><p>​abc</p><p>观察下面代码</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileInputStream fis = new FileInputStream("测试.txt");</p><p>&nbsp;&nbsp;&nbsp;int temp;</p><p>&nbsp;&nbsp;&nbsp;while((temp=fis.read())!=-1){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(temp);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;fis.close();</p><p>}</p><p>运行代码后,控制台显示结果是?(&nbsp;&nbsp;)</p>
<p>在“测试文件.txt”中，有如下数据：</p><p>​abc</p><p>请分析，以下代码执行后，文件中的数据为： (&nbsp;&nbsp;)</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileInputStream fis = new FileInputStream("测试文件.txt");</p><p>&nbsp;&nbsp;&nbsp;FileOutputStream fos = new FileOutputStream("测试文件.txt");</p><p>&nbsp;&nbsp;&nbsp;int temp;</p><p>&nbsp;&nbsp;&nbsp;while((temp = fis.read()) != -1){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fos.write(temp);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;fis.close();</p><p>&nbsp;&nbsp;&nbsp;fos.close();</p><p>}</p>
<p>想要在 测试文件 当中显示数据是 97</p><p>请问在 下面代码 fw.write() 的括号当中,应该选择哪一项? (&nbsp;&nbsp;)</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileWriter fw = new FileWriter("测试文件.txt");</p><p>&nbsp;&nbsp;&nbsp;fw.write(需要填写代码);</p><p>&nbsp;&nbsp;&nbsp;fw.close();</p><p>}</p>
<p>想要在 测试文件 当中显示数据是 helloworld 其中hello是第一行,world是第二行。在Windows操作系统中有效</p><p>代码如下:</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileWriter fw = new FileWriter("测试文件.txt");</p><p>&nbsp;&nbsp;&nbsp;fw.write("需要填写代码");</p><p>&nbsp;&nbsp;&nbsp;fw.close();</p><p>}</p><p>请问：在需要填写代码处，应该如下填写代码? (&nbsp;&nbsp;)</p>
<p>使用Java IO流实现对文本文件的读写过程中，需要处理下列（&nbsp;&nbsp;）异常。</p>
<p>在Java中，下列关于读写文件的描述错误的是（&nbsp;&nbsp;&nbsp;）。</p>
<p>在Java的IO操作中，（ ）方法可以用来刷新流的缓冲(多选)。</p>
<p>在测试文件当中，数据如下：</p><p>ABC</p><p>下面代码执行之后</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileReader fr = new FileReader("测试文件.txt");</p><p>&nbsp;&nbsp;&nbsp;int temp;</p><p>&nbsp;&nbsp;&nbsp;while((temp=fr.read())!=-1){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(temp);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;fr.close();</p><p>}</p><p>请问控制台显示结果是?(&nbsp;&nbsp;)</p>
<p>在测试文件当中，ABC在一行，数据如下：</p><p>ABC</p><p>下面代码执行之后</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileReader fr = new FileReader("测试文件.txt");</p><p>&nbsp;&nbsp;&nbsp;int ch;</p><p>&nbsp;&nbsp;&nbsp;while(true){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=fr.read();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ch==-1){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print((char)ch);</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;fr.close();</p><p>}</p><p>请问控制台显示结果是? (&nbsp;)</p>
<p>在测试文件当中，数据如下：</p><p>​abcdefgh</p><p>完成文件一次读取一个字符数组的操作</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileReader fr = new FileReader("测试文件.txt");</p><p>&nbsp;&nbsp;&nbsp;int len;</p><p>&nbsp;&nbsp;&nbsp;char[] chArr = new char[3];</p><p>&nbsp;&nbsp;&nbsp;while(填补代码){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(new String(chArr,0,len));</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;fr.close();</p><p>}</p><p>&nbsp;</p><p>请选择正确的填补代码的选项? (&nbsp;)</p>
<p>在测试文件当中，数据如下：</p><p>​abcdefgh</p><p>完成文件一次读取一个字符数组的操作</p><p>public static void main(String[] args) throws Exception {</p><p>&nbsp;&nbsp;&nbsp;FileReader fr = new FileReader("测试文件.txt");</p><p>&nbsp;&nbsp;&nbsp;int len;</p><p>&nbsp;&nbsp;&nbsp;char[] chArr = new char[3];</p><p>&nbsp;&nbsp;&nbsp;while((len = fr.read(chArr))!=-1){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(new String(chArr,len,0));</p><p>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;fr.close();</p><p>}</p><p>请选择运行的结果? (&nbsp;&nbsp;)</p>
<p>已知在项目的模块atguigu下存在123.txt文件，文件中具有如下数据：</p><p>abc你好</p><p>观察下列代码，求最终结果：(&nbsp;&nbsp;)</p><p>BufferedInputStream bufin = new BufferedInputStream(new FileInputStream("atguigu123.txt"));//atguigu表示模块名</p><p>byte[] b = new byte[4];</p><p>int len = 0;</p><p>while ((len = bufin.read(b)) != -1) {System.out.println(new String(b));}</p><p>bufin.close();</p>
<p>已知在项目的模块atguigu下存在123.txt文件，文件中具有如下数据：</p><p>ab</p><p>观察下列代码</p><p>BufferedInputStream buf = new BufferedInputStream(new FileInputStream("atguigu123.txt"));//atguigu表示模块名</p><p>int b1 = buf.read();System.out.println(b1);</p><p>int b2 = buf.read();System.out.println(b2);</p><p>int b3 = buf.read();System.out.println(b3);</p><p>buf.close();</p><p>请问，在控制台得到的结果是什么?&nbsp;(&nbsp;&nbsp;)</p>
<p>已知在项目目录下有“atguigu”文件夹，观察下列代码，执行后产生的结果是：（ ）</p><p>FileOutputStream fo = new FileOutputStream("atguiguout.txt");</p><p>fo.write("hello 程序员".getBytes());</p><p>fo.close();</p><p>fo.write("hello 尚硅谷".getBytes());</p>
<p>已知在项目的模块atguigu下存在copy.txt文件，文件中具有如下数据：</p><p>尚硅谷</p><p>观察下列代码，求最终结果：(&nbsp;&nbsp;)</p><p>BufferedReader br = new BufferedReader(new FileReader("atguigucopy.txt"));</p><p>BufferedWriter bw = new BufferedWriter(new FileWriter("atguigucopy.txt"));</p><p>String line=null;</p><p>while((line=br.readLine())!=null){bw.write(line);}</p><p>bw.close();</p><p>br.close();</p>
<p>当前项目路径下存在一个atguigu目录，观察下列代码，求最终结果：(&nbsp;&nbsp;)</p><p>BufferedWriter bw = new BufferedWriter(new FileWriter("atguigubw.txt"));</p><p>bw.write("硅谷学院");</p><p>bw.write("尚硅谷");</p><p>bw.newLine();</p><p>bw.write("尚硅谷程序员");</p><p>bw.close();</p>
<p>以下关于编码表阐述错误的是：(&nbsp;&nbsp;)</p>
<p>以下关于编码表阐述错误的是：(&nbsp;&nbsp;)</p>
<p>关于序列化流的描述正确的是?（ )</p>
<p>假设当前项目根目录下test.txt文件内容为www.atguigu.com；以下代码运行后test.txt文件中的内容是（&nbsp;&nbsp;）。</p><p>public class TestBuffered {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public static void main(String[] args) throws IOException {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferedReader br =</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new BufferedReader(new FileReader("test.txt"));</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferedWriter bw =</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new BufferedWriter(new FileWriter("test.txt"));</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String str = br.readLine();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(str !=null){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bw.write(“官网：”+str);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bw.flush();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;br.close();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bw.close();&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>}</p>
<p>( )是转换流，可以将字节流转换成字符流，是字节流通往字符流之间的桥梁</p>
<p>已知在硬盘: F:4.txt&nbsp;文件中保存字符串数据："你好"&nbsp;。</p><p>注意：</p><p>1)该文件以GBK编码保存的。</p><p>2)idea工作环境默认编码方式是UTF-8。</p><p>观察下列代码，求最终结果：(&nbsp;&nbsp;)</p><p>InputStreamReader isr = new InputStreamReader(new FileInputStream("F:4.txt"));</p><p>int read;</p><p>while ((read = isr.read()) != -1) {System.out.print((char)read);}</p><p>isr.close();</p>
<p>已知在硬盘: D:123.txt&nbsp;文件中保存字符串数据："硅谷学院"&nbsp;。</p><p>注意：</p><p>1)该文件以GBK编码保存的。</p><p>2)idea工作环境默认编码方式是UTF-8。</p><p>观察下列代码，求最终结果：(&nbsp;)</p><p>&nbsp;</p><p>InputStreamReader isr = new InputStreamReader(new FileInputStream("D:123.txt"),"GBK");</p><p>int read;</p><p>while ((read = isr.read()) != -1) { System.out.print((char)read);}</p><p>isr.close();</p>
<p>已知idea工作环境默认编码方式是UTF-8。</p><p>观察下列代码，以下说法正确的是：(&nbsp;&nbsp;)</p><p>OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream("E:out.txt"));</p><p>osw.write("你好");</p><p>osw.close();</p>
<p>已知在硬盘: F:4.txt&nbsp;文件中保存字符串数据：</p><p>尚硅谷</p><p>尚硅谷程序员</p><p>硅谷大厂</p><p>硅谷学院</p><p>&nbsp;</p><p>注意：</p><p>1)该文件以GBK编码保存的。</p><p>2)idea工作环境默认编码方式是UTF-8。</p><p>观察下列代码，以下说法正确的是：(&nbsp;&nbsp;)</p><p>&nbsp;</p><p>InputStreamReader isr = new InputStreamReader(new FileInputStream("F:4.txt"),"GBK");</p><p>OutputStreamWriter w = new OutputStreamWriter(new FileOutputStream("F:3.txt"),"utf8");</p><p>char[] buffer = new char[1024];</p><p>int len = -1;</p><p>while((len = isr.read(buffer)) != -1){w.write(buffer, 0, len);}</p><p>isr.close();</p><p>w.close();</p>
<p>已知在项目的模块atguigu下存在一个文件person.txt，里面的内容如下：</p><p>&nbsp;</p><p>王五=南京</p><p>张三=上海</p><p>李四=北京</p><p>&nbsp;</p><p>观察下列代码，最终结果是：(&nbsp;&nbsp;)</p><p>Properties prop = new Properties();</p><p>prop.load(new FileReader("atguiguperson.txt"));</p><p>Set&lt;String&gt; keys = prop.stringPropertyNames();</p><p>for (Iterator&lt;String&gt; it = keys.iterator(); it.hasNext();) {</p><p>String key = it.next();</p><p>String value = prop.getProperty(key);</p><p>System.out.println(key+"---"+value);</p><p>}</p>
<p>已知存在一个文件：D:user.txt，里面的内容如下：</p><p>username=zhangsan</p><p>password=123</p><p>观察下列代码，最终结果是：(&nbsp;&nbsp;)</p><p>Properties prop = new Properties();</p><p>prop.load(new FileReader("D:user.txt"));</p><p>String username = prop.getProperty("username");</p><p>String password = prop.getProperty("password");</p><p>if("zhangsan".equals(username)&amp;&amp;"123".equals(password)){System.out.println("登录成功");}else{System.out.println("用户名或者密码错误");}</p>
<p>观察下列代码，最终结果是：(&nbsp;&nbsp;)</p><p>客户端代码：</p><p>Socket s = new Socket("127.0.0.1", 10000);</p><p>OutputStream os = s.getOutputStream();</p><p>os.write("hello，TCP,我来了".getBytes());</p><p>s.close();</p><p><br></p><p>服务端代码：</p><p>&nbsp;</p><p>ServerSocket serverSocket = new ServerSocket(9999);</p><p>Socket socket = serverSocket.accept();</p><p>InputStream is = socket.getInputStream();</p><p>byte[] buf=new byte[1024];</p><p>int len=0;</p><p>while((len=is.read(buf))!=-1){System.out.println(new String(buf,0,len));}</p>
<p>以下关于TCP传输协议描述错误的是：(&nbsp;&nbsp;)</p>
<p>以下关于TCP传输协议下文件的上传描述错误的是： (&nbsp;&nbsp;&nbsp;)</p>
<p>以下关于CS架构说法错误的是：(&nbsp;&nbsp;)</p>
<p>以下描述不正确的是（ ）</p>
<p>以下描述错误的有(多选)（&nbsp;）</p>
<p><span style="color: rgb(77, 77, 77);">&nbsp;MYbatis中的SqlSession是调用哪个方法获取代理对象（）</span></p>
<p><span style="color: rgb(77, 77, 77);">实现mybatis完成插入操作并返回自增主键id的标签的是？</span></p>
<p><span style="color: rgb(77, 77, 77);">springmvc的RESTful风格的URL中，能够完成参数绑定的注解是（）</span></p>
<p><span style="color: rgb(77, 77, 77);">在一个Mybatis的应用中，关于SqlessionFactoyBuilder，SqlsessionFactory以及Sqlsession范围和生命周期，以下说法错误的是（ ）</span></p>
<p><span style="color: rgb(77, 77, 77);">以下关于Mybatis的使用场景描述错误的是（）</span></p>
<p><span style="color: rgb(77, 77, 77);">在Mybatis中，以下关于缓存说法错误的是（ ）</span></p>
<p><span style="color: rgb(77, 77, 77);">在mybatis中，下列关于ResultType所发错误的是（）</span></p>
<p><span style="color: rgb(77, 77, 77);">mybatis映射文件中parameterType哪些情况，#{}中间的内容可以随便填写（）</span></p>
<p><span style="color: rgb(77, 77, 77);">SpringMVc中哪些驱动赋值不支持( )</span></p>
<p><span style="color: rgb(77, 77, 77);">以下哪个是springmvc的处理器？</span></p>
<p><span style="color: rgb(77, 77, 77);">springmvc的RESTful风格的URL中，能够完成参数绑定的注解是？</span></p>
<p>关于git push推送，下列说法错误的是( )</p>
<p>如果把项目中文件 hello.java 的内容破坏了，如何使其还原至原始版本？</p>
<p><span style="color: rgb(77, 77, 77);">下列关于git的描述不恰当的一项是( )</span></p>
<p><span style="color: rgb(77, 77, 77);">创建名为test的本地分支( )</span></p>
<p><span style="color: rgb(77, 77, 77);">对于下列git命令，说法错误的是：( )</span></p>
<p>如何让所有的项目都会默认使用 git 配置的名字或邮箱( )</p>
<p><span style="color: rgb(77, 77, 77);">下列哪个git命令不是合并代码用的：( )</span></p><p><span style="color: rgb(77, 77, 77);"> </span></p><p><span style="color: rgb(77, 77, 77);"> </span></p>
<p>git init的作用是( )<span style="color: rgb(77, 77, 77);"> </span></p>
<p><span style="color: rgb(34, 34, 34);">以下说法正确的是 （）</span></p>
<p><span style="color: rgb(34, 34, 34);">Elasticsearch请求方式包括如下内容（）</span></p>
<p>下面有关广播变量的说法中，正确的是（ ）</p>
<p>下列有关thymeleaf基础对象描述正确的是（）</p>
<p>下列标签中，那个是可以用来引用静态资源的（）</p>
<p>在thymeleaf中，有关循环判断的语句 正确的是（）</p>
<p>下列说法中正确的是（）</p>
<p>关于下列Vue代码写法错误的是&nbsp;&nbsp;</p>
<p>下列生命周期函数执行顺序正确的是&nbsp;</p>
<p>关于v-for指令下面输出结果正确的是&nbsp;&nbsp;</p><p>object:｛ title：‘尚硅谷’&nbsp;｝</p><p><span style="color: rgb(41, 115, 183);">&lt;div v-for=</span>"(key,value,index) in object"<span style="color: rgb(41, 115, 183);">&gt;</span></p><p><span style="color: rgb(82, 82, 82); background-color: rgb(248, 248, 248);">&nbsp;{{ </span>key<span style="color: rgb(82, 82, 82); background-color: rgb(248, 248, 248);"> }}: {{ </span>value<span style="color: rgb(82, 82, 82); background-color: rgb(248, 248, 248);"> }}:{{index}}</span></p><p><span style="color: rgb(41, 115, 183);">&lt;/div&gt;</span></p>
<p>下列关于vue过滤器使用错误的是&nbsp;</p>
<p>下列关于Vue组件描述错误的是&nbsp;&nbsp;</p>
<p>下列关于props（value值为对象类型）使用错误的是&nbsp;</p>
<p>下列关于自定义事件描述错误的是&nbsp;</p>
<p>下列关于Vue指令简写方式错误的是&nbsp;</p>
<p>下列关于生命周期说明错误的是&nbsp;</p>
<p>下列关于vue-router中使用props描述错误的是&nbsp;</p>
<p>虚拟DOM的创建方式错误的是&nbsp;</p>
<p>关于jsx语法规则描述错误的是&nbsp;</p>
<p>下列不是表达式的是&nbsp;&nbsp;</p>
<p>关于类组件内部方法描述正确的是&nbsp;</p>
<p>关于props使用错误的是&nbsp;&nbsp;</p>
<p>下列关于ref使用正确的是&nbsp;</p>
<p>关于React事件处理说明错误的是&nbsp;</p>
<p>关于受控组件和非受控组件描述错误的是</p>
<p>关于高阶函数描述错误的是&nbsp;</p>
<p>在React中条件判断渲染及列表渲染描述错误的是&nbsp;</p>
<p>下列命令简写错误的是</p>
<p>关于v-bind和v-model描述正确的是&nbsp;&nbsp;&nbsp;</p>
<p>在vue中绑定el和data写法错误的是&nbsp;&nbsp;</p>
<p>关于Vue中数据代理描述错误的是&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>关于Vue中事件绑定错误的是</p>
<p>关于计算属性概念描述错误的是&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>关于监视属性watch描述错误的是&nbsp;&nbsp;</p>
<p>关于Vue生命周期中描述错误的是&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>关于以下指令描述错误的是&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>关于ref描述正确的是&nbsp;&nbsp;</p>
<p><span style="color: rgb(77, 77, 77);">想创建一个文件，通过流的方式读取数据，该怎么做？</span></p>
<p><span style="color: rgb(34, 34, 34);">Node.js的Path模块中，用于获取文件目录的函数是()&nbsp;&nbsp;</span></p>
<p>关于原型对象以下说法错误的是</p>
<p>以下不是闭包特点的是</p>
<p><span style="color: rgb(51, 51, 51);">关于下面这段&nbsp;JavaScript&nbsp;代码说法正确的是</span></p><p>var i = 0;</p><p>(function fn() {</p><p>&nbsp;console.log(i++);</p><p>&nbsp;setTimeout(fn, 1000);</p><p>})();</p>
<p><span style="color: rgb(51, 51, 51);">对以下Javascript代码运行结果的描述正确的是:()</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;&nbsp;var a = {},</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;&nbsp;b = { key: b },</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;&nbsp;c = { key: c };</span></p><p><br></p><p><span style="color: rgb(51, 51, 51);">&nbsp;&nbsp;a[b] = 123;</span></p><p><span style="color: rgb(51, 51, 51);">&nbsp;&nbsp;a[c] = 456</span></p>
<p><span style="color: rgb(51, 51, 51);">以下JavaScript程序输出什么()</span></p><p>var x="undefined";</p><p>var y="false";</p><p>var z="";</p><p>function assert(xVar){</p><p>&nbsp;&nbsp;if(xVar){</p><p>&nbsp;&nbsp;&nbsp;console.log(true);</p><p>&nbsp;&nbsp;}else{&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;console.log(false);</p><p>}</p><p>}</p><p>assert(x);</p><p>assert(y);</p><p>assert(z);</p>
<p>有如下JavaScript程序:</p><p><br></p><p>&nbsp;var a = baidu;</p><p>&nbsp;var b = new String(baidu);</p><p>&nbsp;console.log(typeof a);</p><p>&nbsp;console.log(typeof b);</p><p><br></p><p><span style="color: rgb(51, 51, 51);">会输出什么?</span></p>
<p><span style="color: rgb(51, 51, 51);">有如下JavaScript程序:</span></p><p><br></p><p><span style="color: rgb(51, 51, 51);">var arr=[1,2,3];</span></p><p>arr.shift();</p><p>arr.push(1);</p><p>arr.unshift(2);</p><p>var arrNew=arr.concat([1,2]);</p><p>console.log(arrNew);</p><p><br></p><p><span style="color: rgb(51, 51, 51);">在浏览器中运行会结果是什么</span></p>
<p><span style="color: rgb(51, 51, 51);">以下&nbsp;javascript&nbsp;代码，在浏览器中运行的结果是</span></p><p><br></p><p>&nbsp;&nbsp;function foo() {</p><p>&nbsp;&nbsp;&nbsp;console.log(first)</p><p>&nbsp;&nbsp;&nbsp;setTimeout(function(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(second);</p><p>&nbsp;&nbsp;&nbsp;}, 5);</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;for(var i = 0 ; i &lt; 99999999 ; i ++){</p><p>&nbsp;&nbsp;&nbsp;foo()</p><p>&nbsp;&nbsp;}</p>
<h3><strong>以下哪一项不属于Hadoop可以运行的模式( )</strong></h3>
<h3><strong>Hadoop的作者是下面哪一位( )</strong></h3><h3><br></h3>
<h3>&nbsp;<strong>下列哪个程序通常与NameNode在同一个节点启动( )</strong></h3><h3><br></h3><h3><br></h3>
<h3><strong>Hadoop2.7.3开始的版本后，HDFS默认Block Size的大小是( )</strong></h3><h3><br></h3><h3><br></h3><h3><br></h3>
<h3>下列哪项通常是集群的最主要瓶颈( ）</h3><h3><br></h3>
<p>请写出以下代码执行结果</p><p>var&nbsp;name2&nbsp;=&nbsp;"The&nbsp;Window";</p><p>var&nbsp;name2 = "The&nbsp;name2";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;object2&nbsp;=&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name2:&nbsp;"My&nbsp;Object",</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getNameFunc:&nbsp;function&nbsp;()&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;that&nbsp;=&nbsp;this;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;function&nbsp;()&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;that.name2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(object2.getNameFunc()());</p>
<p>请写出以下代码执行结果</p><p>var&nbsp;num;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;=&nbsp;123;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obj&nbsp;=&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num:&nbsp;456,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn:&nbsp;function&nbsp;()&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(num)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(this.num)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;=&nbsp;147</p><p>&nbsp;&nbsp;&nbsp;&nbsp;obj.fn()</p><p>&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;=&nbsp;789</p>
<p>请写出以下代码的打印结果</p><p>var&nbsp;x&nbsp;=&nbsp;10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;fn()&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(x);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;show(f)&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;x&nbsp;=&nbsp;20;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;x&nbsp;=&nbsp;30;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;show(fn);</p>
<p><span style="color: rgb(51, 51, 51);">下列代码的输出结果（）</span></p><p><br></p><p><span style="color: rgb(51, 51, 51);">var foo = "11"+2-"1";</span></p><p><span style="color: rgb(51, 51, 51);">console.log(foo);</span></p>
<p>以下代码的运行结果是（）</p><p>var&nbsp;test&nbsp;=&nbsp;1;&nbsp;</p><p>var&nbsp;demo&nbsp;=&nbsp;(function&nbsp;(a){</p><p>var&nbsp;test&nbsp;=&nbsp;2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;test++;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;a++;</p><p>&nbsp;})(test);</p><p>alert(test);&nbsp;</p><p>alert(demo);</p>
<p><span style="color: rgb(51, 51, 51);">以下表达式哪些为真？</span></p>
<p>function&nbsp;funcA(data)&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;data.key&nbsp;=&nbsp;data;</p><p>}</p><p>function&nbsp;funcB(data)&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;{};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.value&nbsp;=&nbsp;data;</p><p>}</p><p>var&nbsp;data&nbsp;=&nbsp;{&nbsp;key:&nbsp;key,&nbsp;value:&nbsp;value&nbsp;};</p><p>funcA(data);</p><p>funcB(data);</p><p>console.log(data.key);</p><p>console.log(data.value);</p>
<p><span style="color: rgb(51, 51, 51);">请给出这段代码的运行结果（ ）</span></p><p>var&nbsp;bb&nbsp;=&nbsp;1;</p><p>function&nbsp;aa(bb)&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;bb&nbsp;=&nbsp;2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;alert(bb);</p><p>};</p><p>aa(bb);</p><p>alert(bb);</p>
<p><span style="color: rgb(51, 51, 51);">阅读如下代码，请问两处console的输出结果为（）</span></p><p>var&nbsp;Product&nbsp;=&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;count:&nbsp;1,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;getCount:&nbsp;function&nbsp;()&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.count++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>};</p><p>console.log(Product.getCount());</p><p>var&nbsp;func&nbsp;=&nbsp;Product.getCount;</p><p>console.log(func());</p>
<p><span style="color: rgb(51, 51, 51);">以下程序执行后返回的结果是：(&nbsp;&nbsp;)</span></p><p>var&nbsp;p1&nbsp;=&nbsp;{</p><p>&nbsp;&nbsp;name:小明,</p><p>&nbsp;&nbsp;age:12,</p><p>&nbsp;&nbsp;action:function(where,doing){</p><p>&nbsp;&nbsp;&nbsp;console.log(this.age&nbsp;+&nbsp;岁的+this.name&nbsp;+&nbsp;在&nbsp;+&nbsp;where&nbsp;+&nbsp;doing);</p><p>&nbsp;&nbsp;}&nbsp;&nbsp;</p><p>}</p><p>var&nbsp;p2&nbsp;=&nbsp;{</p><p>&nbsp;&nbsp;name:小红,</p><p>&nbsp;&nbsp;age:15</p><p>}</p><p>console.log(p1.action.call(p2,操场上,运动))</p>
<p>以下代码执行后，array&nbsp;的结果是？</p><p>let&nbsp;array&nbsp;=&nbsp;[,1,,2,,3];</p><p>array&nbsp;=&nbsp;array.map((i)&nbsp;=&gt;&nbsp;++i)</p>
<p><span style="color: rgb(51, 51, 51);">以下哪些选项可以将集合A转化为数组？</span></p>
<p>执行以下程序段后，x的值是（ ）。</p><p>var&nbsp;x=0;</p><p>switch(++x)</p><p>{</p><p>case&nbsp;0:&nbsp;++x;</p><p>case&nbsp;1:&nbsp;++x;</p><p>case&nbsp;2:&nbsp;++x;</p><p>}</p>
<p><strong style="color: rgb(51, 51, 51);">Kafka 的设计时什么样的呢？</strong></p>
<p><strong style="color: rgb(51, 51, 51);">Kafka 的设计是什么样的呢？</strong></p>
<p>数据传输的事务定义有哪三种？</p>
<p>Kafka 存储在硬盘上的消息格式是什么？</p>
<p>Kafka 高效文件存储设计特点：</p>
<p>partition 的数据如何保存到硬盘</p>
<p>（场景题） 在开发过程中，有哪些开发调优习惯？</p>
<p>1.5版本之后，Spark Streaming可以动态控制数据接收速率来适配集群数据处理能力，调整什么参数去进行控制？</p>
<p class="ql-align-justify">通过哪个标签可以设置换行</p>
<p class="ql-align-justify">网页中,哪个字符用来表示空格</p>
<p class="ql-align-justify">下面哪个标签定义文档的头部</p>
<p class="ql-align-justify">下面标签定义正确的是</p>
<p class="ql-align-justify">下面哪个表示 “&gt;”</p>
<p class="ql-align-justify">我们代码主要放在哪个标签中,会真正在页面中显示出来</p>
<p>下列ES哪个操作命令是错误的？</p>
<p>下面哪个操作是Es模糊查询？</p>
<h2>Sqoop底层运行的任务是什么</h2>
<h2>Sqoop在导入数据的时候数据倾斜如何解决</h2><h2><br></h2>
<h2>项目在使用Sqoop数据导出遇到的问题</h2><h2><br></h2>
<h2>Flume 与 Kafka 的选择</h2><h2><br></h2>
<h2>flume 有哪些组件，flume 的 source、channel、sink 具体是做什么的？</h2>
<p>元素在页面上所占面积是以下哪个[单选题]</p>
<h3>下列选项中哪个出现了scala中的闭包？</h3>
<h3>Scala类型系统中Nil, Null, None, Nothing四个类型的区别？</h3>
<p><strong style="color: rgb(77, 77, 77);">以下哪个不是HDFS的守护进程？</strong></p>
<p>以下哪个标签用于引入公共资源的标签？</p>
<p>以下<span style="color: rgb(51, 51, 51);">Thymeleaf</span>哪些标签用于获取域对象的值</p>
<p>以下哪个不属于<span style="color: rgb(51, 51, 51);">Thymeleaf的内置对象 ？</span></p>
<p><span style="color: rgb(51, 51, 51);">Thymeleaf在MVC设计模式中扮演什么角色？</span></p>
<p>vue的一下哪个属性能实现双向绑定效果？</p>
<p>vue中v-if和v-show的区别，说法正确的有哪些？</p>
<p>在Vue的生命周期函数中，最早能够获取到data初始化数据的钩子函数是什么？</p>
<p>Vue中绑定事件的简写方式是什么？</p>
<p class="ql-align-justify">下列指令说法错误的是？</p>
<p class="ql-align-justify">下列Vue生命周期说法错误的是？</p>
<p><span style="color: rgb(51, 51, 51);">在vue&nbsp;2.x版本中，以下哪些是生命周期函数</span></p>
<p><span style="color: rgb(51, 51, 51);">vue框架采用了哪种模式实现的（&nbsp;&nbsp;&nbsp;）？</span></p>
<p><span style="color: rgb(51, 51, 51);">请选择下面代码输出1的次数</span></p><p><span style="color: rgb(51, 51, 51);"> var vm = new Vue({&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> el: #example,&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> data: {&nbsp;&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> message: Hello&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> },&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> computed: {&nbsp;&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> test: function () {&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> console.log(1)&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> return this.message&nbsp;&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> }&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> },&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> created: function (){&nbsp;&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> this.message = World&nbsp;&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> for (var i = 0; i &lt; 5; i++) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> console.log(this.test)&nbsp;&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> }&nbsp;&nbsp;</span></p><p><span style="color: rgb(51, 51, 51);"> }</span></p><p><span style="color: rgb(51, 51, 51);"> })</span></p>
<p><span style="color: rgb(51, 51, 51);">props在vue中的作用是</span></p>
<h5>vue的生命周期，执行顺序正确的是：</h5>
<h5>vue用于监听 DOM 事件的指令是:</h5><h5><br></h5>
<h5>以下遍历并获取索引的正确方式</h5><h5><br></h5><h5><br></h5>
<h5>v-show指令的特点是</h5><h5><br></h5><h5><br></h5>
<h5>vue创建方法错误的是</h5><h5><br></h5>
<h5><span style="color: rgb(13, 0, 22);">以下会打印：</span></h5><p>new Vue({</p><p>&nbsp;&nbsp;data: { a: 1, b: 2 },</p><p>&nbsp;&nbsp;created: function () {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(this.a)</p><p>&nbsp;&nbsp;},</p><p>&nbsp;&nbsp;mounted(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(this.b)</p><p>&nbsp;&nbsp;}</p><p>})</p>
<p><span style="color: rgb(13, 0, 22);">以下代码打印结果为:</span></p><p>﻿&lt;div id="app"&gt; {{ message.split().reverse().join() }} &lt;/div&gt;&nbsp;</p><p>&lt;script&gt; new Vue({ el: #app, data: { message: hello } }) &lt;/script&gt;</p>
<p><span style="color: rgb(13, 0, 22);">以下哪个是阻止默认事件的指令</span></p>
<p><span style="color: rgb(13, 0, 22);">以下获取动态路由{ path: ‘/user/:id’ }中id的值正确的是:</span></p>
<p><strong style="color: rgb(80, 80, 80);">vue当中的指令和它的用法不匹配的是</strong></p>
<p><span style="color: rgb(80, 80, 80);">下列关于vue的组件说法不正确的是</span></p>
<p><span style="color: rgb(80, 80, 80);">下面关于vue的声明周期说法不正确的是</span></p>
<p><span style="color: rgb(80, 80, 80);">下面关于js框架说法正确的是</span></p>
<p><span style="color: rgb(77, 77, 77);">条件渲染指令</span><strong style="color: rgb(77, 77, 77);"><em>v-if v-show</em></strong><span style="color: rgb(77, 77, 77);">，两者区别是什么？</span></p>
<p><span style="color: rgb(77, 77, 77);">vue中的单项数据流和双向数据绑定是什意思？</span></p>
<p><strong style="color: rgb(77, 77, 77);">v-show和v-if指令的相同点和不同点?</strong></p>
<p>下面那个引擎适合clickhouse的维度条件聚合场景？</p>
<p>下面对于ReplacingMergeTree引擎的说法正确的是？</p>
<p>clickhouse的megretree引擎的表在建表的时候，不能缺少的项是什么？</p>
<p>Linux中权限最大的账户是：</p>
<p>Linux中权限最大的账户是：</p>
<p>Linux中权限最大的账户是：</p>
<p>clickhouse副本配置分布式表之后，查询分布式表和普通表的区别是什么？</p>
<p>使用下面哪条命令可以为指定的文件建立一个硬链接</p>
<p>使用下面哪条命令可以为指定的文件建立一个硬链接</p>
<p>使用下面哪条命令可以为指定的文件建立一个硬链接</p>
<p>使用下面哪条命令可以为指定的文件建立一个硬链接</p>
<p>使用下面哪条命令可以为指定的文件建立一个硬链接</p>
<p>若要使用进程来结束进程，应该使用（ ）命令</p>
<p>若要使用进程来结束进程，应该使用（ ）命令</p>
<p>若要使用进程来结束进程，应该使用（ ）命令</p>
<p>若要使用进程来结束进程，应该使用（ ）命令</p>
<h1>clickhouse的OPTIMIZE&nbsp;操作的说法正确的是？</h1>
<p><span style="color: rgb(23, 35, 63);">若一台计算机的内存为128MB，则交换分区的大小通常是（ ）</span></p>
<p><span style="color: rgb(23, 35, 63);">若一台计算机的内存为128MB，则交换分区的大小通常是（ ）1111111111111</span></p>
<p><span style="color: rgb(23, 35, 63);">观察系统当前进程的运行情况的命令是</span></p>
<p><span style="color: rgb(77, 77, 77);">用 "rm -i",系统会提示什么来让你确认(&nbsp;&nbsp;)</span></p>
<p>以下json获取数据的方式正确的是？</p>
<p><span style="color: rgb(77, 77, 77);">JSON解析器常见的解析器有？</span></p>
